{"ast":null,"code":"var _jsxFileName = \"/Users/davidmash/Documents/portfolio/src/Components/AudioVisualizer.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport VisibilitySensor from 'react-visibility-sensor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AudioVisualizer(props) {\n  _s();\n  const [audioElement, setAudioElement] = useState(null);\n  const [loaded, setLoaded] = useState(false);\n  const canvasAreaRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const frequencyRef = useRef(null);\n  const backgroundRef = useRef(null);\n  const scrubBarRef = useRef(null);\n  const [play, setPlay] = useState(false);\n  const [mouseOverBottom, setMouseOverBottom] = useState(false);\n  const [isVisible, setIsVisible] = useState(true);\n  useEffect(() => {\n    if (audioElement) {\n      const audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n      const source = audioCtx.createMediaElementSource(audioElement);\n      const analyser = audioCtx.createAnalyser();\n      source.connect(analyser);\n      analyser.connect(audioCtx.destination);\n      const bufferLength = analyser.frequencyBinCount;\n      let dataArray = new Uint8Array(bufferLength);\n      function updateScrubBar() {\n        if (audioElement && scrubBarRef.current) {\n          let currentTime = audioElement.currentTime;\n          let duration = audioElement.duration;\n          let scrubBarValue = currentTime / duration * 100;\n          scrubBarRef.current.value = scrubBarValue;\n        }\n      }\n      audioElement.addEventListener(\"timeupdate\", updateScrubBar);\n      audioElement.src = fileInputRef.current && fileInputRef.current.files[0] ? URL.createObjectURL(fileInputRef.current.files[0]) : process.env.PUBLIC_URL + '/music/song.mp3';\n      audioElement.addEventListener(\"loadeddata\", () => {\n        setLoaded(true);\n        setIsVisible(true);\n      });\n      audioElement.addEventListener(\"ended\", () => {\n        setPlay(false);\n      });\n    }\n  }, [audioElement]);\n  useEffect(() => {}, [isVisible]);\n\n  // Initialize audio context and elements when the file input changes\n  function loadAudio() {\n    if (audioElement) {\n      audioElement.pause();\n      audioElement.currentTime = 0;\n    }\n    setAudioElement(new Audio());\n  }\n  function updatePlayback() {\n    if (audioElement && scrubBarRef.current) {\n      let scrubBarValue = scrubBarRef.current.value;\n      let currentTime = scrubBarValue / 100 * audioElement.duration;\n      audioElement.currentTime = currentTime;\n    }\n  }\n  function togglePlay() {\n    if (audioElement) {\n      if (audioElement.paused) {\n        audioElement.play();\n        setPlay(true);\n      } else {\n        audioElement.pause();\n        setPlay(false);\n      }\n    }\n  }\n  if (!audioElement) {\n    loadAudio();\n  }\n  return /*#__PURE__*/_jsxDEV(VisibilitySensor, {\n    onChange: setIsVisible,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: props.style,\n      className: \"canvas-area no-select\",\n      ref: canvasAreaRef,\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-header-container\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"main-header\",\n          style: play ? {\n            opacity: 0,\n            transition: \"2s opacity\"\n          } : {\n            opacity: 0.8,\n            transition: \"3s opacity\"\n          },\n          children: \"David Mash\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), loaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-panel\",\n        onClick: togglePlay,\n        children: play ? /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"\",\n          src: process.env.PUBLIC_URL + '/images/pause-button.png',\n          className: \"pause-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"\",\n          src: process.env.PUBLIC_URL + '/images/play-button.png',\n          className: \"play-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: frequencyRef,\n        id: \"frequency\",\n        onClick: togglePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: backgroundRef,\n        id: \"background\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"\",\n        src: process.env.PUBLIC_URL + '/images/main_images/' + props.imageNumber + '.jpeg',\n        style: {\n          objectFit: \"cover\",\n          height: \"100%\",\n          minWidth: \"100%\",\n          width: \"auto\",\n          position: \"absolute\",\n          zIndex: \"-3\",\n          top: \"0px\",\n          left: \"0px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-controls\",\n        onMouseOver: () => {\n          if (!mouseOverBottom) setMouseOverBottom(true);\n        },\n        onMouseLeave: () => {\n          if (mouseOverBottom) setMouseOverBottom(false);\n        },\n        style: mouseOverBottom ? {\n          opacity: 0.7,\n          transition: \"opacity 300ms\"\n        } : play ? {\n          opacity: 0,\n          transition: \"opacity 300ms\"\n        } : {\n          opacity: 0.4,\n          transition: \"opacity 300ms\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: scrubBarRef,\n          className: \"scrub-bar\",\n          type: \"range\",\n          min: \"0\",\n          max: \"100\",\n          defaultValue: 0,\n          id: \"scrub-bar\",\n          disabled: !loaded,\n          onChange: () => {\n            updatePlayback();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n_s(AudioVisualizer, \"Cfe8emHn/HUKdpvxR1NNaI0vSno=\");\n_c = AudioVisualizer;\nexport default AudioVisualizer;\nvar _c;\n$RefreshReg$(_c, \"AudioVisualizer\");","map":{"version":3,"names":["React","useRef","useState","useEffect","VisibilitySensor","AudioVisualizer","props","audioElement","setAudioElement","loaded","setLoaded","canvasAreaRef","fileInputRef","frequencyRef","backgroundRef","scrubBarRef","play","setPlay","mouseOverBottom","setMouseOverBottom","isVisible","setIsVisible","audioCtx","window","AudioContext","webkitAudioContext","source","createMediaElementSource","analyser","createAnalyser","connect","destination","bufferLength","frequencyBinCount","dataArray","Uint8Array","updateScrubBar","current","currentTime","duration","scrubBarValue","value","addEventListener","src","files","URL","createObjectURL","process","env","PUBLIC_URL","loadAudio","pause","Audio","updatePlayback","togglePlay","paused","style","opacity","transition","imageNumber","objectFit","height","minWidth","width","position","zIndex","top","left"],"sources":["/Users/davidmash/Documents/portfolio/src/Components/AudioVisualizer.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport VisibilitySensor from 'react-visibility-sensor';\n\nfunction AudioVisualizer(props) {\n    const [audioElement, setAudioElement] = useState(null);\n    const [loaded, setLoaded] = useState(false);\n    const canvasAreaRef = useRef(null);\n    const fileInputRef = useRef(null);\n    const frequencyRef = useRef(null);\n    const backgroundRef = useRef(null);\n    const scrubBarRef = useRef(null);\n    const [play, setPlay] = useState(false);\n    const [mouseOverBottom, setMouseOverBottom] = useState(false);\n    const [isVisible, setIsVisible] = useState(true);\n\n    useEffect(() => {\n        if (audioElement) {\n            const audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n            const source = audioCtx.createMediaElementSource(audioElement);\n            const analyser = audioCtx.createAnalyser();\n            source.connect(analyser);\n            analyser.connect(audioCtx.destination);\n            const bufferLength = analyser.frequencyBinCount;\n            let dataArray = new Uint8Array(bufferLength);\n\n            function updateScrubBar() {\n                if(audioElement && scrubBarRef.current) {\n                    let currentTime = audioElement.currentTime;\n                    let duration = audioElement.duration;\n                    let scrubBarValue = (currentTime/duration) * 100;\n                    scrubBarRef.current.value = scrubBarValue;\n                }\n            }\n\n            audioElement.addEventListener(\"timeupdate\", updateScrubBar);\n            audioElement.src = (fileInputRef.current && fileInputRef.current.files[0])? URL.createObjectURL(fileInputRef.current.files[0]): process.env.PUBLIC_URL + '/music/song.mp3';\n            audioElement.addEventListener(\"loadeddata\", () => {\n                setLoaded(true);\n                setIsVisible(true);\n            });\n            audioElement.addEventListener(\"ended\", () => {\n                setPlay(false);\n            });\n        }\n    }, [audioElement]);\n\n    useEffect(() => {\n\n    }, [isVisible]);\n\n    // Initialize audio context and elements when the file input changes\n    function loadAudio() {\n        if (audioElement) {\n            audioElement.pause();\n            audioElement.currentTime = 0;\n        }\n        setAudioElement(new Audio());\n    }\n\n    function updatePlayback() {\n        if(audioElement && scrubBarRef.current) {\n            let scrubBarValue = scrubBarRef.current.value;\n            let currentTime = (scrubBarValue / 100) * audioElement.duration;\n            audioElement.currentTime = currentTime;\n        }\n    }\n\n    function togglePlay() {\n        if (audioElement) {\n            if (audioElement.paused) {\n                audioElement.play();\n                setPlay(true);\n            } else {\n                audioElement.pause();\n                setPlay(false);\n            }\n        }\n    }\n\n    if (!audioElement) {\n        loadAudio();\n    }\n\n    return (\n        <VisibilitySensor onChange={setIsVisible}>\n            <div style={props.style} className='canvas-area no-select' ref={canvasAreaRef}>\n                <br />\n                <br />\n                <div className=\"main-header-container\">\n                    <h2 className={\"main-header\"} style={play?{opacity: 0, transition: \"2s opacity\"}:{opacity: 0.8, transition: \"3s opacity\"}}>David Mash</h2>\n                </div>\n                {loaded?\n                <div className=\"control-panel\" onClick={togglePlay}>\n                    {play?\n                    <img alt={\"\"} src={process.env.PUBLIC_URL + '/images/pause-button.png'} className={\"pause-button\"} />\n                    :\n                    <img alt={\"\"} src={process.env.PUBLIC_URL + '/images/play-button.png'} className={\"play-button\"} />\n                    }\n                </div>\n                :\n                <></>\n                }\n                <br />\n                <canvas ref={frequencyRef} id=\"frequency\" onClick={togglePlay}/>\n                <canvas ref={backgroundRef} id=\"background\" />\n                <img alt={\"\"} src={process.env.PUBLIC_URL + '/images/main_images/' + props.imageNumber + '.jpeg'} style={{objectFit: \"cover\", height: \"100%\", minWidth: \"100%\", width: \"auto\", position: \"absolute\", zIndex: \"-3\", top: \"0px\", left: \"0px\"}}/>\n                <div\n                    className='bottom-controls'\n                    onMouseOver={() => {if (!mouseOverBottom) setMouseOverBottom(true);}}\n                    onMouseLeave={() => {if (mouseOverBottom) setMouseOverBottom(false);}}\n                    style={mouseOverBottom?{opacity: 0.7, transition: \"opacity 300ms\"}:play?{opacity: 0, transition: \"opacity 300ms\"}:{opacity: 0.4, transition: \"opacity 300ms\"}}\n                >\n                    <input\n                        ref={scrubBarRef}\n                        className=\"scrub-bar\"\n                        type=\"range\"\n                        min=\"0\"\n                        max=\"100\"\n                        defaultValue={0}\n                        id=\"scrub-bar\"\n                        disabled={!loaded}\n                        onChange={() => {updatePlayback();}}\n                    />\n                    {/*<input className={\"file-input\"} type=\"file\" ref={fileInputRef} onChange={loadAudio} />*/}\n                </div>\n            </div>\n        </VisibilitySensor>\n    );\n}\n\nexport default AudioVisualizer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}