{"version":3,"sources":["Components/AudioVisualizer.js","Components/Header.js","Components/FadeIn.js","Components/Footer.js","Components/About.js","Components/SlideIn.js","Components/Resume.js","Components/Contact.js","Components/Portfolio.js","Components/FollowCursor.js","App.js","reportWebVitals.js","index.js"],"names":["AudioVisualizer","props","useState","audioElement","setAudioElement","loaded","setLoaded","canvasAreaRef","useRef","fileInputRef","frequencyRef","backgroundRef","scrubBarRef","play","setPlay","mouseOverBottom","setMouseOverBottom","setIsVisible","togglePlay","paused","pause","useEffect","getAverageAmplitude","data","startIndex","endIndex","Math","trunc","min","length","sum","i","getPeakAmplitude","peak","max","drawVisualizationBar","index","barWidth","x","verticalCenter","dataArray","ultimatePeak","adjustedData","pow","barHeight","offsetX","random","offsetY","offsetWidth","frequencyCtx","fillRect","getLowFrequencyColor","lowFrequencySum","lowFrequencyMax","lowFrequencyAverage","lowFreqShiftingColorNumber","map","getHighFrequencyColor","highFrequencySum","highFrequencyMax","highFrequencyAverage","highFreqShiftingColorNumber","value","start1","stop1","start2","stop2","audioCtx","window","AudioContext","webkitAudioContext","source","createMediaElementSource","analyser","createAnalyser","connect","destination","bufferLength","frequencyBinCount","Uint8Array","addEventListener","current","scrubBarValue","currentTime","duration","src","files","URL","createObjectURL","process","willReadFrequently","getContext","smudgeCtx","style","width","height","offsetHeight","rotationAngle","rotateSmudge","smudgeVelocity","drawVisualization","requestAnimationFrame","getByteFrequencyData","clearRect","canvas","avgAmplitude","highFreqAvgAmplitude","midFreqAvgAmplitude","lowFreqAvgAmplitude","lowFreqPeakAmplitude","gradient","createLinearGradient","highFrequencyColor","addColorStop","fillStyle","zeroAdjust","x2","globalAlpha","abs","drawImage","save","translate","rotate","PI","restore","imageDataTop","getImageData","imageDataBottom","putImageData","Audio","onChange","className","ref","opacity","transition","onClick","alt","id","imageNumber","objectFit","minWidth","position","zIndex","top","left","onMouseOver","onMouseLeave","type","defaultValue","disabled","updatePlayback","Header","state","floor","this","href","Component","FadeIn","children","isVisible","nodeRef","defaultStyle","transitionStyles","entering","entered","exiting","exited","onEnter","Transition","in","timeout","classNames","Footer","networks","social","network","url","target","rel","name","bottom","title","About","profilepic","image","bio","linkedin","email","resumeDownload","resumedownload","SlideIn","direction","Resume","color","skillmessage","education","school","degree","graduated","description","work","company","years","skills","backgroundColor","getRandomColor","toLowerCase","level","Contact","message","contactmessage","htmlFor","size","handleChange","cols","rows","Portfolio","projects","project","projectImage","link","textAlign","CanvasMouseEffect","canvasRef","ctx","circles","y","r","rDirection","g","gDirection","b","bDirection","handleMouseMove","event","distY","clientX","distX","clientY","distance","sqrt","push","animate","innerWidth","innerHeight","circle","splice","beginPath","arc","fill","removeEventListener","App","resumeData","$","ajax","dataType","cache","success","setState","bind","error","xhr","status","err","console","log","alert","getResumeData","FollowCursor","main","resume","portfolio","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.707de94d.chunk.js","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport VisibilitySensor from 'react-visibility-sensor';\n\nfunction AudioVisualizer(props) {\n    const [audioElement, setAudioElement] = useState(null);\n    const [loaded, setLoaded] = useState(false);\n    const canvasAreaRef = useRef(null);\n    const fileInputRef = useRef(null);\n    const frequencyRef = useRef(null);\n    const backgroundRef = useRef(null);\n    const scrubBarRef = useRef(null);\n    const [play, setPlay] = useState(false);\n    const [mouseOverBottom, setMouseOverBottom] = useState(false);\n    const [isVisible, setIsVisible] = useState(true);\n\n    useEffect(() => {\n        if (audioElement) {\n            const audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n            const source = audioCtx.createMediaElementSource(audioElement);\n            const analyser = audioCtx.createAnalyser();\n            source.connect(analyser);\n            analyser.connect(audioCtx.destination);\n            const bufferLength = analyser.frequencyBinCount;\n            let dataArray = new Uint8Array(bufferLength);\n\n            function updateScrubBar() {\n                if(audioElement && scrubBarRef.current) {\n                    let currentTime = audioElement.currentTime;\n                    let duration = audioElement.duration;\n                    let scrubBarValue = (currentTime/duration) * 100;\n                    scrubBarRef.current.value = scrubBarValue;\n                }\n            }\n\n            audioElement.addEventListener(\"timeupdate\", updateScrubBar);\n            audioElement.src = (fileInputRef.current && fileInputRef.current.files[0])? URL.createObjectURL(fileInputRef.current.files[0]): process.env.PUBLIC_URL + '/music/song.mp3';\n            audioElement.addEventListener(\"loadeddata\", () => {\n                setLoaded(true);\n            });\n            audioElement.addEventListener(\"ended\", () => {\n                setPlay(false);\n            });\n\n            frequencyRef.current.willReadFrequently = true;\n            backgroundRef.current.willReadFrequently = true;\n            const frequencyCtx = frequencyRef.current.getContext(\"2d\");\n            const smudgeCtx = backgroundRef.current.getContext(\"2d\");\n            backgroundRef.current.style.width ='100%';\n            backgroundRef.current.style.height='100%';\n            frequencyRef.current.style.width ='100%';\n            frequencyRef.current.style.height='100%';\n            backgroundRef.current.width  = canvasAreaRef.current.offsetWidth;\n            backgroundRef.current.height = canvasAreaRef.current.offsetHeight;\n            frequencyRef.current.width  = canvasAreaRef.current.offsetWidth;\n            frequencyRef.current.height = canvasAreaRef.current.offsetHeight;\n\n            canvasAreaRef.current.addEventListener(\"resize\", () => {\n                backgroundRef.current.width  = canvasAreaRef.current.offsetWidth;\n                backgroundRef.current.height = canvasAreaRef.current.offsetHeight;\n                frequencyRef.current.width  = canvasAreaRef.current.offsetWidth;\n                frequencyRef.current.height = canvasAreaRef.current.offsetHeight;\n            });\n\n            let ultimatePeak = 1;\n            let rotationAngle = 0;\n            let rotateSmudge = false;\n            let smudgeVelocity = 0;\n            // Draw the frequency spectrum visualization\n            function drawVisualization() {\n                requestAnimationFrame(drawVisualization);\n                analyser.getByteFrequencyData(dataArray);\n                \n                // draw current frame to main canvas\n                frequencyCtx.clearRect(0, 0, frequencyCtx.canvas.width, frequencyCtx.canvas.height);\n        \n                let avgAmplitude = 0;\n                let highFreqAvgAmplitude = 0;\n                let midFreqAvgAmplitude = 0;\n                let lowFreqAvgAmplitude = 0;\n                let lowFreqPeakAmplitude = 0;\n                if (dataArray && dataArray.length > 0) {\n                    let gradient = frequencyCtx.createLinearGradient(0, 0, frequencyCtx.canvas.width, 0);\n                    let highFrequencyColor = getHighFrequencyColor(dataArray);\n                    gradient.addColorStop(0, highFrequencyColor);\n                    gradient.addColorStop(0.5, getLowFrequencyColor(dataArray));\n                    gradient.addColorStop(1, highFrequencyColor);\n                    frequencyCtx.fillStyle = gradient;\n                    let verticalCenter = frequencyCtx.canvas.height / 2;\n                    let zeroAdjust = 0;\n                    for (let i = dataArray.length - 1; i >= 0; i--) {\n                        if (dataArray[i] - 20 > 0) break;\n                        zeroAdjust++;\n                    }\n                    let barWidth = ((frequencyCtx.canvas.width / dataArray.length)) / 2;\n                    let x = 0;\n                    let x2 = frequencyCtx.canvas.width;\n                    for (let i = 0; i < dataArray.length - zeroAdjust; i++) {\n                        drawVisualizationBar(i, barWidth, x, verticalCenter);\n                        drawVisualizationBar(i, barWidth, x2, verticalCenter);\n                        x += (frequencyCtx.canvas.width / (dataArray.length - zeroAdjust)) / 2;\n                        x2 -= (frequencyCtx.canvas.width / (dataArray.length - zeroAdjust)) / 2;\n                    }\n                    avgAmplitude = getAverageAmplitude(dataArray, 0, dataArray.length);\n                    highFreqAvgAmplitude = getAverageAmplitude(dataArray, 12 * dataArray.length / 16, dataArray.length);\n                    midFreqAvgAmplitude = getAverageAmplitude(dataArray, dataArray.length / 16, 3 * dataArray.length / 16);\n                    lowFreqAvgAmplitude = getAverageAmplitude(dataArray, 0, dataArray.length / 16);\n                    lowFreqPeakAmplitude = getPeakAmplitude(dataArray, 0, dataArray.length / 16);\n                    frequencyCtx.globalAlpha = (Math.abs(0.2 - (avgAmplitude / 200)) + 0.1) / 2;\n                }\n\n                //smudge effect\n                rotateSmudge = (rotateSmudge && !(lowFreqPeakAmplitude > ultimatePeak * 1.01) && midFreqAvgAmplitude + highFreqAvgAmplitude > avgAmplitude * 1.8) || midFreqAvgAmplitude + highFreqAvgAmplitude > avgAmplitude * 3.2;\n                if (rotateSmudge) {\n                    smudgeCtx.drawImage(frequencyCtx.canvas, 0, 0);\n                    rotationAngle = (rotationAngle + 1) % 360;\n                    smudgeVelocity = (lowFreqAvgAmplitude) / 5 * (midFreqAvgAmplitude < highFreqAvgAmplitude * 2)? -1: 1;\n                    // Save the current canvas state\n                    smudgeCtx.save();\n                    // Rotate the canvas\n                    smudgeCtx.translate(smudgeCtx.canvas.width / 2, smudgeCtx.canvas.height / 2);\n                    smudgeCtx.rotate(Math.PI / 180 * rotationAngle * smudgeVelocity);\n                    smudgeCtx.translate(-smudgeCtx.canvas.width / 2, -smudgeCtx.canvas.height / 2);\n                    // Draw the smudged image on the canvas\n                    smudgeCtx.drawImage(smudgeCtx.canvas, 0, 0);\n                    // Restore the canvas state\n                    smudgeCtx.restore();\n                    smudgeCtx.globalAlpha = Math.abs(0.04 - (avgAmplitude / 4000));\n                } else {\n                    rotationAngle = 0;\n                    var imageDataTop = smudgeCtx.getImageData(0, 0, smudgeCtx.canvas.width, smudgeCtx.canvas.height / 2);\n                    var imageDataBottom = smudgeCtx.getImageData(0, smudgeCtx.canvas.height / 2, smudgeCtx.canvas.width, smudgeCtx.canvas.height);\n                    smudgeCtx.clearRect(0, 0, smudgeCtx.canvas.width, smudgeCtx.canvas.height);\n                    smudgeCtx.globalAlpha = 0.5 - (avgAmplitude / 100);\n                    smudgeVelocity = (avgAmplitude < 10)? avgAmplitude * 2: ((lowFreqPeakAmplitude >= ultimatePeak && lowFreqAvgAmplitude * 0.5 > midFreqAvgAmplitude + highFreqAvgAmplitude)? -1: 1) * avgAmplitude / 4;\n                    smudgeCtx.putImageData(imageDataTop, 0, -smudgeVelocity);\n                    smudgeCtx.putImageData(imageDataBottom, 0, (smudgeCtx.canvas.height / 2) + smudgeVelocity);\n                    smudgeCtx.drawImage(frequencyCtx.canvas, 0, 0);\n                }\n            }\n        \n            function getAverageAmplitude(data, startIndex, endIndex) {\n                startIndex = Math.trunc(startIndex);\n                endIndex = Math.min(Math.trunc(endIndex), data.length);\n                let sum = 0;\n                for (let i = startIndex; i < endIndex; i++) {\n                    sum += data[i];\n                }\n                return sum / (endIndex - startIndex - 1);\n            }\n        \n            function getPeakAmplitude(data, startIndex, endIndex) {\n                startIndex = Math.trunc(startIndex);\n                endIndex = Math.min(Math.trunc(endIndex), data.length);\n                let peak = 0;\n                for (let i = startIndex; i < endIndex; i++) {\n                    peak = Math.max(peak, data[i]);\n                }\n                return peak;\n            }\n        \n            function drawVisualizationBar(index, barWidth, x, verticalCenter) {\n                if (dataArray[index] > ultimatePeak) {\n                    ultimatePeak = dataArray[index];\n                }\n                //take the square of the data like this will amplify peaks\n                const adjustedData = 8 * dataArray[index] * Math.pow(dataArray[index] / ultimatePeak, 1.5 * (1 - (index / dataArray.length))) * ((index + (dataArray.length / 2)) / dataArray.length);\n                let barHeight = adjustedData;\n                let offsetX = (Math.random() - 0.5) * adjustedData / 32;\n                let offsetY = (Math.random() - 0.5) * adjustedData / 32;\n                let offsetWidth = (Math.random() - 0.5) * adjustedData / 32;\n                frequencyCtx.fillRect(x + offsetX, verticalCenter - (barHeight / 4) + offsetY, barWidth + offsetWidth, barHeight / 2);\n            }\n        \n            let lowFreqShiftingColorNumber = 0;\n            function getLowFrequencyColor(dataArray) {\n                let lowFrequencySum = 0;\n                let lowFrequencyMax = 0;\n                for (let i = 0; i < dataArray.length / 2; i++) {\n                    lowFrequencySum += dataArray[i];\n                    if (dataArray[i] > lowFrequencyMax) {\n                        lowFrequencyMax = dataArray[i];\n                    }\n                }\n                let lowFrequencyAverage = lowFrequencySum / (dataArray.length / 2);\n                if (lowFrequencyMax > lowFrequencyAverage * 10 || lowFrequencyAverage > ultimatePeak / 2) {\n                    lowFreqShiftingColorNumber = (lowFreqShiftingColorNumber + (lowFrequencyMax / (lowFrequencyAverage * 20)) + (lowFrequencyAverage / ultimatePeak)) % 255;\n                }\n                return `hsl(${map(lowFrequencyAverage, lowFreqShiftingColorNumber, 255, lowFreqShiftingColorNumber / 4, 360)}, 100%, 50%,` + (lowFrequencySum / (lowFrequencyMax + 0.1)) + `)`;\n            }\n        \n            let highFreqShiftingColorNumber = 0;\n            function getHighFrequencyColor(dataArray) {\n                let highFrequencySum = 0;\n                let highFrequencyMax = 0;\n                for (let i = dataArray.length / 2; i < dataArray.length; i++) {\n                    highFrequencySum += dataArray[i];\n                    if (dataArray[i] > highFrequencyMax) {\n                        highFrequencyMax = dataArray[i];\n                    }\n                }\n                let highFrequencyAverage = highFrequencySum / (dataArray.length/ 2);\n                if (highFrequencyMax > highFrequencyAverage * 200 || highFrequencyAverage > ultimatePeak / 2) {\n                    highFreqShiftingColorNumber = (highFreqShiftingColorNumber + (highFrequencyMax / (highFrequencyAverage * 200)) + (highFrequencyAverage / ultimatePeak)) % 255;\n                }\n                return `hsl(${map(highFrequencyAverage, highFreqShiftingColorNumber, 255, highFrequencyAverage / 4, 360)}, 100%, 50%,` + (highFrequencySum / (highFrequencyMax + 0.1)) + `)`;\n            }\n        \n            function map(value, start1, stop1, start2, stop2) {\n                return start2 + (stop2 - start2) * ((value - start1) / (stop1 - start1));\n            }\n\n            drawVisualization();\n        }\n    }, [audioElement]);\n\n    // Initialize audio context and elements when the file input changes\n    function loadAudio() {\n        if (audioElement) {\n            audioElement.pause();\n            audioElement.currentTime = 0;\n        }\n        setAudioElement(new Audio());\n    }\n\n    function updatePlayback() {\n        if(audioElement && scrubBarRef.current) {\n            let scrubBarValue = scrubBarRef.current.value;\n            let currentTime = (scrubBarValue / 100) * audioElement.duration;\n            audioElement.currentTime = currentTime;\n        }\n    }\n\n    function togglePlay() {\n        if (audioElement) {\n            if (audioElement.paused) {\n                audioElement.play();\n                setPlay(true);\n            } else {\n                audioElement.pause();\n                setPlay(false);\n            }\n        }\n    }\n\n    if (!audioElement) {\n        loadAudio();\n    }\n\n    return (\n        <VisibilitySensor onChange={setIsVisible}>\n            <div style={props.style} className='canvas-area no-select' ref={canvasAreaRef}>\n                <br />\n                <br />\n                <div className=\"main-header-container\">\n                    <h2 className={\"main-header\"} style={play?{opacity: 0, transition: \"2s opacity\"}:{opacity: 0.8, transition: \"3s opacity\"}}>David Mash</h2>\n                </div>\n                {loaded?\n                <div className=\"control-panel\" onClick={togglePlay}>\n                    {play?\n                    <img alt={\"\"} src={process.env.PUBLIC_URL + '/images/pause-button.png'} className={\"pause-button\"} />\n                    :\n                    <img alt={\"\"} src={process.env.PUBLIC_URL + '/images/play-button.png'} className={\"play-button\"} />\n                    }\n                </div>\n                :\n                <></>\n                }\n                <br />\n                <canvas ref={frequencyRef} id=\"frequency\" onClick={togglePlay}/>\n                <canvas ref={backgroundRef} id=\"background\" />\n                <img alt={\"\"} src={process.env.PUBLIC_URL + '/images/main_images/' + props.imageNumber + '.jpeg'} style={{objectFit: \"cover\", height: \"100%\", minWidth: \"100%\", width: \"auto\", position: \"absolute\", zIndex: \"-3\", top: \"0px\", left: \"0px\"}}/>\n                <div\n                    className='bottom-controls'\n                    onMouseOver={() => {if (!mouseOverBottom) setMouseOverBottom(true);}}\n                    onMouseLeave={() => {if (mouseOverBottom) setMouseOverBottom(false);}}\n                    style={mouseOverBottom?{opacity: 0.7, transition: \"opacity 300ms\"}:play?{opacity: 0, transition: \"opacity 300ms\"}:{opacity: 0.4, transition: \"opacity 300ms\"}}\n                >\n                    <input\n                        ref={scrubBarRef}\n                        className=\"scrub-bar\"\n                        type=\"range\"\n                        min=\"0\"\n                        max=\"100\"\n                        defaultValue={0}\n                        id=\"scrub-bar\"\n                        disabled={!loaded}\n                        onChange={() => {updatePlayback();}}\n                    />\n                    {/*<input className={\"file-input\"} type=\"file\" ref={fileInputRef} onChange={loadAudio} />*/}\n                </div>\n            </div>\n        </VisibilitySensor>\n    );\n}\n\nexport default AudioVisualizer;\n","import React, { Component } from \"react\";\nimport AudioVisualizer from \"./AudioVisualizer\";\n\nclass Header extends Component {\n  constructor() {\n    super();\n    this.state = {\n      imageNumber: Math.floor(Math.random() * 2)\n    };\n  }\n\n  render() {\n    if (!this.props.data) return null;\n\n    //const name = this.props.data.name;\n    //const description = this.props.data.description;\n\n    return (\n      <header id=\"home\">\n        <div className=\"main-visual-container\">\n          <AudioVisualizer style={{width: \"100%\", position: \"absolute\", zIndex: \"0\", top: \"0px\", left: \"0px\"}} imageNumber={this.state.imageNumber} />\n        </div>\n\n        <nav id=\"nav-wrap\">\n          {/*\n          <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">\n            Show navigation\n          </a>\n          <a className=\"mobile-btn\" href=\"#home\" title=\"Hide navigation\">\n            Hide navigation\n          </a>\n          */}\n\n          <ul id=\"nav\" className=\"nav\">\n            <li className=\"current\">\n              <a className=\"smoothscroll\" href=\"#home\">\n                Home\n              </a>\n            </li>\n\n            <li>\n              <a className=\"smoothscroll\" href=\"#about\">\n                About\n              </a>\n            </li>\n\n            <li>\n              <a className=\"smoothscroll\" href=\"#resume\">\n                Resume\n              </a>\n            </li>\n\n            <li>\n              <a className=\"smoothscroll\" href=\"#portfolio\">\n                Works\n              </a>\n            </li>\n\n            <li>\n              <a className=\"smoothscroll\" href=\"#contact\">\n                Contact\n              </a>\n            </li>\n          </ul>\n        </nav>\n\n        <p className=\"scrolldown\">\n          <a className=\"smoothscroll\" href=\"#about\">\n            <i className=\"icon-down-circle\"></i>\n          </a>\n        </p>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { useState, useRef } from 'react';\nimport { Transition } from 'react-transition-group';\nimport * as Waypoint from 'react-waypoint';\n\nconst FadeIn = ({ children, ...props }) => {\n    const [isVisible, setIsVisible] = useState(false);\n    const nodeRef = useRef(null);\n\n    const duration = 500;\n    \n    const defaultStyle = {\n      transition: `opacity ${duration}ms ease-in-out`,\n        opacity: 0\n    }\n\n    const transitionStyles = {\n      entering: { opacity: 1 },\n      entered:  { opacity: 1 },\n      exiting:  { opacity: 0 },\n      exited:  { opacity: 0 },\n    };\n\n    return (\n        <Waypoint.Waypoint onEnter={() => setIsVisible(true)}>\n            <div>\n                <Transition\n                    nodeRef={nodeRef}\n                    in={isVisible}\n                    timeout={duration}\n                    classNames=\"fade\"\n                    {...props}\n                >\n                    {state => (\n                        <div ref={nodeRef} style={{\n                            ...defaultStyle,\n                            ...transitionStyles[state]}}>\n                            {children}\n                        </div>\n                    )}\n                </Transition>\n            </div>\n        </Waypoint.Waypoint>\n    );\n};\n\nexport default FadeIn;","import React, { Component } from \"react\";\nimport FadeIn from \"./FadeIn\";\n\nclass Footer extends Component {\n  render() {\n    if (!this.props.data) return null;\n\n    const networks = this.props.data.social.map(function (network) {\n      return (\n        <li key={network.name}>\n          <a href={network.url} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className={network.className}></i>\n          </a>\n        </li>\n      );\n    });\n\n    return (\n      <footer>\n        <div className=\"row\">\n          <FadeIn bottom>\n            <div className=\"twelve columns\">\n              <ul className=\"social-links\">{networks}</ul>\n              <ul className=\"copyright\">\n                <li>David Mash - 2023</li>\n              </ul>\n            </div>\n          </FadeIn>\n\n          <div id=\"go-top\">\n            <a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\">\n              <i className=\"icon-up-open\"></i>\n            </a>\n          </div>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport FadeIn from \"./FadeIn\";\n\nclass About extends Component {\n  render() {\n    if (!this.props.data) return null;\n\n    const name = this.props.data.name;\n    const profilepic = \"images/\" + this.props.data.image;\n    const bio = this.props.data.bio;\n    const linkedin = this.props.data.linkedin;\n    const email = this.props.data.email;\n    const resumeDownload = this.props.data.resumedownload;\n\n    return (\n      <section id=\"about\">\n        <FadeIn>\n          <div className=\"row\">\n            <div className=\"three columns\">\n              <img\n                className=\"profile-pic\"\n                src={profilepic}\n                alt=\"David Mash\"\n              />\n            </div>\n            <div className=\"nine columns main-col\">\n              <h2>About Me</h2>\n\n              <p>{bio}</p>\n              <div className=\"row\">\n                <div className=\"columns contact-details\">\n                  <h2>Contact Details</h2>\n                  <p className=\"address\">\n                    <span>{name}</span>\n                    <br />\n                    <span>{email}</span>\n                    <br />\n                    <a href={linkedin} target=\"_blank\" rel=\"noopener noreferrer\">🔗 LinkedIn</a>\n                  </p>\n                </div>\n                <div className=\"columns download\">\n                  <p>\n                    <a href={resumeDownload} className=\"button\">\n                      <i className=\"fa fa-download\"></i>Download Resume\n                    </a>\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </FadeIn>\n      </section>\n    );\n  }\n}\n\nexport default About;\n","import React, { useState, useRef } from 'react';\nimport { Transition } from 'react-transition-group';\nimport * as Waypoint from 'react-waypoint';\n\nconst SlideIn = ({ children, direction = 'left', ...props }) => {\n    const [isVisible, setIsVisible] = useState(false);\n    const nodeRef = useRef(null);\n\n    const duration = 500;\n    \n    const defaultStyle = {\n      transition: `opacity ${duration}ms ease-in-out`,\n        opacity: 0\n    }\n\n    const transitionStyles = {\n        entering:\n            {\n                opacity: 1,\n                position: \"relative\",\n                left: 0,\n                transition: \"left 1000ms\"\n            },\n        entered:\n            {\n                opacity: 1,\n                position: \"relative\",\n                left: 0,\n                transition: \"left 1000ms\"\n            },\n        exiting:\n            {\n                opacity: 0,\n                position: \"absolute\",\n                left: \"-100%\"\n            },\n        exited:\n            {\n                opacity: 0,\n                position: \"absolute\",\n                left: \"-100%\"\n            },\n    };\n\n    return (\n        <Waypoint.Waypoint onEnter={() => setIsVisible(true)}>\n            <div>\n                <Transition\n                    nodeRef={nodeRef}\n                    in={isVisible}\n                    timeout={duration}\n                    classNames={`slide-${direction}`}\n                    {...props}\n                >\n                    {state => (\n                        <div ref={nodeRef} style={{\n                            ...defaultStyle,\n                            ...transitionStyles[state]}}>\n                            {children}\n                        </div>\n                    )}\n                </Transition>\n            </div>\n        </Waypoint.Waypoint>\n    );\n};\n\nexport default SlideIn;","import React, { Component } from \"react\";\nimport SlideIn from \"./SlideIn\";\n\nclass Resume extends Component {\n  getRandomColor() {\n    let letters = \"0123456789ABCDEF\";\n    let color = \"#\";\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n\n  render() {\n    if (!this.props.data) return null;\n\n    const skillmessage = this.props.data.skillmessage;\n    const education = this.props.data.education.map(function (education) {\n      return (\n        <div key={education.school}>\n          <h3>{education.school}</h3>\n          <p className=\"info\">\n            {education.degree} <span>&bull;</span>\n            <em className=\"date\">{education.graduated}</em>\n          </p>\n          <p>{education.description}</p>\n        </div>\n      );\n    });\n\n    const work = this.props.data.work.map(function (work) {\n      return (\n        <div key={work.company}>\n          <h3>{work.company}</h3>\n          <p className=\"info\">\n            {work.title}\n            <span>&bull;</span> <em className=\"date\">{work.years}</em>\n          </p>\n          <p>{work.description}</p>\n        </div>\n      );\n    });\n\n    const skills = this.props.data.skills.map((skills) => {\n      const backgroundColor = this.getRandomColor();\n      const className = \"bar-expand \" + skills.name.toLowerCase();\n      const width = skills.level;\n\n      return (\n        <li key={skills.name}>\n          <span style={{ width, backgroundColor }} className={className}></span>\n          <em>{skills.name}</em>\n        </li>\n      );\n    });\n\n    return (\n      <section id=\"resume\">\n        <SlideIn>\n          <div className=\"row education\">\n            <div className=\"three columns header-col\">\n              <h1>\n                <span>Education</span>\n              </h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              <div className=\"row item\">\n                <div className=\"twelve columns\">{education}</div>\n              </div>\n            </div>\n          </div>\n        </SlideIn>\n\n        <SlideIn>\n          <div className=\"row work\">\n            <div className=\"three columns header-col\">\n              <h1>\n                <span>Work</span>\n              </h1>\n            </div>\n\n            <div className=\"nine columns main-col\">{work}</div>\n          </div>\n        </SlideIn>\n\n        <SlideIn>\n          <div className=\"row skill\">\n            <div className=\"three columns header-col\">\n              <h1>\n                <span>Skills</span>\n              </h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              <p>{skillmessage}</p>\n\n              <div className=\"bars\">\n                <ul className=\"skills\">{skills}</ul>\n              </div>\n            </div>\n          </div>\n        </SlideIn>\n      </section>\n    );\n  }\n}\n\nexport default Resume;\n","import React, { Component } from \"react\";\nimport FadeIn from \"./FadeIn\";\nimport SlideIn from \"./SlideIn\";\n\nclass Contact extends Component {\n  render() {\n    if (!this.props.data) return null;\n\n    const message = this.props.data.contactmessage;\n\n    return (\n      <section id=\"contact\">\n        <FadeIn>\n          <div className=\"row section-head\">\n            <div className=\"two columns header-col\">\n              <h1>\n                <span>Get In Touch.</span>\n              </h1>\n            </div>\n\n            <div className=\"ten columns\">\n              <p className=\"lead\">{message}</p>\n            </div>\n          </div>\n        </FadeIn>\n\n        <div className=\"row\">\n          <SlideIn>\n            <div className=\"twelve columns\">\n              <form id=\"contactForm\" name=\"contactForm\">\n                <fieldset>\n                  {/*\n                  <div>\n                    <label htmlFor=\"contactName\">\n                      Name <span className=\"required\">*</span>\n                    </label>\n                    <input\n                      type=\"text\"\n                      defaultValue=\"\"\n                      size=\"35\"\n                      id=\"contactName\"\n                      name=\"contactName\"\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                  <div>\n                    <label htmlFor=\"contactEmail\">\n                      Email <span className=\"required\">*</span>\n                    </label>\n                    <input\n                      type=\"text\"\n                      defaultValue=\"\"\n                      size=\"35\"\n                      id=\"contactEmail\"\n                      name=\"contactEmail\"\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                  */}\n                  <div>\n                    <label htmlFor=\"contactSubject\">Subject</label>\n                    <input\n                      type=\"text\"\n                      defaultValue=\"\"\n                      size=\"35\"\n                      id=\"contactSubject\"\n                      name=\"contactSubject\"\n                      onChange={this.handleChange}\n                    />\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"contactMessage\">\n                      Message <span className=\"required\">*</span>\n                    </label>\n                    <textarea\n                      cols=\"50\"\n                      rows=\"15\"\n                      id=\"contactMessage\"\n                      name=\"contactMessage\"\n                    ></textarea>\n                  </div>\n\n                  <div>\n                    <button className=\"submit\">Submit</button>\n                    <span id=\"image-loader\">\n                      <img alt=\"\" src=\"images/loader.gif\" />\n                    </span>\n                  </div>\n                </fieldset>\n              </form>\n\n              <div id=\"message-warning\"> An error has occurred. Consider emailing davidmash134@gmail.com from your regular email service.</div>\n              <div id=\"message-success\">\n                <i className=\"fa fa-check\"></i>Your message was sent, thank you!\n                <br />\n              </div>\n            </div>\n          </SlideIn>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport FadeIn from \"./FadeIn\";\n\nlet id = 0;\nclass Portfolio extends Component {\n  render() {\n    if (!this.props.data) return null;\n\n    const projects = this.props.data.projects.map(function (project) {\n      let projectImage = \"images/portfolio/\" + project.image;\n\n      return (\n        <button key={id++} className=\"columns portfolio-item\">\n          <div className=\"item-wrap\">\n            <a href={project.link} target=\"_blank\" rel=\"noopener noreferrer\">\n              <img className={\"project-link-image\"} alt={project.title} src={projectImage} />\n              <h5 style={{ textAlign: \"center\" }}>{project.title}</h5>\n              <div style={{ textAlign: \"center\" }}>{project.description}</div>\n            </a>\n          </div>\n        </button>\n      );\n    });\n\n    return (\n      <section id=\"portfolio\">\n        <FadeIn>\n          <div className=\"row\">\n            <div className=\"twelve columns collapsed\">\n              <h1>Here is some things I have worked on.</h1>\n\n              <div\n                id=\"portfolio-wrapper\"\n                className=\"bgrid-quarters s-bgrid-thirds cf\"\n              >\n                {projects}\n              </div>\n            </div>\n          </div>\n        </FadeIn>\n      </section>\n    );\n  }\n}\n\nexport default Portfolio;\n","import React, { useRef, useEffect } from 'react';\n\nconst CanvasMouseEffect = () => {\n    const canvasRef = useRef(null);\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        const startOpacity = 0.3;\n        const startSize = 10;\n        const circles = [];\n        let x = 0;\n        let y = 0;\n        let r = 0;\n        let rDirection = false;\n        let g = 0;\n        let gDirection = false;\n        let b = 255;\n        let bDirection = false;\n\n        // handle mouse movement\n        const handleMouseMove = (event) => {\n            const distY = Math.abs(x - event.clientX);\n            const distX = Math.abs(y - event.clientY);    \n            x = event.clientX;\n            y = event.clientY;\n            const distance = Math.sqrt(distX * distX + distY * distY);\n            rDirection = rDirection? r <= 255: r <= 0;\n            r = r + (rDirection? 1: -1) * distance / 20;\n            gDirection = gDirection? g <= 255: g <= 0;\n            g = g + (rDirection? 2: -2) * distance / 20;\n            bDirection = bDirection? b <= 255: b <= 0;\n            b = b + (bDirection? 3: -3) * distance / 20;\n            circles.push({ x: x, y: y, opacity: startOpacity * Math.min(distance / 20.0, 1), size: startSize * Math.min(distance / 20.0, 1), r: r, g: g, b: b});\n        }\n\n        window.addEventListener('mousemove', handleMouseMove);\n\n        // animate the effect\n        const animate = () => {\n            // clear canvas\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n            // set canvas dimensions to window dimensions\n            canvas.width = window.innerWidth;\n            canvas.height = window.innerHeight;\n\n            // draw circles\n            for (let i = 0; i < circles.length; i++) {\n                const circle = circles[i];\n                if (circle.opacity <= 0) {\n                    circles.splice(i--, 1);\n                } else {\n                    ctx.beginPath();\n                    ctx.arc(circle.x, circle.y, circle.size, 0, 2 * Math.PI);\n                    ctx.fillStyle = `rgba(${circle.r}, ${circle.b}, ${circle.g}, ${circle.opacity})`;\n                    ctx.fill();\n                    circle.opacity -= (0.0010 * (circles.length + 1) / 2);\n                    circle.size += ((circles.length + 1) / 10);\n                }\n            }\n\n            // repeat animation\n            requestAnimationFrame(animate);\n        }\n\n        animate();\n\n        return () => {\n            window.removeEventListener('mousemove', handleMouseMove);\n        }\n    }, []);\n\n    return (\n        <canvas className={\"follow-cursor-canvas\"} ref={canvasRef} width={window.innerWidth} height={window.innerHeight} />\n    );\n};\n\nexport default CanvasMouseEffect;","import React, { Component } from \"react\";\n//import ReactGA from \"react-ga\";\nimport $ from \"jquery\";\nimport \"./App.css\";\nimport Header from \"./Components/Header\";\nimport Footer from \"./Components/Footer\";\nimport About from \"./Components/About\";\nimport Resume from \"./Components/Resume\";\nimport Contact from \"./Components/Contact\";\nimport Portfolio from \"./Components/Portfolio\";\nimport FollowCursor from \"./Components/FollowCursor\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      resumeData: {}\n    };\n\n    //ReactGA.initialize(\"UA-110570651-1\");\n    //ReactGA.pageview(window.location.pathname);\n  }\n\n  getResumeData() {\n    $.ajax({\n      url: \"./resumeData.json\",\n      dataType: \"json\",\n      cache: false,\n      success: function(data) {\n        this.setState({ resumeData: data });\n      }.bind(this),\n      error: function(xhr, status, err) {\n        console.log(err);\n        alert(err);\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.getResumeData();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <FollowCursor/>\n        <Header data={this.state.resumeData.main} />\n        <About data={this.state.resumeData.main} />\n        <Resume data={this.state.resumeData.resume} />\n        <Portfolio data={this.state.resumeData.portfolio} />\n        <Contact data={this.state.resumeData.main} />\n        <Footer data={this.state.resumeData.main} />\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}