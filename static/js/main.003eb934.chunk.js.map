{"version":3,"sources":["Components/AudioVisualizer.js","Components/Header.js","Components/FadeIn.js","Components/Footer.js","Components/About.js","Components/SlideIn.js","Components/Resume.js","Components/Contact.js","Components/Portfolio.js","App.js","reportWebVitals.js","index.js"],"names":["AudioVisualizer","props","useState","audioElement","setAudioElement","analyser","setAnalyser","audioCtx","setAudioCtx","source","setSource","loaded","setLoaded","canvasAreaRef","useRef","fileInputRef","frequencyRef","backgroundRef","scrubBarRef","volumeBarRef","play","setPlay","mouseOverBottom1","setMouseOverBottom1","mouseOverBottom2","setMouseOverBottom2","mouseOverBottom3","setMouseOverBottom3","setIsVisible","loadAudio","current","files","filePath","name","exec","alert","pause","currentTime","src","remove","Audio","updateVolume","volumeBarValue","value","volume","togglePlay","given","resume","paused","useEffect","convertToASCII","fromContext","toContext","doubles","clearRect","canvas","width","height","font","char","r","g","b","alpha","pixels","getImageData","data","pixelGap","Math","floor","i","length","asciiArtChars","max","fillStyle","fillText","getAverageAmplitude","startIndex","endIndex","trunc","min","sum","getPeakAmplitude","peak","drawVisualizationBar","index","barWidth","x","verticalCenter","dataArray","ultimatePeak","adjustedData","pow","barHeight","offsetX","random","offsetY","offsetWidth","smudgeCtx","fillRect","getLowFrequencyColor","lowFrequencySum","lowFrequencyMax","lowFrequencyAverage","lowFreqShiftingColorNumber","map","getHighFrequencyColor","highFrequencySum","highFrequencyMax","highFrequencyAverage","highFreqShiftingColorNumber","start1","stop1","start2","stop2","connect","destination","bufferLength","frequencyBinCount","Uint8Array","frequencyCtx","getContext","willReadFrequently","hiddenCanvas","document","createElement","hiddenCtx","style","offsetHeight","transition","opacity","addEventListener","imageData","rotationAngle","rotateSmudge","splitSmudge","growSmudge","smudgeVelocity","smudgeGrowVelocity","doublesGoal","drawVisualization","charAt","requestAnimationFrame","getByteFrequencyData","avgAmplitude","highFreqAvgAmplitude","highFreqPeakAmplitude","midFreqAvgAmplitude","lowFreqAvgAmplitude","lowFreqPeakAmplitude","gradient","createLinearGradient","highFrequencyColor","addColorStop","zeroAdjust","x2","save","translate","rotate","PI","globalAlpha","drawImage","restore","putImageData","widthOffset","heightOffset","createAnalyser","createMediaElementSource","scrubBarValue","duration","URL","createObjectURL","window","AudioContext","webkitAudioContext","onChange","className","ref","onClick","alt","id","imageNumber","objectFit","minHeight","minWidth","position","zIndex","top","left","onMouseOver","onMouseLeave","type","defaultValue","onInput","disabled","updatePlayback","Header","state","this","href","Component","FadeIn","children","isVisible","nodeRef","defaultStyle","transitionStyles","entering","entered","exiting","exited","onEnter","Transition","in","timeout","classNames","Footer","networks","social","network","url","target","rel","bottom","title","About","profilepic","image","bio","linkedin","email","resumeDownload","resumedownload","SlideIn","direction","Resume","color","skillmessage","education","school","degree","graduated","description","work","company","years","skills","backgroundColor","getRandomColor","toLowerCase","level","Contact","message","contactmessage","htmlFor","size","handleChange","cols","rows","Portfolio","projects","project","projectImage","link","textAlign","App","resumeData","$","ajax","dataType","cache","success","setState","bind","error","xhr","status","err","console","log","getResumeData","main","portfolio","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.003eb934.chunk.js","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport VisibilitySensor from 'react-visibility-sensor';\n\nfunction AudioVisualizer(props) {\n    const [audioElement, setAudioElement] = useState(null);\n    const [analyser, setAnalyser] = useState(null);\n    const [audioCtx, setAudioCtx] = useState(null);\n    const [source, setSource] = useState(null);\n    const [loaded, setLoaded] = useState(false);\n    const canvasAreaRef = useRef(null);\n    const fileInputRef = useRef(null);\n    const frequencyRef = useRef(null);\n    const backgroundRef = useRef(null);\n    const scrubBarRef = useRef(null);\n    const volumeBarRef = useRef(null);\n    const [play, setPlay] = useState(false);\n    const [mouseOverBottom1, setMouseOverBottom1] = useState(false);\n    const [mouseOverBottom2, setMouseOverBottom2] = useState(false);\n    const [mouseOverBottom3, setMouseOverBottom3] = useState(false);\n    const [isVisible, setIsVisible] = useState(true);\n\n    useEffect(() => {\n        if (analyser && source && audioCtx) {\n            source.connect(analyser);\n            analyser.connect(audioCtx.destination);\n            togglePlay(true);\n\n            const bufferLength = analyser.frequencyBinCount;\n            let dataArray = new Uint8Array(bufferLength);\n\n            const frequencyCtx = frequencyRef.current.getContext(\"2d\");\n            const smudgeCtx = backgroundRef.current.getContext(\"2d\", { willReadFrequently: true });\n            const hiddenCanvas = document.createElement(\"CANVAS\")\n            const hiddenCtx =  hiddenCanvas.getContext(\"2d\");\n            backgroundRef.current.style.width ='100%';\n            backgroundRef.current.style.height='100%';\n            frequencyRef.current.style.width ='100%';\n            frequencyRef.current.style.height='100%';\n            backgroundRef.current.width  = canvasAreaRef.current.offsetWidth;\n            backgroundRef.current.height = canvasAreaRef.current.offsetHeight;\n            backgroundRef.current.style.transition = \"all 2s\";\n            backgroundRef.current.style.opacity = \"0\";\n            frequencyRef.current.width  = canvasAreaRef.current.offsetWidth;\n            frequencyRef.current.height = canvasAreaRef.current.offsetHeight;\n            hiddenCanvas.width = canvasAreaRef.current.offsetWidth;\n            hiddenCanvas.height = canvasAreaRef.current.offsetHeight;\n\n            canvasAreaRef.current.addEventListener(\"resize\", () => {\n                backgroundRef.current.width  = canvasAreaRef.current.offsetWidth;\n                backgroundRef.current.height = canvasAreaRef.current.offsetHeight;\n                frequencyRef.current.width  = canvasAreaRef.current.offsetWidth;\n                frequencyRef.current.height = canvasAreaRef.current.offsetHeight;\n                backgroundRef.current.style.transition = \"all 2s\";\n                hiddenCanvas.width = canvasAreaRef.current.offsetWidth;\n                hiddenCanvas.height = canvasAreaRef.current.offsetHeight;\n            });\n\n            let ultimatePeak = 1;\n            let rotationAngle = 0;\n            let rotateSmudge = false;\n            let splitSmudge = true;\n            let growSmudge = false;\n            let smudgeVelocity = 0;\n            let smudgeGrowVelocity = 0;\n            var imageData;\n            let doubles = 1, doublesGoal = 1;\n\n            // Draw the frequency spectrum visualization\n            function drawVisualization() {\n                if (audioElement.src.charAt(audioElement.src.length - 1) === \"!\") return;\n                requestAnimationFrame(drawVisualization);  \n                analyser.getByteFrequencyData(dataArray);\n                \n                let avgAmplitude = 0;\n                let highFreqAvgAmplitude = 0;\n                let highFreqPeakAmplitude = 0;\n                let midFreqAvgAmplitude = 0;\n                let lowFreqAvgAmplitude = 0;\n                let lowFreqPeakAmplitude = 0;\n                if (dataArray && dataArray.length > 0) {\n                    let gradient = smudgeCtx.createLinearGradient(0, 0, smudgeCtx.canvas.width, 0);\n                    let highFrequencyColor = getHighFrequencyColor(dataArray);\n                    gradient.addColorStop(0, highFrequencyColor);\n                    gradient.addColorStop(0.5, getLowFrequencyColor(dataArray));\n                    gradient.addColorStop(1, highFrequencyColor);\n                    smudgeCtx.fillStyle = gradient;\n                    let verticalCenter = smudgeCtx.canvas.height / 2;\n                    let zeroAdjust = 0;\n                    for (let i = dataArray.length - 1; i >= 0; i--) {\n                        if (dataArray[i] - 20 > 0) break;\n                        zeroAdjust++;\n                    }\n                    let barWidth = ((smudgeCtx.canvas.width / dataArray.length)) / 2;\n                    let x = 0;\n                    let x2 = smudgeCtx.canvas.width;\n                    for (let i = 0; i < dataArray.length - zeroAdjust; i++) {\n                        drawVisualizationBar(i, barWidth, x, verticalCenter);\n                        drawVisualizationBar(i, barWidth, x2, verticalCenter);\n                        x += (smudgeCtx.canvas.width / (dataArray.length - zeroAdjust)) / 2;\n                        x2 -= (smudgeCtx.canvas.width / (dataArray.length - zeroAdjust)) / 2;\n                    }\n                    avgAmplitude = getAverageAmplitude(dataArray, 0, dataArray.length);\n                    highFreqAvgAmplitude = getAverageAmplitude(dataArray, 12 * dataArray.length / 16, dataArray.length);\n                    highFreqPeakAmplitude = getPeakAmplitude(dataArray, 12 * dataArray.length / 16, dataArray.length);\n                    midFreqAvgAmplitude = getAverageAmplitude(dataArray, dataArray.length / 16, 3 * dataArray.length / 16);\n                    lowFreqAvgAmplitude = getAverageAmplitude(dataArray, 0, dataArray.length / 16);\n                    lowFreqPeakAmplitude = getPeakAmplitude(dataArray, 0, dataArray.length / 16);\n                }\n\n                //smudge effect\n                rotateSmudge = (rotateSmudge && !(lowFreqPeakAmplitude > ultimatePeak * 1.01) && midFreqAvgAmplitude + highFreqAvgAmplitude > avgAmplitude * 2)\n                                || midFreqAvgAmplitude + highFreqAvgAmplitude > avgAmplitude * 3.2;\n                splitSmudge = !growSmudge || ((splitSmudge && !(lowFreqPeakAmplitude < ultimatePeak * 0.8) && midFreqAvgAmplitude + highFreqAvgAmplitude < avgAmplitude * 3)\n                                || midFreqAvgAmplitude + highFreqAvgAmplitude < avgAmplitude * 2);\n                growSmudge = ((growSmudge) && highFreqPeakAmplitude + midFreqAvgAmplitude > highFreqAvgAmplitude + lowFreqAvgAmplitude / 2)\n                                || (highFreqPeakAmplitude * 2 + midFreqAvgAmplitude > highFreqAvgAmplitude + lowFreqAvgAmplitude)\n                                || (rotateSmudge && highFreqPeakAmplitude * 2 + midFreqAvgAmplitude > highFreqAvgAmplitude / 2 + lowFreqAvgAmplitude);\n                if (rotateSmudge) {\n                    if (backgroundRef.current.style.opacity !== \"0.4\") {\n                        backgroundRef.current.style.opacity = \"0.4\";\n                    }\n                    rotationAngle = (rotationAngle + 1) % 360;\n                    smudgeVelocity = (lowFreqAvgAmplitude / 10) * ((midFreqAvgAmplitude < highFreqAvgAmplitude * 5)? -1: 1);\n                    // Save the current canvas state\n                    smudgeCtx.save();\n                    // Rotate the canvas\n                    smudgeCtx.translate(smudgeCtx.canvas.width / 2, smudgeCtx.canvas.height / 2);\n                    smudgeCtx.rotate(Math.PI / 180 * rotationAngle * smudgeVelocity);\n                    smudgeCtx.translate(-smudgeCtx.canvas.width / 2, -smudgeCtx.canvas.height / 2);\n                    // Draw the smudged image on the canvas\n                    smudgeCtx.globalAlpha = 0.008;\n                    smudgeCtx.drawImage(smudgeCtx.canvas, 0, 0);\n                    // Restore the saved state\n                    smudgeCtx.restore();\n                } else if (splitSmudge) {\n                    rotationAngle = 0;\n                    if (highFreqPeakAmplitude * 1.8 <= avgAmplitude) {\n                        if (backgroundRef.current.style.opacity !== \"0\") {\n                            backgroundRef.current.style.opacity = \"0\";\n                        }\n                    } else {\n                        if (backgroundRef.current.style.opacity !== \"0.4\") {\n                            backgroundRef.current.style.opacity = \"0.4\";\n                        }\n                    }\n                    imageData = smudgeCtx.getImageData(0, 0, smudgeCtx.canvas.width, smudgeCtx.canvas.height);\n                    smudgeVelocity = (avgAmplitude < 10)? avgAmplitude * 2: (((smudgeVelocity < 0 && lowFreqPeakAmplitude >= ultimatePeak) || (lowFreqPeakAmplitude >= ultimatePeak && lowFreqAvgAmplitude * 0.5 > midFreqAvgAmplitude + highFreqAvgAmplitude))? -1: 1) * avgAmplitude / 4;\n                    smudgeCtx.clearRect(0, 0, smudgeCtx.canvas.width, smudgeCtx.canvas.height);\n                    smudgeCtx.putImageData(imageData, 0, -smudgeVelocity, 0, 0, smudgeCtx.canvas.width, smudgeCtx.canvas.height / 2);\n                    smudgeCtx.putImageData(imageData, 0, smudgeVelocity, 0, smudgeCtx.canvas.height / 2, smudgeCtx.canvas.width, smudgeCtx.canvas.height / 2);\n                }\n                if (growSmudge) {\n                    smudgeGrowVelocity = (((!rotateSmudge && smudgeGrowVelocity < 0 && lowFreqPeakAmplitude > midFreqAvgAmplitude + highFreqPeakAmplitude) || lowFreqPeakAmplitude > (midFreqAvgAmplitude + highFreqAvgAmplitude) * 2.8)? -1: 1) * (highFreqPeakAmplitude - highFreqAvgAmplitude * (rotateSmudge? 16: 4)) / (avgAmplitude * 20);\n                    let widthOffset = (smudgeCtx.canvas.width * smudgeGrowVelocity);\n                    let heightOffset = (smudgeCtx.canvas.height * smudgeGrowVelocity);\n                    imageData = smudgeCtx.getImageData(0, 0, smudgeCtx.canvas.width, smudgeCtx.canvas.height);\n                    hiddenCtx.clearRect(0, 0, hiddenCtx.canvas.width, hiddenCtx.canvas.height);\n                    hiddenCtx.drawImage(smudgeCtx.canvas, 0, 0);\n                    smudgeCtx.clearRect(0, 0, smudgeCtx.canvas.width, smudgeCtx.canvas.height);\n                    smudgeCtx.drawImage(hiddenCtx.canvas, 0 - widthOffset / 2, 0 - heightOffset / 2, smudgeCtx.canvas.width + widthOffset, smudgeCtx.canvas.height + heightOffset);\n                } else {\n                    smudgeGrowVelocity = 0;\n                }\n\n                if (avgAmplitude > 25) {\n                    if ((doublesGoal === 2 && midFreqAvgAmplitude > avgAmplitude * 2) || midFreqAvgAmplitude > avgAmplitude * 3.2) {\n                        doublesGoal = 2;\n                    } else {\n                        doublesGoal = 1;\n                    }\n                }\n                if (doubles !== doublesGoal) {\n                    doubles += (doublesGoal - doubles) / 4.0;\n                }\n\n                convertToASCII(smudgeCtx, frequencyCtx, doubles);\n            }\n\n            const asciiArtChars = [' ', \"'\", '^', '*', ';', 'D', 'a', 'v', 'i', 'd', 'M', 'a', 's', 'h', '$', '%', '#', '@', '?', '0', '1', '!'];\n            function convertToASCII(fromContext, toContext, doubles) {\n                toContext.clearRect(0, 0, toContext.canvas.width, toContext.canvas.height);\n                // Set the font for the ASCII art\n                toContext.font = '28px monospace';\n                \n                // Get the image data from the original canvas\n                var imageData = fromContext.getImageData(0, 0, fromContext.canvas.width, fromContext.canvas.height);\n                var pixels = imageData.data;\n                var char, r, g, b, alpha;\n                var pixelGap = Math.floor(((fromContext.canvas.width * fromContext.canvas.height) / 8500));\n                // Convert the image to black and white\n                for (let i = 0; i < pixels.length; i += pixelGap * 4) {\n                    r = pixels[i];\n                    g = pixels[i + 1];\n                    b = pixels[i + 2];\n                    alpha = pixels[i + 3];\n                    char = asciiArtChars[Math.floor(asciiArtChars.length * (Math.max(alpha, 1) / 256))];\n                    // Fill the ASCII character with the original color\n                    toContext.fillStyle = 'rgba(' + r + ',' + g + ',' + b + ',' + (alpha / 10.0) + ')';\n                    toContext.fillText(char, (i / 4 / doubles) % toContext.canvas.width, Math.floor((i / 4) / toContext.canvas.width));\n                }\n            }\n        \n            function getAverageAmplitude(data, startIndex, endIndex) {\n                startIndex = Math.trunc(startIndex);\n                endIndex = Math.min(Math.trunc(endIndex), data.length);\n                let sum = 0;\n                for (let i = startIndex; i < endIndex; i++) {\n                    sum += data[i];\n                }\n                return sum / (endIndex - startIndex - 1);\n            }\n        \n            function getPeakAmplitude(data, startIndex, endIndex) {\n                startIndex = Math.trunc(startIndex);\n                endIndex = Math.min(Math.trunc(endIndex), data.length);\n                let peak = 0;\n                for (let i = startIndex; i < endIndex; i++) {\n                    peak = Math.max(peak, data[i]);\n                }\n                return peak;\n            }\n        \n            function drawVisualizationBar(index, barWidth, x, verticalCenter) {\n                if (dataArray[index] > ultimatePeak) {\n                    ultimatePeak = dataArray[index];\n                }\n                //take the square of the data like this will amplify peaks\n                const adjustedData = 8 * dataArray[index] * Math.pow(dataArray[index] / ultimatePeak, 1.5 * (1 - (index / dataArray.length))) * ((index + (dataArray.length / 2)) / dataArray.length);\n                let barHeight = adjustedData;\n                let offsetX = (Math.random() - 0.5) * adjustedData / 32;\n                let offsetY = (Math.random() - 0.5) * adjustedData / 32;\n                let offsetWidth = (Math.random() - 0.5) * adjustedData / 32;\n                smudgeCtx.fillRect(x + offsetX, verticalCenter - (barHeight / 4) + offsetY, barWidth + offsetWidth, barHeight / 2);\n            }\n        \n            let lowFreqShiftingColorNumber = 0;\n            function getLowFrequencyColor(dataArray) {\n                let lowFrequencySum = 0;\n                let lowFrequencyMax = 0;\n                for (let i = 0; i < dataArray.length / 2; i++) {\n                    lowFrequencySum += dataArray[i];\n                    if (dataArray[i] > lowFrequencyMax) {\n                        lowFrequencyMax = dataArray[i];\n                    }\n                }\n                let lowFrequencyAverage = lowFrequencySum / (dataArray.length / 2);\n                if (lowFrequencyMax > lowFrequencyAverage * 10 || lowFrequencyAverage > ultimatePeak / 2) {\n                    lowFreqShiftingColorNumber = (lowFreqShiftingColorNumber + (lowFrequencyMax / (lowFrequencyAverage * 20)) + (lowFrequencyAverage / ultimatePeak)) % 255;\n                }\n                return `hsl(${map(lowFrequencyAverage, lowFreqShiftingColorNumber, 255, lowFreqShiftingColorNumber / 4, 360)}, 100%, 50%,` + (0.01) + `)`;\n            }\n        \n            let highFreqShiftingColorNumber = 0;\n            function getHighFrequencyColor(dataArray) {\n                let highFrequencySum = 0;\n                let highFrequencyMax = 0;\n                for (let i = dataArray.length / 2; i < dataArray.length; i++) {\n                    highFrequencySum += dataArray[i];\n                    if (dataArray[i] > highFrequencyMax) {\n                        highFrequencyMax = dataArray[i];\n                    }\n                }\n                let highFrequencyAverage = highFrequencySum / (dataArray.length/ 2);\n                if (highFrequencyMax > highFrequencyAverage * 200 || highFrequencyAverage > ultimatePeak / 2) {\n                    highFreqShiftingColorNumber = (highFreqShiftingColorNumber + (highFrequencyMax / (highFrequencyAverage * 200)) + (highFrequencyAverage / ultimatePeak)) % 255;\n                }\n                return `hsl(${map(highFrequencyAverage, highFreqShiftingColorNumber, 255, highFrequencyAverage / 4, 360)}, 100%, 50%,` + (0.01) + `)`;\n            }\n        \n            function map(value, start1, stop1, start2, stop2) {\n                return start2 + (stop2 - start2) * ((value - start1) / (stop1 - start1));\n            }\n\n            drawVisualization();\n        }\n    }, [analyser, source, audioCtx]);\n\n    useEffect(() => {\n        if (audioCtx && audioElement) {\n            setAnalyser(audioCtx.createAnalyser());\n            setSource(audioCtx.createMediaElementSource(audioElement));\n        }\n    }, [audioCtx, audioElement]);\n\n    useEffect(() => {\n        if (audioElement) {\n            function updateScrubBar() {\n                if(audioElement && scrubBarRef.current) {\n                    let currentTime = audioElement.currentTime;\n                    let duration = audioElement.duration;\n                    let scrubBarValue = (currentTime/duration) * 100;\n                    scrubBarRef.current.value = scrubBarValue;\n                }\n            }\n            audioElement.addEventListener(\"timeupdate\", updateScrubBar);\n            audioElement.src = (fileInputRef.current && fileInputRef.current.files[0])? URL.createObjectURL(fileInputRef.current.files[0]): process.env.PUBLIC_URL + '/music/song.mp3';\n            audioElement.addEventListener(\"loadeddata\", () => {\n                updateVolume();\n                setLoaded(true);\n            });\n            audioElement.addEventListener(\"ended\", () => {\n                setPlay(false);\n            });\n            setAudioCtx(new (window.AudioContext || window.webkitAudioContext)());\n        }\n    }, [audioElement]);\n\n    // Initialize audio context and elements when the file input changes\n    function loadAudio() {\n        if (fileInputRef.current && fileInputRef.current.files[0]) {\n            let filePath = fileInputRef.current.files[0].name;\n            var allowedExtensions = /(\\.mp3|\\.wav|\\.mp4)$/i;\n            if (!allowedExtensions.exec(filePath)) {\n                alert('Invalid file type for audio visualizer. Try again with an MP3, MP4, or WAV file.');\n                return;\n            }\n        }\n        if (audioElement) {\n            audioElement.pause();\n            audioElement.currentTime = 0;\n        }\n        setAnalyser(null);\n        setSource(null);\n        setAudioCtx(null);\n        if (audioElement != null) {\n            audioElement.src = \"!\";\n            audioElement.remove();\n        }\n        setAudioElement(new Audio());\n    }\n\n    function updateVolume() {\n        if(audioElement && volumeBarRef.current) {\n            let volumeBarValue = volumeBarRef.current.value;\n            audioElement.volume = volumeBarValue / 100;\n        }\n    }\n\n    function updatePlayback() {\n        if(audioElement && scrubBarRef.current) {\n            let scrubBarValue = scrubBarRef.current.value;\n            let currentTime = (scrubBarValue / 100) * audioElement.duration;\n            audioElement.currentTime = currentTime;\n        } else {\n            loadAudio();\n        }\n    }\n\n    function togglePlay(given) {\n        if (audioElement && audioCtx) {\n            audioCtx.resume();\n            if ((given === true) || audioElement.paused) {\n                audioElement.play();\n                setPlay(true);\n            } else {\n                audioElement.pause();\n                setPlay(false);\n            }\n        } else {\n            loadAudio();\n        }\n    }\n\n    return (\n        <VisibilitySensor onChange={setIsVisible}>\n            <div style={props.style} className='canvas-area no-select' ref={canvasAreaRef}>\n                <br />\n                <br />\n                <div className=\"main-header-container\">\n                    <h2 className={\"main-header\"} style={play?{opacity: 0, transition: \"2s opacity\"}:{opacity: 0.8, transition: \"3s opacity\"}}>David Mash</h2>\n                </div>\n                <div className=\"control-panel\" onClick={togglePlay}>\n                    {play?\n                    <img alt={\"\"} src={process.env.PUBLIC_URL + '/images/pause-button.png'} className={\"pause-button\"} />\n                    :\n                    <img alt={\"\"} src={process.env.PUBLIC_URL + '/images/play-button.png'} className={\"play-button\"} />\n                    }\n                </div>\n                <br />\n                <canvas ref={frequencyRef} id=\"frequency\" onClick={togglePlay}/>\n                <canvas ref={backgroundRef} id=\"background\" />\n                <img\n                    alt={\"\"}\n                    src={process.env.PUBLIC_URL + '/images/main_images/' + props.imageNumber + '.jpeg'}\n                    style={{objectFit: \"cover\", minHeight: \"100%\", height: \"100%\", minWidth: \"100%\", width: \"auto\", position: \"absolute\", zIndex: \"-3\", top: \"0px\", left: \"0px\"}}\n                />\n                <div\n                    className='bottom-controls-1'\n                    onMouseOver={() => {if (!mouseOverBottom1) setMouseOverBottom1(true);}}\n                    onMouseLeave={() => {if (mouseOverBottom1) setMouseOverBottom1(false);}}\n                    style={mouseOverBottom1?{opacity: 0.8, transition: \"opacity 300ms\"}:play?{opacity: 0, transition: \"opacity 300ms\"}:{opacity: 0.6, transition: \"opacity 300ms\"}}\n                >\n                    <input\n                        className={\"file-input song-upload-button\"}\n                        type=\"file\"\n                        ref={fileInputRef}\n                        onChange={loadAudio}\n                    />\n                </div>\n                <div\n                    className='bottom-controls-2'\n                    onMouseOver={() => {if (!mouseOverBottom2) setMouseOverBottom2(true);}}\n                    onMouseLeave={() => {if (mouseOverBottom2) setMouseOverBottom2(false);}}\n                    style={mouseOverBottom2?{opacity: 0.8, transition: \"opacity 300ms\"}:play?{opacity: 0, transition: \"opacity 300ms\"}:{opacity: 0.6, transition: \"opacity 300ms\"}}\n                >\n                    <img className=\"slider-icon-left\" src={process.env.PUBLIC_URL + '/images/volume-down.png'} alt=\"\"></img>\n                    <input\n                        ref={volumeBarRef}\n                        className=\"volume-bar\"\n                        type=\"range\"\n                        min=\"0\"\n                        max=\"100\"\n                        id=\"volume-control\"\n                        defaultValue={50}\n                        onInput={() => {updateVolume();}}\n                    />\n                    <img className=\"slider-icon-right\" src={process.env.PUBLIC_URL + '/images/volume-up.png'} alt=\"\"></img>\n                </div>\n                {loaded?\n                <div\n                    className='bottom-controls-3'\n                    onMouseOver={() => {if (!mouseOverBottom3) setMouseOverBottom3(true);}}\n                    onMouseLeave={() => {if (mouseOverBottom3) setMouseOverBottom3(false);}}\n                    style={mouseOverBottom3?{opacity: 0.8, transition: \"opacity 300ms\"}:play?{opacity: 0, transition: \"opacity 300ms\"}:{opacity: 0.6, transition: \"opacity 300ms\"}}\n                >\n                    <input\n                        ref={scrubBarRef}\n                        className=\"scrub-bar\"\n                        type=\"range\"\n                        min=\"0\"\n                        max=\"100\"\n                        defaultValue={0}\n                        id=\"scrub-bar\"\n                        disabled={!loaded}\n                        onInput={() => {updatePlayback();}}\n                    />\n                </div>\n                :\n                <></>\n                }\n            </div>\n        </VisibilitySensor>\n    );\n}\n\nexport default AudioVisualizer;\n","import React, { Component } from \"react\";\nimport AudioVisualizer from \"./AudioVisualizer\";\n\nclass Header extends Component {\n  constructor() {\n    super();\n    this.state = {\n      imageNumber: Math.floor(Math.random() * 2)\n    };\n  }\n\n  render() {\n    if (!this.props.data) return null;\n\n    //const name = this.props.data.name;\n    //const description = this.props.data.description;\n\n    return (\n      <header id=\"home\">\n        <div className=\"main-visual-container\">\n          <AudioVisualizer style={{width: \"100%\", position: \"absolute\", zIndex: \"0\", top: \"0px\", left: \"0px\"}} imageNumber={this.state.imageNumber} />\n        </div>\n\n        <nav id=\"nav-wrap\">\n          {/*\n          <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">\n            Show navigation\n          </a>\n          <a className=\"mobile-btn\" href=\"#home\" title=\"Hide navigation\">\n            Hide navigation\n          </a>\n          */}\n\n          <ul id=\"nav\" className=\"nav\">\n            <li className=\"current\">\n              <a className=\"smoothscroll\" href=\"#home\">\n                Home\n              </a>\n            </li>\n\n            <li>\n              <a className=\"smoothscroll\" href=\"#about\">\n                About\n              </a>\n            </li>\n\n            <li>\n              <a className=\"smoothscroll\" href=\"#resume\">\n                Resume\n              </a>\n            </li>\n\n            <li>\n              <a className=\"smoothscroll\" href=\"#portfolio\">\n                Works\n              </a>\n            </li>\n\n            <li>\n              <a className=\"smoothscroll\" href=\"#contact\">\n                Contact\n              </a>\n            </li>\n          </ul>\n        </nav>\n\n        <p className=\"scrolldown\">\n          <a className=\"smoothscroll\" href=\"#about\">\n            <i className=\"icon-down-circle\"></i>\n          </a>\n        </p>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { useState, useRef } from 'react';\nimport { Transition } from 'react-transition-group';\nimport * as Waypoint from 'react-waypoint';\n\nconst FadeIn = ({ children, ...props }) => {\n    const [isVisible, setIsVisible] = useState(false);\n    const nodeRef = useRef(null);\n\n    const duration = 500;\n    \n    const defaultStyle = {\n      transition: `opacity ${duration}ms ease-in-out`,\n        opacity: 0\n    }\n\n    const transitionStyles = {\n      entering: { opacity: 1 },\n      entered:  { opacity: 1 },\n      exiting:  { opacity: 0 },\n      exited:  { opacity: 0 },\n    };\n\n    return (\n        <Waypoint.Waypoint onEnter={() => setIsVisible(true)}>\n            <div>\n                <Transition\n                    nodeRef={nodeRef}\n                    in={isVisible}\n                    timeout={duration}\n                    classNames=\"fade\"\n                    {...props}\n                >\n                    {state => (\n                        <div ref={nodeRef} style={{\n                            ...defaultStyle,\n                            ...transitionStyles[state]}}>\n                            {children}\n                        </div>\n                    )}\n                </Transition>\n            </div>\n        </Waypoint.Waypoint>\n    );\n};\n\nexport default FadeIn;","import React, { Component } from \"react\";\nimport FadeIn from \"./FadeIn\";\n\nclass Footer extends Component {\n  render() {\n    if (!this.props.data) return null;\n\n    const networks = this.props.data.social.map(function (network) {\n      return (\n        <li key={network.name}>\n          <a href={network.url} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className={network.className}></i>\n          </a>\n        </li>\n      );\n    });\n\n    return (\n      <footer>\n        <div className=\"row\">\n          <FadeIn bottom>\n            <div className=\"twelve columns\">\n              <ul className=\"social-links\">{networks}</ul>\n              <ul className=\"copyright\">\n                <li>David Mash - 2023</li>\n              </ul>\n            </div>\n          </FadeIn>\n\n          <div id=\"go-top\">\n            <a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\">\n              <i className=\"icon-up-open\"></i>\n            </a>\n          </div>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport FadeIn from \"./FadeIn\";\n\nclass About extends Component {\n  render() {\n    if (!this.props.data) return null;\n\n    const name = this.props.data.name;\n    const profilepic = \"images/\" + this.props.data.image;\n    const bio = this.props.data.bio;\n    const linkedin = this.props.data.linkedin;\n    const email = this.props.data.email;\n    const resumeDownload = this.props.data.resumedownload;\n\n    return (\n      <section id=\"about\">\n        <FadeIn>\n          <div className=\"row\">\n            <div className=\"three columns\">\n              <img\n                className=\"profile-pic\"\n                src={profilepic}\n                alt=\"David Mash\"\n              />\n            </div>\n            <div className=\"nine columns main-col\">\n              <h2>About Me</h2>\n\n              <p>{bio}</p>\n              <div className=\"row\">\n                <div className=\"columns contact-details\">\n                  <h2>Contact Details</h2>\n                  <p className=\"address\">\n                    <span>{name}</span>\n                    <br />\n                    <span>{email}</span>\n                    <br />\n                    <a href={linkedin} target=\"_blank\" rel=\"noopener noreferrer\">🔗 LinkedIn</a>\n                  </p>\n                </div>\n                <div className=\"columns download\">\n                  <p>\n                    <a href={resumeDownload} className=\"button\">\n                      <i className=\"fa fa-download\"></i>Download Resume\n                    </a>\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </FadeIn>\n      </section>\n    );\n  }\n}\n\nexport default About;\n","import React, { useState, useRef } from 'react';\nimport { Transition } from 'react-transition-group';\nimport * as Waypoint from 'react-waypoint';\n\nconst SlideIn = ({ children, direction = 'left', ...props }) => {\n    const [isVisible, setIsVisible] = useState(false);\n    const nodeRef = useRef(null);\n\n    const duration = 500;\n    \n    const defaultStyle = {\n      transition: `opacity ${duration}ms ease-in-out`,\n        opacity: 0\n    }\n\n    const transitionStyles = {\n        entering:\n            {\n                opacity: 1,\n                position: \"relative\",\n                left: 0,\n                transition: \"left 1000ms\"\n            },\n        entered:\n            {\n                opacity: 1,\n                position: \"relative\",\n                left: 0,\n                transition: \"left 1000ms\"\n            },\n        exiting:\n            {\n                opacity: 0,\n                position: \"absolute\",\n                left: \"-100%\"\n            },\n        exited:\n            {\n                opacity: 0,\n                position: \"absolute\",\n                left: \"-100%\"\n            },\n    };\n\n    return (\n        <Waypoint.Waypoint onEnter={() => setIsVisible(true)}>\n            <div>\n                <Transition\n                    nodeRef={nodeRef}\n                    in={isVisible}\n                    timeout={duration}\n                    classNames={`slide-${direction}`}\n                    {...props}\n                >\n                    {state => (\n                        <div ref={nodeRef} style={{\n                            ...defaultStyle,\n                            ...transitionStyles[state]}}>\n                            {children}\n                        </div>\n                    )}\n                </Transition>\n            </div>\n        </Waypoint.Waypoint>\n    );\n};\n\nexport default SlideIn;","import React, { Component } from \"react\";\nimport SlideIn from \"./SlideIn\";\n\nclass Resume extends Component {\n  getRandomColor() {\n    let letters = \"0123456789ABCDEF\";\n    let color = \"#\";\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n\n  render() {\n    if (!this.props.data) return null;\n\n    const skillmessage = this.props.data.skillmessage;\n    const education = this.props.data.education.map(function (education) {\n      return (\n        <div key={education.school}>\n          <h3>{education.school}</h3>\n          <p className=\"info\">\n            {education.degree} <span>&bull;</span>\n            <em className=\"date\">{education.graduated}</em>\n          </p>\n          <p>{education.description}</p>\n        </div>\n      );\n    });\n\n    const work = this.props.data.work.map(function (work) {\n      return (\n        <div key={work.company}>\n          <h3>{work.company}</h3>\n          <p className=\"info\">\n            {work.title}\n            <span>&bull;</span> <em className=\"date\">{work.years}</em>\n          </p>\n          <p>{work.description}</p>\n        </div>\n      );\n    });\n\n    const skills = this.props.data.skills.map((skills) => {\n      const backgroundColor = this.getRandomColor();\n      const className = \"bar-expand \" + skills.name.toLowerCase();\n      const width = skills.level;\n\n      return (\n        <li key={skills.name}>\n          <span style={{ width, backgroundColor }} className={className}></span>\n          <em>{skills.name}</em>\n        </li>\n      );\n    });\n\n    return (\n      <section id=\"resume\">\n        <SlideIn>\n          <div className=\"row education\">\n            <div className=\"three columns header-col\">\n              <h1>\n                <span>Education</span>\n              </h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              <div className=\"row item\">\n                <div className=\"twelve columns\">{education}</div>\n              </div>\n            </div>\n          </div>\n        </SlideIn>\n\n        <SlideIn>\n          <div className=\"row work\">\n            <div className=\"three columns header-col\">\n              <h1>\n                <span>Work</span>\n              </h1>\n            </div>\n\n            <div className=\"nine columns main-col\">{work}</div>\n          </div>\n        </SlideIn>\n\n        <SlideIn>\n          <div className=\"row skill\">\n            <div className=\"three columns header-col\">\n              <h1>\n                <span>Skills</span>\n              </h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              <p>{skillmessage}</p>\n\n              <div className=\"bars\">\n                <ul className=\"skills\">{skills}</ul>\n              </div>\n            </div>\n          </div>\n        </SlideIn>\n      </section>\n    );\n  }\n}\n\nexport default Resume;\n","import React, { Component } from \"react\";\nimport FadeIn from \"./FadeIn\";\nimport SlideIn from \"./SlideIn\";\n\nclass Contact extends Component {\n  render() {\n    if (!this.props.data) return null;\n\n    const message = this.props.data.contactmessage;\n\n    return (\n      <section id=\"contact\">\n        <FadeIn>\n          <div className=\"row section-head\">\n            <div className=\"two columns header-col\">\n              <h1>\n                <span>Get In Touch.</span>\n              </h1>\n            </div>\n\n            <div className=\"ten columns\">\n              <p className=\"lead\">{message}</p>\n            </div>\n          </div>\n        </FadeIn>\n\n        <div className=\"row\">\n          <SlideIn>\n            <div className=\"twelve columns\">\n              <form id=\"contactForm\" name=\"contactForm\">\n                <fieldset>\n                  {/*\n                  <div>\n                    <label htmlFor=\"contactName\">\n                      Name <span className=\"required\">*</span>\n                    </label>\n                    <input\n                      type=\"text\"\n                      defaultValue=\"\"\n                      size=\"35\"\n                      id=\"contactName\"\n                      name=\"contactName\"\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                  <div>\n                    <label htmlFor=\"contactEmail\">\n                      Email <span className=\"required\">*</span>\n                    </label>\n                    <input\n                      type=\"text\"\n                      defaultValue=\"\"\n                      size=\"35\"\n                      id=\"contactEmail\"\n                      name=\"contactEmail\"\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                  */}\n                  <div>\n                    <label htmlFor=\"contactSubject\">Subject</label>\n                    <input\n                      type=\"text\"\n                      defaultValue=\"\"\n                      size=\"35\"\n                      id=\"contactSubject\"\n                      name=\"contactSubject\"\n                      onChange={this.handleChange}\n                    />\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"contactMessage\">\n                      Message <span className=\"required\">*</span>\n                    </label>\n                    <textarea\n                      cols=\"50\"\n                      rows=\"15\"\n                      id=\"contactMessage\"\n                      name=\"contactMessage\"\n                    ></textarea>\n                  </div>\n\n                  <div>\n                    <button className=\"submit\">Submit</button>\n                    <span id=\"image-loader\">\n                      <img alt=\"\" src=\"images/loader.gif\" />\n                    </span>\n                  </div>\n                </fieldset>\n              </form>\n\n              <div id=\"message-warning\"> An error has occurred. Consider emailing davidmash134@gmail.com from your regular email service.</div>\n              <div id=\"message-success\">\n                <i className=\"fa fa-check\"></i>Your message was sent, thank you!\n                <br />\n              </div>\n            </div>\n          </SlideIn>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport FadeIn from \"./FadeIn\";\n\nlet id = 0;\nclass Portfolio extends Component {\n  render() {\n    if (!this.props.data) return null;\n\n    const projects = this.props.data.projects.map(function (project) {\n      let projectImage = \"images/portfolio/\" + project.image;\n\n      return (\n        <button key={id++} className=\"columns portfolio-item\">\n          <div className=\"item-wrap\">\n            <a href={project.link} target=\"_blank\" rel=\"noopener noreferrer\">\n              <img className={\"project-link-image\"} alt={project.title} src={projectImage} />\n              <h5 style={{ textAlign: \"center\" }}>{project.title}</h5>\n              <div style={{ textAlign: \"center\" }}>{project.description}</div>\n            </a>\n          </div>\n        </button>\n      );\n    });\n\n    return (\n      <section id=\"portfolio\">\n        <FadeIn>\n          <div className=\"row\">\n            <div className=\"twelve columns collapsed\">\n              <h1>Here are some things that I have worked on.</h1>\n\n              <div\n                id=\"portfolio-wrapper\"\n                className=\"bgrid-quarters s-bgrid-thirds cf\"\n              >\n                {projects}\n              </div>\n            </div>\n          </div>\n        </FadeIn>\n      </section>\n    );\n  }\n}\n\nexport default Portfolio;\n","import React, { Component } from \"react\";\n//import ReactGA from \"react-ga\";\nimport $ from \"jquery\";\nimport \"./App.css\";\nimport Header from \"./Components/Header\";\nimport Footer from \"./Components/Footer\";\nimport About from \"./Components/About\";\nimport Resume from \"./Components/Resume\";\nimport Contact from \"./Components/Contact\";\nimport Portfolio from \"./Components/Portfolio\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      resumeData: {}\n    };\n\n    //ReactGA.initialize(\"UA-110570651-1\");\n    //ReactGA.pageview(window.location.pathname);\n  }\n\n  getResumeData() {\n    $.ajax({\n      url: \"./resumeData.json\",\n      dataType: \"json\",\n      cache: false,\n      success: function(data) {\n        this.setState({ resumeData: data });\n      }.bind(this),\n      error: function(xhr, status, err) {\n        console.log(err);\n        alert(err);\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.getResumeData();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header data={this.state.resumeData.main} />\n        <About data={this.state.resumeData.main} />\n        <Resume data={this.state.resumeData.resume} />\n        <Portfolio data={this.state.resumeData.portfolio} />\n        <Contact data={this.state.resumeData.main} />\n        <Footer data={this.state.resumeData.main} />\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}