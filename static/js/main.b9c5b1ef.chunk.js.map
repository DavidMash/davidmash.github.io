{"version":3,"sources":["Components/AudioVisualizer.js","Components/Header.js","Components/FadeIn.js","Components/Footer.js","Components/About.js","Components/SlideIn.js","Components/Resume.js","Components/Contact.js","Components/Portfolio.js","App.js","reportWebVitals.js","index.js"],"names":["AudioVisualizer","props","useState","audioElement","setAudioElement","analyser","setAnalyser","audioCtx","setAudioCtx","source","setSource","loaded","setLoaded","canvasAreaRef","useRef","fileInputRef","filterCanvasRef","backgroundRef","scrubBarRef","volumeBarRef","play","setPlay","mouseOverBottom1","setMouseOverBottom1","mouseOverBottom2","setMouseOverBottom2","mouseOverBottom3","setMouseOverBottom3","setIsVisible","loadAudio","current","files","filePath","name","exec","alert","pause","currentTime","src","remove","Audio","updateVolume","volumeBarValue","value","volume","togglePlay","given","resume","paused","useEffect","convertToASCII","fromContext","toContext","fontMultiplier","fontSize","baseFontSize","fromCanvas","canvas","toCanvas","clearRect","width","height","font","char","r","g","b","alpha","curr","left","right","up","down","fromX","fromY","pixels","getImageData","data","skip","fromSkipX","Math","floor","fromSkipY","y","x","asciiArtChars","length","max","fillStyle","fillText","getAverageAmplitude","startIndex","endIndex","trunc","min","sum","i","getPeakAmplitude","peak","drawVisualizationBar","index","barWidth","verticalCenter","dataArray","ultimatePeak","adjustedData","pow","barHeight","offsetX","random","offsetY","offsetWidth","baseRender","fillRect","getLowFrequencyColor","lowFrequencySum","lowFrequencyMax","lowFrequencyAverage","lowFreqShiftingColorNumber","map","getHighFrequencyColor","highFrequencySum","highFrequencyMax","highFrequencyAverage","highFreqShiftingColorNumber","start1","stop1","start2","stop2","connect","destination","bufferLength","frequencyBinCount","Uint8Array","filterCtx","getContext","willReadFrequently","hiddenCanvas","document","createElement","hiddenCtx","style","transition","opacity","offsetHeight","addEventListener","imageData","rotationAngle","rotateSmudge","splitSmudge","growSmudge","smudgeVelocity","smudgeGrowVelocity","fontMultiplierGoal","drawVisualization","charAt","requestAnimationFrame","getByteFrequencyData","avgAmplitude","highFreqAvgAmplitude","highFreqPeakAmplitude","midFreqAvgAmplitude","lowFreqAvgAmplitude","lowFreqPeakAmplitude","gradient","createLinearGradient","highFrequencyColor","addColorStop","zeroAdjust","x2","save","translate","rotate","PI","globalAlpha","drawImage","restore","putImageData","widthOffset","heightOffset","abs","createAnalyser","createMediaElementSource","scrubBarValue","duration","URL","createObjectURL","window","AudioContext","webkitAudioContext","onChange","className","ref","onClick","alt","id","imageNumber","objectFit","minHeight","minWidth","position","zIndex","top","onMouseOver","onMouseLeave","type","defaultValue","onInput","disabled","updatePlayback","Header","state","this","href","Component","FadeIn","children","isVisible","nodeRef","defaultStyle","transitionStyles","entering","entered","exiting","exited","onEnter","Transition","in","timeout","classNames","Footer","networks","social","network","url","target","rel","bottom","title","About","profilepic","image","bio","linkedin","email","resumeDownload","resumedownload","SlideIn","direction","Resume","color","skillmessage","education","school","degree","graduated","description","work","company","years","skills","backgroundColor","getRandomColor","toLowerCase","level","Contact","message","contactmessage","htmlFor","size","handleChange","cols","rows","Portfolio","projects","project","projectImage","link","textAlign","App","resumeData","$","ajax","dataType","cache","success","setState","bind","error","xhr","status","err","console","log","getResumeData","main","portfolio","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"2RA8ceA,MA3cf,SAAyBC,GACrB,MAAwCC,mBAAS,MAAK,mBAA/CC,EAAY,KAAEC,EAAe,KACpC,EAAgCF,mBAAS,MAAK,mBAAvCG,EAAQ,KAAEC,EAAW,KAC5B,EAAgCJ,mBAAS,MAAK,mBAAvCK,EAAQ,KAAEC,EAAW,KAC5B,EAA4BN,mBAAS,MAAK,mBAAnCO,EAAM,KAAEC,EAAS,KACxB,EAA4BR,oBAAS,GAAM,mBAApCS,EAAM,KAAEC,EAAS,KAClBC,EAAgBC,iBAAO,MACvBC,EAAeD,iBAAO,MACtBE,EAAkBF,iBAAO,MACzBG,EAAgBH,iBAAO,MACvBI,EAAcJ,iBAAO,MACrBK,EAAeL,iBAAO,MAC5B,EAAwBZ,oBAAS,GAAM,mBAAhCkB,EAAI,KAAEC,EAAO,KACpB,EAAgDnB,oBAAS,GAAM,mBAAxDoB,EAAgB,KAAEC,EAAmB,KAC5C,EAAgDrB,oBAAS,GAAM,mBAAxDsB,EAAgB,KAAEC,EAAmB,KAC5C,EAAgDvB,oBAAS,GAAM,mBAAxDwB,EAAgB,KAAEC,EAAmB,KAC5C,EAAkCzB,oBAAS,GAAK,mBAA9B0B,GAAF,KAAc,MAkT9B,SAASC,IACL,GAAId,EAAae,SAAWf,EAAae,QAAQC,MAAM,GAAI,CACvD,IAAIC,EAAWjB,EAAae,QAAQC,MAAM,GAAGE,KAE7C,IADwB,wBACDC,KAAKF,GAExB,YADAG,MAAM,oFAIVhC,IACAA,EAAaiC,QACbjC,EAAakC,YAAc,GAE/B/B,EAAY,MACZI,EAAU,MACVF,EAAY,MACQ,MAAhBL,IACAA,EAAamC,IAAM,IACnBnC,EAAaoC,UAEjBnC,EAAgB,IAAIoC,OAGxB,SAASC,IACL,GAAGtC,GAAgBgB,EAAaW,QAAS,CACrC,IAAIY,EAAiBvB,EAAaW,QAAQa,MAC1CxC,EAAayC,OAASF,EAAiB,KAc/C,SAASG,EAAWC,GACZ3C,GAAgBI,GAChBA,EAASwC,UACM,IAAVD,GAAmB3C,EAAa6C,QACjC7C,EAAaiB,OACbC,GAAQ,KAERlB,EAAaiC,QACbf,GAAQ,KAGZQ,IAIR,OAvWAoB,qBAAU,WACN,GAAI5C,GAAYI,GAAUF,EAAU,CA6ChC,IAoHS2C,EAAT,SAAwBC,EAAaC,EAAWC,GAC5C,IAAIC,EAAWC,EAAeF,EAC1BG,EAAaL,EAAYM,OACzBC,EAAWN,EAAUK,OACzBL,EAAUO,UAAU,EAAG,EAAGP,EAAUK,OAAOG,MAAOR,EAAUK,OAAOI,QAEnET,EAAUU,KAAOR,EAAW,eAQ5B,IALA,IAEIS,EAAMC,EAAGC,EAAGC,EAAGC,EAAOC,EAAMC,EAAMC,EAAOC,EAAIC,EAAMC,EAAOC,EAD1DC,EADYxB,EAAYyB,aAAa,EAAG,EAAGzB,EAAYM,OAAOG,MAAOT,EAAYM,OAAOI,QACrEgB,KAGnBC,EAAOxB,EAAUyB,EAAYC,KAAKC,MAAM3B,GAAYI,EAASE,MAAQJ,EAAWI,QAASsB,EAAYF,KAAKC,MAAM3B,GAAYI,EAASG,OAASL,EAAWK,SACpJsB,EAAI,EAAGA,EAAIzB,EAASG,OAAQsB,GAAKL,EAAM,CAC5CJ,EAAQM,KAAKC,MAAME,GAAKzB,EAASG,OAASL,EAAWK,SACrD,IAAK,IAAIuB,EAAMD,EAAIL,EAAQ,IAAM,EAAI,EAAGxB,EAAW,EAAG8B,EAAI1B,EAASE,MAAOwB,GAAKN,EAC3EL,EAAQO,KAAKC,MAAMG,GAAK1B,EAASE,MAAQJ,EAAWI,QACpDQ,EAA4C,GAApCM,EAAQlB,EAAWI,MAAQa,GACnCJ,EAA8D,GAAtDK,EAAQlB,EAAWI,MAAQa,EAASM,EAAY,GACxDT,EAA+D,GAAtDI,EAAQlB,EAAWI,MAAQa,EAASM,EAAY,GACzDR,EAA8D,IAAvDG,EAASQ,EAAY,GAAM1B,EAAWI,MAAQa,GACrDD,EAAgE,IAAvDE,EAASQ,EAAY,GAAM1B,EAAWI,MAAQa,IACvDN,IAAUQ,EAAOP,EAAO,GAAGO,EAAOP,EAAO,GAAG,IAAMO,EAAON,EAAO,GAAGM,EAAON,EAAO,GAAG,IAAMM,EAAOL,EAAQ,GAAGK,EAAOL,EAAQ,GAAG,IAAMK,EAAOJ,EAAK,GAAGI,EAAOJ,EAAK,GAAG,IAAMI,EAAOH,EAAO,GAAGG,EAAOH,EAAO,GAAG,IAAM,IACnM,IACbR,IAAMW,EAAOP,GAAMO,EAAOP,GAAM,IAAMO,EAAON,GAAMM,EAAON,GAAM,IAAMM,EAAOL,GAAOK,EAAOL,GAAO,IAAMK,EAAOJ,GAAII,EAAOJ,GAAI,IAAMI,EAAOH,GAAMG,EAAOH,GAAM,IAAM,EACpKP,IAAMU,EAAOP,EAAO,GAAGO,EAAOP,EAAO,GAAG,IAAMO,EAAON,EAAO,GAAGM,EAAON,EAAO,GAAG,IAAMM,EAAOL,EAAQ,GAAGK,EAAOL,EAAQ,GAAG,IAAMK,EAAOJ,EAAK,GAAGI,EAAOJ,EAAK,GAAG,IAAMI,EAAOH,EAAO,GAAGG,EAAOH,EAAO,GAAG,IAAM,EAC5MN,IAAMS,EAAOP,EAAO,GAAGO,EAAOP,EAAO,GAAG,IAAMO,EAAON,EAAO,GAAGM,EAAON,EAAO,GAAG,IAAMM,EAAOL,EAAQ,GAAGK,EAAOL,EAAQ,GAAG,IAAMK,EAAOJ,EAAK,GAAGI,EAAOJ,EAAK,GAAG,IAAMI,EAAOH,EAAO,GAAGG,EAAOH,EAAO,GAAG,IAAM,EAC5MT,EAAOsB,EAAcL,KAAKC,MAAMI,EAAcC,QAAUN,KAAKO,IAAIpB,EAAO,GAAK,OAE7Ef,EAAUoC,UAAY,QAAUxB,EAAI,IAAMC,EAAI,IAAMC,EAAI,IAAOC,EAAQ,GAAQ,IAC/Ef,EAAUqC,SAAS1B,EAAMqB,EAAGD,EAAK7B,EAAW,MAK/CoC,EAAT,SAA6Bb,EAAMc,EAAYC,GAC3CD,EAAaX,KAAKa,MAAMF,GACxBC,EAAWZ,KAAKc,IAAId,KAAKa,MAAMD,GAAWf,EAAKS,QAE/C,IADA,IAAIS,EAAM,EACDC,EAAIL,EAAYK,EAAIJ,EAAUI,IACnCD,GAAOlB,EAAKmB,GAEhB,OAAOD,GAAOH,EAAWD,EAAa,IAGjCM,EAAT,SAA0BpB,EAAMc,EAAYC,GACxCD,EAAaX,KAAKa,MAAMF,GACxBC,EAAWZ,KAAKc,IAAId,KAAKa,MAAMD,GAAWf,EAAKS,QAE/C,IADA,IAAIY,EAAO,EACFF,EAAIL,EAAYK,EAAIJ,EAAUI,IACnCE,EAAOlB,KAAKO,IAAIW,EAAMrB,EAAKmB,IAE/B,OAAOE,GAGFC,EAAT,SAA8BC,EAAOC,EAAUjB,EAAGkB,GAC1CC,EAAUH,GAASI,IACnBA,EAAeD,EAAUH,IAG7B,IAAMK,EAAe,EAAIF,EAAUH,GAASpB,KAAK0B,IAAIH,EAAUH,GAASI,EAAc,KAAO,EAAKJ,EAAQG,EAAUjB,WAAcc,EAASG,EAAUjB,OAAS,GAAMiB,EAAUjB,QAC1KqB,EAAYF,EACZG,GAAW5B,KAAK6B,SAAW,IAAOJ,EAAe,GACjDK,GAAW9B,KAAK6B,SAAW,IAAOJ,EAAe,GACjDM,GAAe/B,KAAK6B,SAAW,IAAOJ,EAAe,GACzDO,EAAWC,SAAS7B,EAAIwB,EAASN,EAAkBK,EAAY,EAAKG,EAAST,EAAWU,EAAaJ,EAAY,IAI5GO,EAAT,SAA8BX,GAG1B,IAFA,IAAIY,EAAkB,EAClBC,EAAkB,EACbpB,EAAI,EAAGA,EAAIO,EAAUjB,OAAS,EAAGU,IACtCmB,GAAmBZ,EAAUP,GACzBO,EAAUP,GAAKoB,IACfA,EAAkBb,EAAUP,IAGpC,IAAIqB,EAAsBF,GAAmBZ,EAAUjB,OAAS,GAIhE,OAHI8B,EAAwC,GAAtBC,GAA4BA,EAAsBb,EAAe,KACnFc,GAA8BA,EAA8BF,GAAyC,GAAtBC,GAA8BA,EAAsBb,GAAiB,KAEjJ,cAAOe,EAAIF,EAAqBC,EAA4B,IAAKA,EAA6B,EAAG,KAAI,gBAAkB,IAAK,KAI9HE,EAAT,SAA+BjB,GAG3B,IAFA,IAAIkB,EAAmB,EACnBC,EAAmB,EACd1B,EAAIO,EAAUjB,OAAS,EAAGU,EAAIO,EAAUjB,OAAQU,IACrDyB,GAAoBlB,EAAUP,GAC1BO,EAAUP,GAAK0B,IACfA,EAAmBnB,EAAUP,IAGrC,IAAI2B,EAAuBF,GAAoBlB,EAAUjB,OAAQ,GAIjE,OAHIoC,EAA0C,IAAvBC,GAA8BA,EAAuBnB,EAAe,KACvFoB,GAA+BA,EAA+BF,GAA2C,IAAvBC,GAAgCA,EAAuBnB,GAAiB,KAEvJ,cAAOe,EAAII,EAAsBC,EAA6B,IAAKD,EAAuB,EAAG,KAAI,gBAAkB,IAAK,KAG1HJ,EAAT,SAAa5E,EAAOkF,EAAQC,EAAOC,EAAQC,GACvC,OAAOD,GAA8BpF,EAAQkF,IAAWC,EAAQD,IAA/CG,EAAQD,IAxQ7BtH,EAAOwH,QAAQ5H,GACfA,EAAS4H,QAAQ1H,EAAS2H,aAC1BrF,GAAW,GAEX,IAAMsF,EAAe9H,EAAS+H,kBAC1B7B,EAAY,IAAI8B,WAAWF,GAEzBG,EAAYtH,EAAgBc,QAAQyG,WAAW,MAC/CvB,EAAa/F,EAAca,QAAQyG,WAAW,KAAM,CAAEC,oBAAoB,IAC1EC,EAAeC,SAASC,cAAc,UACtCC,EAAaH,EAAaF,WAAW,MAC3CtH,EAAca,QAAQ+G,MAAMjF,MAAO,OACnC3C,EAAca,QAAQ+G,MAAMhF,OAAO,OACnC7C,EAAgBc,QAAQ+G,MAAMjF,MAAO,OACrC5C,EAAgBc,QAAQ+G,MAAMhF,OAAO,OACrC5C,EAAca,QAAQ+G,MAAMC,WAAa,SACzC7H,EAAca,QAAQ+G,MAAME,QAAU,IACtC9H,EAAca,QAAQ8B,MAAS/C,EAAciB,QAAQiF,YAAc,EACnE9F,EAAca,QAAQ+B,OAAShD,EAAciB,QAAQkH,aAAe,EACpEP,EAAa7E,MAAQ/C,EAAciB,QAAQiF,YAAc,EACzD0B,EAAa5E,OAAShD,EAAciB,QAAQkH,aAAe,EAC3DhI,EAAgBc,QAAQ8B,MAAS/C,EAAciB,QAAQiF,YACvD/F,EAAgBc,QAAQ+B,OAAShD,EAAciB,QAAQkH,aACvD,IAAIzF,EAAe1C,EAAciB,QAAQkH,aAAe,GAExDnI,EAAciB,QAAQmH,iBAAiB,UAAU,WAC7ChI,EAAca,QAAQ8B,MAAS/C,EAAciB,QAAQiF,YAAc,EACnE9F,EAAca,QAAQ+B,OAAShD,EAAciB,QAAQkH,aAAe,EACpEP,EAAa7E,MAAQ/C,EAAciB,QAAQiF,YAAc,EACzD0B,EAAa5E,OAAShD,EAAciB,QAAQkH,aAAe,EAC3DhI,EAAgBc,QAAQ8B,MAAS/C,EAAciB,QAAQiF,YACvD/F,EAAgBc,QAAQ+B,OAAShD,EAAciB,QAAQkH,aACvDzF,EAAe1C,EAAciB,QAAQkH,aAAe,MAExD,IAOIE,EAPA1C,EAAe,EACf2C,EAAgB,EAChBC,GAAe,EACfC,GAAc,EACdC,GAAa,EACbC,EAAiB,EACjBC,EAAqB,EAErBnG,EAAiB,EAAGoG,EAAqB,EAqHvCpE,EAAgB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAsE5HiC,EAA6B,EAiB7BM,EAA8B,GAzMlC,SAAS8B,IACL,GAA6D,MAAzDvJ,EAAamC,IAAIqH,OAAOxJ,EAAamC,IAAIgD,OAAS,GAAtD,CACAsE,sBAAsBF,GACtBrJ,EAASwJ,qBAAqBtD,GAE9B,IAAIuD,EAAe,EACfC,EAAuB,EACvBC,EAAwB,EACxBC,EAAsB,EACtBC,EAAsB,EACtBC,EAAuB,EAC3B,GAAI5D,GAAaA,EAAUjB,OAAS,EAAG,CACnC,IAAI8E,EAAWpD,EAAWqD,qBAAqB,EAAG,EAAGrD,EAAWvD,OAAOG,MAAO,GAC1E0G,EAAqB9C,EAAsBjB,GAC/C6D,EAASG,aAAa,EAAGD,GACzBF,EAASG,aAAa,GAAKrD,EAAqBX,IAChD6D,EAASG,aAAa,EAAGD,GACzBtD,EAAWxB,UAAY4E,EAGvB,IAFA,IAAI9D,EAAiBU,EAAWvD,OAAOI,OAAS,EAC5C2G,EAAa,EACRxE,EAAIO,EAAUjB,OAAS,EAAGU,GAAK,KAChCO,EAAUP,GAAK,GAAK,GADeA,IAEvCwE,IAKJ,IAHA,IAAInE,EAAaW,EAAWvD,OAAOG,MAAQ2C,EAAUjB,OAAW,EAC5DF,EAAI,EACJqF,EAAKzD,EAAWvD,OAAOG,MAClBoC,EAAI,EAAGA,EAAIO,EAAUjB,OAASkF,EAAYxE,IAC/CG,EAAqBH,EAAGK,EAAUjB,EAAGkB,GACrCH,EAAqBH,EAAGK,EAAUoE,EAAInE,GACtClB,GAAM4B,EAAWvD,OAAOG,OAAS2C,EAAUjB,OAASkF,GAAe,EACnEC,GAAOzD,EAAWvD,OAAOG,OAAS2C,EAAUjB,OAASkF,GAAe,EAExEV,EAAepE,EAAoBa,EAAW,EAAGA,EAAUjB,QAC3DyE,EAAuBrE,EAAoBa,EAAW,GAAKA,EAAUjB,OAAS,GAAIiB,EAAUjB,QAC5F0E,EAAwB/D,EAAiBM,EAAW,GAAKA,EAAUjB,OAAS,GAAIiB,EAAUjB,QAC1F2E,EAAsBvE,EAAoBa,EAAWA,EAAUjB,OAAS,GAAI,EAAIiB,EAAUjB,OAAS,IACnG4E,EAAsBxE,EAAoBa,EAAW,EAAGA,EAAUjB,OAAS,IAC3E6E,EAAuBlE,EAAiBM,EAAW,EAAGA,EAAUjB,OAAS,IA6C7E,GAzCA8D,EAAgBA,KAAkBe,EAAsC,KAAf3D,IAAwByD,EAAsBF,EAAsC,EAAfD,GAC3GG,EAAsBF,EAAsC,IAAfD,EAChET,GAAeC,GAAgBD,KAAiBc,EAAsC,GAAf3D,IAAuByD,EAAsBF,EAAsC,EAAfD,GACxHG,EAAsBF,EAAsC,EAAfD,EAChER,EAAeA,GAAeU,EAAwBC,EAAsBF,EAAuBG,EAAsB,GAC7E,EAAxBF,EAA4BC,EAAsBF,EAAuBG,GACzEd,GAAwC,EAAxBY,EAA4BC,EAAsBF,EAAuB,EAAIG,EAC7Gd,GAC4C,QAAxCnI,EAAca,QAAQ+G,MAAME,UAC5B9H,EAAca,QAAQ+G,MAAME,QAAU,OAE1CI,GAAiBA,EAAgB,GAAK,IACtCI,EAAkBW,EAAsB,IAAQD,EAA6C,EAAvBF,GAA4B,EAAG,GAErG/C,EAAW0D,OAEX1D,EAAW2D,UAAU3D,EAAWvD,OAAOG,MAAQ,EAAGoD,EAAWvD,OAAOI,OAAS,GAC7EmD,EAAW4D,OAAO5F,KAAK6F,GAAK,IAAM1B,EAAgBI,GAClDvC,EAAW2D,WAAW3D,EAAWvD,OAAOG,MAAQ,GAAIoD,EAAWvD,OAAOI,OAAS,GAE/EmD,EAAW8D,YAAc,IACzB9D,EAAW+D,UAAU/D,EAAWvD,OAAQ,EAAG,GAE3CuD,EAAWgE,WACJ3B,IACPF,EAAgB,EACY,IAAxBa,GAA+BF,EACa,MAAxC7I,EAAca,QAAQ+G,MAAME,UAC5B9H,EAAca,QAAQ+G,MAAME,QAAU,KAGE,QAAxC9H,EAAca,QAAQ+G,MAAME,UAC5B9H,EAAca,QAAQ+G,MAAME,QAAU,OAG9CG,EAAYlC,EAAWpC,aAAa,EAAG,EAAGoC,EAAWvD,OAAOG,MAAOoD,EAAWvD,OAAOI,QACrF0F,EAAkBO,EAAe,GAAKA,EAAe,GAAMP,EAAiB,GAAKY,GAAwB3D,GAAkB2D,GAAwB3D,GAAsC,GAAtB0D,EAA4BD,EAAsBF,GAAyB,EAAG,GAAKD,EAAe,EACrQ9C,EAAWrD,UAAU,EAAG,EAAGqD,EAAWvD,OAAOG,MAAOoD,EAAWvD,OAAOI,QACtEmD,EAAWiE,aAAa/B,EAAW,GAAIK,EAAgB,EAAG,EAAGvC,EAAWvD,OAAOG,MAAOoD,EAAWvD,OAAOI,OAAS,GACjHmD,EAAWiE,aAAa/B,EAAW,EAAGK,EAAgB,EAAGvC,EAAWvD,OAAOI,OAAS,EAAGmD,EAAWvD,OAAOG,MAAOoD,EAAWvD,OAAOI,OAAS,IAE3IyF,EAAY,CACZE,IAAyBJ,GAAgBI,EAAqB,GAAKW,EAAuBF,EAAsBD,GAA0BG,EAAsE,KAA9CF,EAAsBF,IAA+B,EAAG,IAAMC,EAAwBD,GAAwBX,EAAc,EAAG,KAAsB,GAAfU,GACxS,IAAIoB,EAAelE,EAAWvD,OAAOG,MAAQ4F,EACzC2B,EAAgBnE,EAAWvD,OAAOI,OAAS2F,EAC/CN,EAAYlC,EAAWpC,aAAa,EAAG,EAAGoC,EAAWvD,OAAOG,MAAOoD,EAAWvD,OAAOI,QACrF+E,EAAUjF,UAAU,EAAG,EAAGiF,EAAUnF,OAAOG,MAAOgF,EAAUnF,OAAOI,QACnE+E,EAAUmC,UAAU/D,EAAWvD,OAAQ,EAAG,GAC1CuD,EAAWrD,UAAU,EAAG,EAAGqD,EAAWvD,OAAOG,MAAOoD,EAAWvD,OAAOI,QACtEmD,EAAW+D,UAAUnC,EAAUnF,OAAQ,EAAIyH,EAAc,EAAG,EAAIC,EAAe,EAAGnE,EAAWvD,OAAOG,MAAQsH,EAAalE,EAAWvD,OAAOI,OAASsH,QAEpJ3B,EAAqB,EAGrBM,EAAe,KAEXL,EADCA,GAAsB,KAAOM,EAAsC,IAAfD,GAAuBC,EAAsC,IAAfD,EAC9E,EACbL,GAAsB,KAAOQ,EAAqC,EAAfH,GAAqBG,EAAqC,IAAfH,EACjF,EAEA,GAGzBA,EAAe,IAAMzG,IAAmBoG,IACxCpG,IAAmBoG,EAAqBpG,GAAkB,GACtD2B,KAAKoG,IAAI3B,EAAqBpG,GAAkB,MAChDA,EAAiBoG,IAIzBvG,EAAe8D,EAAYsB,EAAWjF,IA8G1CqG,MAEL,CAACrJ,EAAUI,EAAQF,IAEtB0C,qBAAU,WACF1C,GAAYJ,IACZG,EAAYC,EAAS8K,kBACrB3K,EAAUH,EAAS+K,yBAAyBnL,OAEjD,CAACI,EAAUJ,IAEd8C,qBAAU,WACN,GAAI9C,EAAc,CASdA,EAAa8I,iBAAiB,cAR9B,WACI,GAAG9I,GAAgBe,EAAYY,QAAS,CACpC,IAEIyJ,EAFcpL,EAAakC,YAChBlC,EAAaqL,SACiB,IAC7CtK,EAAYY,QAAQa,MAAQ4I,MAIpCpL,EAAamC,IAAOvB,EAAae,SAAWf,EAAae,QAAQC,MAAM,GAAK0J,IAAIC,gBAAgB3K,EAAae,QAAQC,MAAM,IAA8B,kBACzJ5B,EAAa8I,iBAAiB,cAAc,WACxCxG,IACA7B,GAAU,MAEdT,EAAa8I,iBAAiB,SAAS,WACnC5H,GAAQ,MAEZb,EAAY,IAAKmL,OAAOC,cAAgBD,OAAOE,wBAEpD,CAAC1L,IA2DA,cAAC,IAAgB,CAAC2L,SAAUlK,EAAa,SACrC,sBAAKiH,MAAO5I,EAAM4I,MAAOkD,UAAU,wBAAwBC,IAAKnL,EAAc,UAC1E,uBACA,uBACA,qBAAKkL,UAAU,wBAAuB,SAClC,oBAAIA,UAAW,cAAelD,MAAOzH,EAAK,CAAC2H,QAAS,EAAGD,WAAY,cAAc,CAACC,QAAS,GAAKD,WAAY,cAAc,SAAC,iBAE/H,qBAAKiD,UAAU,gBAAgBE,QAASpJ,EAAW,SAC9CzB,EACD,qBAAK8K,IAAK,GAAI5J,IAA8B,2BAA4ByJ,UAAW,iBAEnF,qBAAKG,IAAK,GAAI5J,IAA8B,0BAA2ByJ,UAAW,kBAGtF,uBACA,wBAAQC,IAAKhL,EAAiBmL,GAAG,YAAYF,QAASpJ,IACtD,wBAAQmJ,IAAK/K,EAAekL,GAAG,eAC/B,qBACID,IAAK,GACL5J,IAA8B,uBAAyBrC,EAAMmM,YAAc,QAC3EvD,MAAO,CAACwD,UAAW,QAASC,UAAW,OAAQzI,OAAQ,OAAQ0I,SAAU,OAAQ3I,MAAO,OAAQ4I,SAAU,WAAYC,OAAQ,KAAMC,IAAK,MAAOrI,KAAM,SAE1J,qBACI0H,UAAU,oBACVY,YAAa,WAAYrL,GAAkBC,GAAoB,IAC/DqL,aAAc,WAAWtL,GAAkBC,GAAoB,IAC/DsH,MAAOvH,EAAiB,CAACyH,QAAS,GAAKD,WAAY,iBAAiB1H,EAAK,CAAC2H,QAAS,EAAGD,WAAY,iBAAiB,CAACC,QAAS,GAAKD,WAAY,iBAAiB,SAE/J,uBACIiD,UAAW,gCACXc,KAAK,OACLb,IAAKjL,EACL+K,SAAUjK,MAGlB,sBACIkK,UAAU,oBACVY,YAAa,WAAYnL,GAAkBC,GAAoB,IAC/DmL,aAAc,WAAWpL,GAAkBC,GAAoB,IAC/DoH,MAAOrH,EAAiB,CAACuH,QAAS,GAAKD,WAAY,iBAAiB1H,EAAK,CAAC2H,QAAS,EAAGD,WAAY,iBAAiB,CAACC,QAAS,GAAKD,WAAY,iBAAiB,UAE/J,qBAAKiD,UAAU,mBAAmBzJ,IAA8B,0BAA2B4J,IAAI,KAC/F,uBACIF,IAAK7K,EACL4K,UAAU,aACVc,KAAK,QACL/G,IAAI,IACJP,IAAI,MACJ4G,GAAG,iBACHW,aAAc,IACdC,QAAS,WAAOtK,OAEpB,qBAAKsJ,UAAU,oBAAoBzJ,IAA8B,wBAAyB4J,IAAI,QAEjGvL,EACD,qBACIoL,UAAU,oBACVY,YAAa,WAAYjL,GAAkBC,GAAoB,IAC/DiL,aAAc,WAAWlL,GAAkBC,GAAoB,IAC/DkH,MAAOnH,EAAiB,CAACqH,QAAS,GAAKD,WAAY,iBAAiB1H,EAAK,CAAC2H,QAAS,EAAGD,WAAY,iBAAiB,CAACC,QAAS,GAAKD,WAAY,iBAAiB,SAE/J,uBACIkD,IAAK9K,EACL6K,UAAU,YACVc,KAAK,QACL/G,IAAI,IACJP,IAAI,MACJuH,aAAc,EACdX,GAAG,YACHa,UAAWrM,EACXoM,QAAS,YAhG7B,WACI,GAAG5M,GAAgBe,EAAYY,QAAS,CACpC,IACIO,EADgBnB,EAAYY,QAAQa,MACL,IAAOxC,EAAaqL,SACvDrL,EAAakC,YAAcA,OAE3BR,IA0F4BoL,QAIxB,mCC3XDC,EAzEH,kDACV,aAAe,IAAD,EAIV,OAJU,qBACZ,gBACKC,MAAQ,CACXf,YAAapH,KAAKC,MAAsB,EAAhBD,KAAK6B,WAC7B,EAiEH,OAhEA,mCAED,WACE,OAAKuG,KAAKnN,MAAM4E,KAMd,yBAAQsH,GAAG,OAAM,UACf,qBAAKJ,UAAU,wBAAuB,SACpC,cAAC,EAAe,CAAClD,MAAO,CAACjF,MAAO,OAAQ4I,SAAU,WAAYC,OAAQ,IAAKC,IAAK,MAAOrI,KAAM,OAAQ+H,YAAagB,KAAKD,MAAMf,gBAG/H,qBAAKD,GAAG,WAAU,SAUhB,qBAAIA,GAAG,MAAMJ,UAAU,MAAK,UAC1B,oBAAIA,UAAU,UAAS,SACrB,mBAAGA,UAAU,eAAesB,KAAK,QAAO,SAAC,WAK3C,6BACE,mBAAGtB,UAAU,eAAesB,KAAK,SAAQ,SAAC,YAK5C,6BACE,mBAAGtB,UAAU,eAAesB,KAAK,UAAS,SAAC,aAK7C,6BACE,mBAAGtB,UAAU,eAAesB,KAAK,aAAY,SAAC,YAKhD,6BACE,mBAAGtB,UAAU,eAAesB,KAAK,WAAU,SAAC,mBAOlD,mBAAGtB,UAAU,aAAY,SACvB,mBAAGA,UAAU,eAAesB,KAAK,SAAQ,SACvC,mBAAGtB,UAAU,4BAxDQ,SA6D9B,EAtES,CAASuB,a,8BC0CNC,EAzCA,SAAH,GAAgC,IAA1BC,EAAQ,EAARA,SAAavN,EAAK,4BAChC,EAAkCC,oBAAS,GAAM,mBAA1CuN,EAAS,KAAE7L,EAAY,KACxB8L,EAAU5M,iBAAO,MAIjB6M,EAAe,CACnB7E,WAAW,WAAD,OAHK,IAGgB,kBAC7BC,QAAS,GAGP6E,EAAmB,CACvBC,SAAU,CAAE9E,QAAS,GACrB+E,QAAU,CAAE/E,QAAS,GACrBgF,QAAU,CAAEhF,QAAS,GACrBiF,OAAS,CAAEjF,QAAS,IAGtB,OACI,cAAC,IAAiB,CAACkF,QAAS,kBAAMrM,GAAa,IAAM,SACjD,8BACI,cAACsM,EAAA,EAAU,yBACPR,QAASA,EACTS,GAAIV,EACJW,QApBC,IAqBDC,WAAW,QACPpO,GAAK,aAER,SAAAkN,GAAK,OACF,qBAAKnB,IAAK0B,EAAS7E,MAAK,2BACjB8E,GACAC,EAAiBT,IAAQ,SAC3BK,aCIdc,EArCH,kHAkCT,OAlCS,mCACV,WACE,IAAKlB,KAAKnN,MAAM4E,KAAM,OAAO,KAE7B,IAAM0J,EAAWnB,KAAKnN,MAAM4E,KAAK2J,OAAOjH,KAAI,SAAUkH,GACpD,OACE,6BACE,mBAAGpB,KAAMoB,EAAQC,IAAKC,OAAO,SAASC,IAAI,sBAAqB,SAC7D,mBAAG7C,UAAW0C,EAAQ1C,eAFjB0C,EAAQxM,SAQrB,OACE,iCACE,sBAAK8J,UAAU,MAAK,UAClB,cAAC,EAAM,CAAC8C,QAAM,WACZ,sBAAK9C,UAAU,iBAAgB,UAC7B,oBAAIA,UAAU,eAAc,SAAEwC,IAC9B,oBAAIxC,UAAU,YAAW,SACvB,6BAAI,6BAKV,qBAAKI,GAAG,SAAQ,SACd,mBAAGJ,UAAU,eAAe+C,MAAM,cAAczB,KAAK,QAAO,SAC1D,mBAAGtB,UAAU,8BAMxB,EAlCS,CAASuB,aCqDNyB,EArDJ,kHAkDR,OAlDQ,mCACT,WACE,IAAK3B,KAAKnN,MAAM4E,KAAM,OAAO,KAE7B,IAAM5C,EAAOmL,KAAKnN,MAAM4E,KAAK5C,KACvB+M,EAAa,UAAY5B,KAAKnN,MAAM4E,KAAKoK,MACzCC,EAAM9B,KAAKnN,MAAM4E,KAAKqK,IACtBC,EAAW/B,KAAKnN,MAAM4E,KAAKsK,SAC3BC,EAAQhC,KAAKnN,MAAM4E,KAAKuK,MACxBC,EAAiBjC,KAAKnN,MAAM4E,KAAKyK,eAEvC,OACE,yBAASnD,GAAG,QAAO,SACjB,cAAC,EAAM,UACL,sBAAKJ,UAAU,MAAK,UAClB,qBAAKA,UAAU,gBAAe,SAC5B,qBACEA,UAAU,cACVzJ,IAAK0M,EACL9C,IAAI,iBAGR,sBAAKH,UAAU,wBAAuB,UACpC,6BAAI,aAEJ,4BAAImD,IACJ,sBAAKnD,UAAU,MAAK,UAClB,sBAAKA,UAAU,0BAAyB,UACtC,6BAAI,oBACJ,oBAAGA,UAAU,UAAS,UACpB,+BAAO9J,IACP,uBACA,+BAAOmN,IACP,uBACA,mBAAG/B,KAAM8B,EAAUR,OAAO,SAASC,IAAI,sBAAqB,SAAC,gCAGjE,qBAAK7C,UAAU,mBAAkB,SAC/B,4BACE,oBAAGsB,KAAMgC,EAAgBtD,UAAU,SAAQ,UACzC,mBAAGA,UAAU,mBAAqB,0CAUrD,EAlDQ,CAASuB,aCgELiC,EA/DC,SAAH,GAAoD,IAA9C/B,EAAQ,EAARA,SAAS,EAAD,EAAEgC,iBAAS,MAAG,OAAM,EAAKvP,EAAK,wCACrD,EAAkCC,oBAAS,GAAM,mBAA1CuN,EAAS,KAAE7L,EAAY,KACxB8L,EAAU5M,iBAAO,MAIjB6M,EAAe,CACnB7E,WAAW,WAAD,OAHK,IAGgB,kBAC7BC,QAAS,GAGP6E,EAAmB,CACrBC,SACI,CACI9E,QAAS,EACTyD,SAAU,WACVnI,KAAM,EACNyE,WAAY,eAEpBgF,QACI,CACI/E,QAAS,EACTyD,SAAU,WACVnI,KAAM,EACNyE,WAAY,eAEpBiF,QACI,CACIhF,QAAS,EACTyD,SAAU,WACVnI,KAAM,SAEd2J,OACI,CACIjF,QAAS,EACTyD,SAAU,WACVnI,KAAM,UAIlB,OACI,cAAC,IAAiB,CAAC4J,QAAS,kBAAMrM,GAAa,IAAM,SACjD,8BACI,cAACsM,EAAA,EAAU,yBACPR,QAASA,EACTS,GAAIV,EACJW,QA1CC,IA2CDC,WAAU,gBAAWmB,IACjBvP,GAAK,aAER,SAAAkN,GAAK,OACF,qBAAKnB,IAAK0B,EAAS7E,MAAK,2BACjB8E,GACAC,EAAiBT,IAAQ,SAC3BK,aCkDdiC,EAzGH,kHAsGT,OAtGS,2CACV,WAGE,IAFA,IACIC,EAAQ,IACH1J,EAAI,EAAGA,EAAI,EAAGA,IACrB0J,GAHY,mBAGK1K,KAAKC,MAAsB,GAAhBD,KAAK6B,WAEnC,OAAO6I,IACR,oBAED,WAAU,IAAD,OACP,IAAKtC,KAAKnN,MAAM4E,KAAM,OAAO,KAE7B,IAAM8K,EAAevC,KAAKnN,MAAM4E,KAAK8K,aAC/BC,EAAYxC,KAAKnN,MAAM4E,KAAK+K,UAAUrI,KAAI,SAAUqI,GACxD,OACE,gCACE,6BAAKA,EAAUC,SACf,oBAAG9D,UAAU,OAAM,UAChB6D,EAAUE,OAAO,IAAC,+BAAM,WACzB,oBAAI/D,UAAU,OAAM,SAAE6D,EAAUG,eAElC,4BAAIH,EAAUI,gBANNJ,EAAUC,WAWlBI,EAAO7C,KAAKnN,MAAM4E,KAAKoL,KAAK1I,KAAI,SAAU0I,GAC9C,OACE,gCACE,6BAAKA,EAAKC,UACV,oBAAGnE,UAAU,OAAM,UAChBkE,EAAKnB,MACN,+BAAM,WAAa,IAAC,oBAAI/C,UAAU,OAAM,SAAEkE,EAAKE,WAEjD,4BAAIF,EAAKD,gBANDC,EAAKC,YAWbE,EAAShD,KAAKnN,MAAM4E,KAAKuL,OAAO7I,KAAI,SAAC6I,GACzC,IAAMC,EAAkB,EAAKC,iBACvBvE,EAAY,cAAgBqE,EAAOnO,KAAKsO,cACxC3M,EAAQwM,EAAOI,MAErB,OACE,+BACE,sBAAM3H,MAAO,CAAEjF,QAAOyM,mBAAmBtE,UAAWA,IACpD,6BAAKqE,EAAOnO,SAFLmO,EAAOnO,SAOpB,OACE,0BAASkK,GAAG,SAAQ,UAClB,cAAC,EAAO,UACN,sBAAKJ,UAAU,gBAAe,UAC5B,qBAAKA,UAAU,2BAA0B,SACvC,6BACE,+BAAM,kBAIV,qBAAKA,UAAU,wBAAuB,SACpC,qBAAKA,UAAU,WAAU,SACvB,qBAAKA,UAAU,iBAAgB,SAAE6D,aAMzC,cAAC,EAAO,UACN,sBAAK7D,UAAU,WAAU,UACvB,qBAAKA,UAAU,2BAA0B,SACvC,6BACE,+BAAM,aAIV,qBAAKA,UAAU,wBAAuB,SAAEkE,SAI5C,cAAC,EAAO,UACN,sBAAKlE,UAAU,YAAW,UACxB,qBAAKA,UAAU,2BAA0B,SACvC,6BACE,+BAAM,eAIV,sBAAKA,UAAU,wBAAuB,UACpC,4BAAI4D,IAEJ,qBAAK5D,UAAU,OAAM,SACnB,oBAAIA,UAAU,SAAQ,SAAEqE,qBAOrC,EAtGS,CAAS9C,aCsGNmD,EArGF,kHAkGV,OAlGU,mCACX,WACE,IAAKrD,KAAKnN,MAAM4E,KAAM,OAAO,KAE7B,IAAM6L,EAAUtD,KAAKnN,MAAM4E,KAAK8L,eAEhC,OACE,0BAASxE,GAAG,UAAS,UACnB,cAAC,EAAM,UACL,sBAAKJ,UAAU,mBAAkB,UAC/B,qBAAKA,UAAU,yBAAwB,SACrC,6BACE,+BAAM,sBAIV,qBAAKA,UAAU,cAAa,SAC1B,mBAAGA,UAAU,OAAM,SAAE2E,WAK3B,qBAAK3E,UAAU,MAAK,SAClB,cAAC,EAAO,UACN,sBAAKA,UAAU,iBAAgB,UAC7B,sBAAMI,GAAG,cAAclK,KAAK,cAAa,SACvC,qCA6BE,gCACE,uBAAO2O,QAAQ,iBAAgB,SAAC,YAChC,uBACE/D,KAAK,OACLC,aAAa,GACb+D,KAAK,KACL1E,GAAG,iBACHlK,KAAK,iBACL6J,SAAUsB,KAAK0D,kBAInB,gCACE,wBAAOF,QAAQ,iBAAgB,UAAC,WACtB,sBAAM7E,UAAU,WAAU,SAAC,SAErC,0BACEgF,KAAK,KACLC,KAAK,KACL7E,GAAG,iBACHlK,KAAK,sBAIT,gCACE,wBAAQ8J,UAAU,SAAQ,SAAC,WAC3B,sBAAMI,GAAG,eAAc,SACrB,qBAAKD,IAAI,GAAG5J,IAAI,gCAMxB,qBAAK6J,GAAG,kBAAiB,SAAC,sGAC1B,sBAAKA,GAAG,kBAAiB,UACvB,mBAAGJ,UAAU,gBAAkB,oCAC/B,wCAOb,EAlGU,CAASuB,aCDlBnB,EAAK,EA0CM8E,EAzCA,kHAsCZ,OAtCY,mCACb,WACE,IAAK7D,KAAKnN,MAAM4E,KAAM,OAAO,KAE7B,IAAMqM,EAAW9D,KAAKnN,MAAM4E,KAAKqM,SAAS3J,KAAI,SAAU4J,GACtD,IAAIC,EAAe,oBAAsBD,EAAQlC,MAEjD,OACE,wBAAmBlD,UAAU,yBAAwB,SACnD,qBAAKA,UAAU,YAAW,SACxB,oBAAGsB,KAAM8D,EAAQE,KAAM1C,OAAO,SAASC,IAAI,sBAAqB,UAC9D,qBAAK7C,UAAW,qBAAsBG,IAAKiF,EAAQrC,MAAOxM,IAAK8O,IAC/D,oBAAIvI,MAAO,CAAEyI,UAAW,UAAW,SAAEH,EAAQrC,QAC7C,qBAAKjG,MAAO,CAAEyI,UAAW,UAAW,SAAEH,EAAQnB,oBALvC7D,QAYjB,OACE,yBAASA,GAAG,YAAW,SACrB,cAAC,EAAM,UACL,qBAAKJ,UAAU,MAAK,SAClB,sBAAKA,UAAU,2BAA0B,UACvC,6BAAI,gDAEJ,qBACEI,GAAG,oBACHJ,UAAU,mCAAkC,SAE3CmF,iBAOd,EAtCY,CAAS5D,aCmDTiE,EA5CN,kDACP,WAAYtR,GAAQ,IAAD,EAOjB,OAPiB,qBACjB,cAAMA,IACDkN,MAAQ,CACXqE,WAAY,IAId,EAiCD,OAhCA,0CAED,WACEC,IAAEC,KAAK,CACLhD,IAAK,oBACLiD,SAAU,OACVC,OAAO,EACPC,QAAS,SAAShN,GAChBuI,KAAK0E,SAAS,CAAEN,WAAY3M,KAC5BkN,KAAK3E,MACP4E,MAAO,SAASC,EAAKC,EAAQC,GAC3BC,QAAQC,IAAIF,GACZhQ,MAAMgQ,QAGX,+BAED,WACE/E,KAAKkF,kBACN,oBAED,WACE,OACE,sBAAKvG,UAAU,MAAK,UAClB,cAAC,EAAM,CAAClH,KAAMuI,KAAKD,MAAMqE,WAAWe,OACpC,cAAC,EAAK,CAAC1N,KAAMuI,KAAKD,MAAMqE,WAAWe,OACnC,cAAC,EAAM,CAAC1N,KAAMuI,KAAKD,MAAMqE,WAAWzO,SACpC,cAAC,EAAS,CAAC8B,KAAMuI,KAAKD,MAAMqE,WAAWgB,YACvC,cAAC,EAAO,CAAC3N,KAAMuI,KAAKD,MAAMqE,WAAWe,OACrC,cAAC,EAAM,CAAC1N,KAAMuI,KAAKD,MAAMqE,WAAWe,cAGzC,EAzCM,CAASjF,aCCHmF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,EAAG,IACJzK,SAAS0K,eAAe,SAM1BX,M","file":"static/js/main.b9c5b1ef.chunk.js","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport VisibilitySensor from 'react-visibility-sensor';\n\nfunction AudioVisualizer(props) {\n    const [audioElement, setAudioElement] = useState(null);\n    const [analyser, setAnalyser] = useState(null);\n    const [audioCtx, setAudioCtx] = useState(null);\n    const [source, setSource] = useState(null);\n    const [loaded, setLoaded] = useState(false);\n    const canvasAreaRef = useRef(null);\n    const fileInputRef = useRef(null);\n    const filterCanvasRef = useRef(null);\n    const backgroundRef = useRef(null);\n    const scrubBarRef = useRef(null);\n    const volumeBarRef = useRef(null);\n    const [play, setPlay] = useState(false);\n    const [mouseOverBottom1, setMouseOverBottom1] = useState(false);\n    const [mouseOverBottom2, setMouseOverBottom2] = useState(false);\n    const [mouseOverBottom3, setMouseOverBottom3] = useState(false);\n    const [isVisible, setIsVisible] = useState(true);\n\n    useEffect(() => {\n        if (analyser && source && audioCtx) {\n            source.connect(analyser);\n            analyser.connect(audioCtx.destination);\n            togglePlay(true);\n\n            const bufferLength = analyser.frequencyBinCount;\n            let dataArray = new Uint8Array(bufferLength);\n\n            const filterCtx = filterCanvasRef.current.getContext(\"2d\");\n            const baseRender = backgroundRef.current.getContext(\"2d\", { willReadFrequently: true });\n            const hiddenCanvas = document.createElement(\"CANVAS\")\n            const hiddenCtx =  hiddenCanvas.getContext(\"2d\");\n            backgroundRef.current.style.width ='100%';\n            backgroundRef.current.style.height='100%';\n            filterCanvasRef.current.style.width ='100%';\n            filterCanvasRef.current.style.height='100%';\n            backgroundRef.current.style.transition = \"all 2s\";\n            backgroundRef.current.style.opacity = \"0\";\n            backgroundRef.current.width  = canvasAreaRef.current.offsetWidth / 4;\n            backgroundRef.current.height = canvasAreaRef.current.offsetHeight / 4;\n            hiddenCanvas.width = canvasAreaRef.current.offsetWidth / 4;\n            hiddenCanvas.height = canvasAreaRef.current.offsetHeight / 4;\n            filterCanvasRef.current.width  = canvasAreaRef.current.offsetWidth;\n            filterCanvasRef.current.height = canvasAreaRef.current.offsetHeight;\n            var baseFontSize = canvasAreaRef.current.offsetHeight / 40;\n\n            canvasAreaRef.current.addEventListener(\"resize\", () => {\n                backgroundRef.current.width  = canvasAreaRef.current.offsetWidth / 4;\n                backgroundRef.current.height = canvasAreaRef.current.offsetHeight / 4;\n                hiddenCanvas.width = canvasAreaRef.current.offsetWidth / 4;\n                hiddenCanvas.height = canvasAreaRef.current.offsetHeight / 4;\n                filterCanvasRef.current.width  = canvasAreaRef.current.offsetWidth;\n                filterCanvasRef.current.height = canvasAreaRef.current.offsetHeight;\n                baseFontSize = canvasAreaRef.current.offsetHeight / 40;\n            });\n            let ultimatePeak = 1;\n            let rotationAngle = 0;\n            let rotateSmudge = false;\n            let splitSmudge = true;\n            let growSmudge = false;\n            let smudgeVelocity = 0;\n            let smudgeGrowVelocity = 0;\n            var imageData;\n            let fontMultiplier = 1, fontMultiplierGoal = 1;\n\n            // Draw the frequency spectrum visualization\n            function drawVisualization() {\n                if (audioElement.src.charAt(audioElement.src.length - 1) === \"!\") return;\n                requestAnimationFrame(drawVisualization);  \n                analyser.getByteFrequencyData(dataArray);\n                \n                let avgAmplitude = 0;\n                let highFreqAvgAmplitude = 0;\n                let highFreqPeakAmplitude = 0;\n                let midFreqAvgAmplitude = 0;\n                let lowFreqAvgAmplitude = 0;\n                let lowFreqPeakAmplitude = 0;\n                if (dataArray && dataArray.length > 0) {\n                    let gradient = baseRender.createLinearGradient(0, 0, baseRender.canvas.width, 0);\n                    let highFrequencyColor = getHighFrequencyColor(dataArray);\n                    gradient.addColorStop(0, highFrequencyColor);\n                    gradient.addColorStop(0.5, getLowFrequencyColor(dataArray));\n                    gradient.addColorStop(1, highFrequencyColor);\n                    baseRender.fillStyle = gradient;\n                    let verticalCenter = baseRender.canvas.height / 2;\n                    let zeroAdjust = 0;\n                    for (let i = dataArray.length - 1; i >= 0; i--) {\n                        if (dataArray[i] - 20 > 0) break;\n                        zeroAdjust++;\n                    }\n                    let barWidth = ((baseRender.canvas.width / dataArray.length)) / 2;\n                    let x = 0;\n                    let x2 = baseRender.canvas.width;\n                    for (let i = 0; i < dataArray.length - zeroAdjust; i++) {\n                        drawVisualizationBar(i, barWidth, x, verticalCenter);\n                        drawVisualizationBar(i, barWidth, x2, verticalCenter);\n                        x += (baseRender.canvas.width / (dataArray.length - zeroAdjust)) / 2;\n                        x2 -= (baseRender.canvas.width / (dataArray.length - zeroAdjust)) / 2;\n                    }\n                    avgAmplitude = getAverageAmplitude(dataArray, 0, dataArray.length);\n                    highFreqAvgAmplitude = getAverageAmplitude(dataArray, 12 * dataArray.length / 16, dataArray.length);\n                    highFreqPeakAmplitude = getPeakAmplitude(dataArray, 12 * dataArray.length / 16, dataArray.length);\n                    midFreqAvgAmplitude = getAverageAmplitude(dataArray, dataArray.length / 16, 3 * dataArray.length / 16);\n                    lowFreqAvgAmplitude = getAverageAmplitude(dataArray, 0, dataArray.length / 16);\n                    lowFreqPeakAmplitude = getPeakAmplitude(dataArray, 0, dataArray.length / 16);\n                }\n\n                //smudge effect\n                rotateSmudge = (rotateSmudge && !(lowFreqPeakAmplitude > ultimatePeak * 1.01) && midFreqAvgAmplitude + highFreqAvgAmplitude > avgAmplitude * 2)\n                                || midFreqAvgAmplitude + highFreqAvgAmplitude > avgAmplitude * 3.2;\n                splitSmudge = !growSmudge || ((splitSmudge && !(lowFreqPeakAmplitude < ultimatePeak * 0.8) && midFreqAvgAmplitude + highFreqAvgAmplitude < avgAmplitude * 3)\n                                || midFreqAvgAmplitude + highFreqAvgAmplitude < avgAmplitude * 2);\n                growSmudge = ((growSmudge) && highFreqPeakAmplitude + midFreqAvgAmplitude > highFreqAvgAmplitude + lowFreqAvgAmplitude / 2)\n                                || (highFreqPeakAmplitude * 2 + midFreqAvgAmplitude > highFreqAvgAmplitude + lowFreqAvgAmplitude)\n                                || (rotateSmudge && highFreqPeakAmplitude * 2 + midFreqAvgAmplitude > highFreqAvgAmplitude / 2 + lowFreqAvgAmplitude);\n                if (rotateSmudge) {\n                    if (backgroundRef.current.style.opacity !== \"0.4\") {\n                        backgroundRef.current.style.opacity = \"0.4\";\n                    }\n                    rotationAngle = (rotationAngle + 1) % 360;\n                    smudgeVelocity = (lowFreqAvgAmplitude / 16) * ((midFreqAvgAmplitude < highFreqAvgAmplitude * 5)? -1: 1);\n                    // Save the current canvas state\n                    baseRender.save();\n                    // Rotate the canvas\n                    baseRender.translate(baseRender.canvas.width / 2, baseRender.canvas.height / 2);\n                    baseRender.rotate(Math.PI / 180 * rotationAngle * smudgeVelocity);\n                    baseRender.translate(-baseRender.canvas.width / 2, -baseRender.canvas.height / 2);\n                    // Draw the smudged image on the canvas\n                    baseRender.globalAlpha = 0.02;\n                    baseRender.drawImage(baseRender.canvas, 0, 0);\n                    // Restore the saved state\n                    baseRender.restore();\n                } else if (splitSmudge) {\n                    rotationAngle = 0;\n                    if (highFreqPeakAmplitude * 1.8 <= avgAmplitude) {\n                        if (backgroundRef.current.style.opacity !== \"0\") {\n                            backgroundRef.current.style.opacity = \"0\";\n                        }\n                    } else {\n                        if (backgroundRef.current.style.opacity !== \"0.4\") {\n                            backgroundRef.current.style.opacity = \"0.4\";\n                        }\n                    }\n                    imageData = baseRender.getImageData(0, 0, baseRender.canvas.width, baseRender.canvas.height);\n                    smudgeVelocity = (avgAmplitude < 10)? avgAmplitude / 2: (((smudgeVelocity < 0 && lowFreqPeakAmplitude >= ultimatePeak) || (lowFreqPeakAmplitude >= ultimatePeak && lowFreqAvgAmplitude * 0.5 > midFreqAvgAmplitude + highFreqAvgAmplitude))? -1: 1) * avgAmplitude / 8;\n                    baseRender.clearRect(0, 0, baseRender.canvas.width, baseRender.canvas.height);\n                    baseRender.putImageData(imageData, 0, -smudgeVelocity, 0, 0, baseRender.canvas.width, baseRender.canvas.height / 2);\n                    baseRender.putImageData(imageData, 0, smudgeVelocity, 0, baseRender.canvas.height / 2, baseRender.canvas.width, baseRender.canvas.height / 2);\n                }\n                if (growSmudge) {\n                    smudgeGrowVelocity = (((!rotateSmudge && smudgeGrowVelocity < 0 && lowFreqPeakAmplitude > midFreqAvgAmplitude + highFreqPeakAmplitude) || lowFreqPeakAmplitude > (midFreqAvgAmplitude + highFreqAvgAmplitude) * 2.8)? -1: 1) * (highFreqPeakAmplitude - highFreqAvgAmplitude * (rotateSmudge? 4: 1)) / (avgAmplitude * 20);\n                    let widthOffset = (baseRender.canvas.width * smudgeGrowVelocity);\n                    let heightOffset = (baseRender.canvas.height * smudgeGrowVelocity);\n                    imageData = baseRender.getImageData(0, 0, baseRender.canvas.width, baseRender.canvas.height);\n                    hiddenCtx.clearRect(0, 0, hiddenCtx.canvas.width, hiddenCtx.canvas.height);\n                    hiddenCtx.drawImage(baseRender.canvas, 0, 0);\n                    baseRender.clearRect(0, 0, baseRender.canvas.width, baseRender.canvas.height);\n                    baseRender.drawImage(hiddenCtx.canvas, 0 - widthOffset / 2, 0 - heightOffset / 2, baseRender.canvas.width + widthOffset, baseRender.canvas.height + heightOffset);\n                } else {\n                    smudgeGrowVelocity = 0;\n                }\n\n                if (avgAmplitude > 40) {\n                    if ((fontMultiplierGoal >= 1.5 && highFreqAvgAmplitude > avgAmplitude * 2.5) || highFreqAvgAmplitude > avgAmplitude * 3.8) {\n                        fontMultiplierGoal = 3;\n                    } else if ((fontMultiplierGoal >= 1.2 && midFreqAvgAmplitude > avgAmplitude * 2) || midFreqAvgAmplitude > avgAmplitude * 3.2) {\n                        fontMultiplierGoal = 2;\n                    } else {\n                        fontMultiplierGoal = 1;\n                    }\n                }\n                if (avgAmplitude > 40 && fontMultiplier !== fontMultiplierGoal) {\n                    fontMultiplier += (fontMultiplierGoal - fontMultiplier) / 16.0;\n                    if (Math.abs(fontMultiplierGoal - fontMultiplier) < 0.01) {\n                        fontMultiplier = fontMultiplierGoal;\n                    }\n                }\n\n                convertToASCII(baseRender, filterCtx, fontMultiplier);\n            }\n            const asciiArtChars = [' ', \"'\", '^', '*', ';', 'D', 'a', 'v', 'i', 'd', 'M', 'a', 's', 'h', '$', '%', '#', '@', '?', '0', '1', '!'];\n            function convertToASCII(fromContext, toContext, fontMultiplier) {\n                let fontSize = baseFontSize * fontMultiplier;\n                var fromCanvas = fromContext.canvas;\n                var toCanvas = toContext.canvas;\n                toContext.clearRect(0, 0, toContext.canvas.width, toContext.canvas.height);\n                // Set the font for the ASCII art\n                toContext.font = fontSize + 'px monospace';\n                \n                // Get the image data from the original canvas\n                var imageData = fromContext.getImageData(0, 0, fromContext.canvas.width, fromContext.canvas.height);\n                var pixels = imageData.data;\n                var char, r, g, b, alpha, curr, left, right, up, down, fromX, fromY;\n                // Convert the image to black and white\n                var skip = fontSize, fromSkipX = Math.floor(fontSize / (toCanvas.width / fromCanvas.width)), fromSkipY = Math.floor(fontSize / (toCanvas.height / fromCanvas.height));\n                for (let y = 0; y < toCanvas.height; y += skip) {\n                    fromY = Math.floor(y / (toCanvas.height / fromCanvas.height));\n                    for (let x = ((y / skip) % 2 === 0)? 0: fontSize / 2; x < toCanvas.width; x += skip) {\n                        fromX = Math.floor(x / (toCanvas.width / fromCanvas.width));\n                        curr = (fromY * fromCanvas.width + fromX) * 4;\n                        left = (fromY * fromCanvas.width + fromX - (fromSkipX / 2)) * 4;\n                        right = (fromY * fromCanvas.width + fromX + (fromSkipX / 2)) * 4;\n                        up = ((fromY - (fromSkipY / 2)) * fromCanvas.width + fromX) * 4;\n                        down = ((fromY + (fromSkipY / 2)) * fromCanvas.width + fromX) * 4;\n                        alpha = ((pixels[curr + 3]?pixels[curr + 3]:0) + (pixels[left + 3]?pixels[left + 3]:0) + (pixels[right + 3]?pixels[right + 3]:0) + (pixels[up + 3]?pixels[up + 3]:0) + (pixels[down + 3]?pixels[down + 3]:0)) / 5;\n                        if (alpha <= 0) continue;\n                        r = ((pixels[curr]?pixels[curr]:0) + (pixels[left]?pixels[left]:0) + (pixels[right]?pixels[right]:0) + (pixels[up]?pixels[up]:0) + (pixels[down]?pixels[down]:0)) / 5;\n                        g = ((pixels[curr + 1]?pixels[curr + 1]:0) + (pixels[left + 1]?pixels[left + 1]:0) + (pixels[right + 1]?pixels[right + 1]:0) + (pixels[up + 1]?pixels[up + 1]:0) + (pixels[down + 1]?pixels[down + 1]:0)) / 5;\n                        b = ((pixels[curr + 2]?pixels[curr + 2]:0) + (pixels[left + 2]?pixels[left + 2]:0) + (pixels[right + 2]?pixels[right + 2]:0) + (pixels[up + 2]?pixels[up + 2]:0) + (pixels[down + 2]?pixels[down + 2]:0)) / 5;\n                        char = asciiArtChars[Math.floor(asciiArtChars.length * (Math.max(alpha, 1) / 256))];\n                        // Fill the ASCII character with the original color\n                        toContext.fillStyle = 'rgba(' + r + ',' + g + ',' + b + ',' + (alpha / 10.0) + ')';\n                        toContext.fillText(char, x, y + (fontSize / 2));\n                    }\n                }\n            }\n        \n            function getAverageAmplitude(data, startIndex, endIndex) {\n                startIndex = Math.trunc(startIndex);\n                endIndex = Math.min(Math.trunc(endIndex), data.length);\n                let sum = 0;\n                for (let i = startIndex; i < endIndex; i++) {\n                    sum += data[i];\n                }\n                return sum / (endIndex - startIndex - 1);\n            }\n        \n            function getPeakAmplitude(data, startIndex, endIndex) {\n                startIndex = Math.trunc(startIndex);\n                endIndex = Math.min(Math.trunc(endIndex), data.length);\n                let peak = 0;\n                for (let i = startIndex; i < endIndex; i++) {\n                    peak = Math.max(peak, data[i]);\n                }\n                return peak;\n            }\n        \n            function drawVisualizationBar(index, barWidth, x, verticalCenter) {\n                if (dataArray[index] > ultimatePeak) {\n                    ultimatePeak = dataArray[index];\n                }\n                //take the square of the data like this will amplify peaks\n                const adjustedData = 8 * dataArray[index] * Math.pow(dataArray[index] / ultimatePeak, 1.5 * (1 - (index / dataArray.length))) * ((index + (dataArray.length / 2)) / dataArray.length);\n                let barHeight = adjustedData;\n                let offsetX = (Math.random() - 0.5) * adjustedData / 32;\n                let offsetY = (Math.random() - 0.5) * adjustedData / 32;\n                let offsetWidth = (Math.random() - 0.5) * adjustedData / 32;\n                baseRender.fillRect(x + offsetX, verticalCenter - (barHeight / 4) + offsetY, barWidth + offsetWidth, barHeight / 2);\n            }\n        \n            let lowFreqShiftingColorNumber = 0;\n            function getLowFrequencyColor(dataArray) {\n                let lowFrequencySum = 0;\n                let lowFrequencyMax = 0;\n                for (let i = 0; i < dataArray.length / 2; i++) {\n                    lowFrequencySum += dataArray[i];\n                    if (dataArray[i] > lowFrequencyMax) {\n                        lowFrequencyMax = dataArray[i];\n                    }\n                }\n                let lowFrequencyAverage = lowFrequencySum / (dataArray.length / 2);\n                if (lowFrequencyMax > lowFrequencyAverage * 10 || lowFrequencyAverage > ultimatePeak / 2) {\n                    lowFreqShiftingColorNumber = (lowFreqShiftingColorNumber + (lowFrequencyMax / (lowFrequencyAverage * 20)) + (lowFrequencyAverage / ultimatePeak)) % 255;\n                }\n                return `hsl(${map(lowFrequencyAverage, lowFreqShiftingColorNumber, 255, lowFreqShiftingColorNumber / 4, 360)}, 100%, 50%,` + (0.01) + `)`;\n            }\n        \n            let highFreqShiftingColorNumber = 0;\n            function getHighFrequencyColor(dataArray) {\n                let highFrequencySum = 0;\n                let highFrequencyMax = 0;\n                for (let i = dataArray.length / 2; i < dataArray.length; i++) {\n                    highFrequencySum += dataArray[i];\n                    if (dataArray[i] > highFrequencyMax) {\n                        highFrequencyMax = dataArray[i];\n                    }\n                }\n                let highFrequencyAverage = highFrequencySum / (dataArray.length/ 2);\n                if (highFrequencyMax > highFrequencyAverage * 200 || highFrequencyAverage > ultimatePeak / 2) {\n                    highFreqShiftingColorNumber = (highFreqShiftingColorNumber + (highFrequencyMax / (highFrequencyAverage * 200)) + (highFrequencyAverage / ultimatePeak)) % 255;\n                }\n                return `hsl(${map(highFrequencyAverage, highFreqShiftingColorNumber, 255, highFrequencyAverage / 4, 360)}, 100%, 50%,` + (0.01) + `)`;\n            }\n        \n            function map(value, start1, stop1, start2, stop2) {\n                return start2 + (stop2 - start2) * ((value - start1) / (stop1 - start1));\n            }\n\n            drawVisualization();\n        }\n    }, [analyser, source, audioCtx]);\n\n    useEffect(() => {\n        if (audioCtx && audioElement) {\n            setAnalyser(audioCtx.createAnalyser());\n            setSource(audioCtx.createMediaElementSource(audioElement));\n        }\n    }, [audioCtx, audioElement]);\n\n    useEffect(() => {\n        if (audioElement) {\n            function updateScrubBar() {\n                if(audioElement && scrubBarRef.current) {\n                    let currentTime = audioElement.currentTime;\n                    let duration = audioElement.duration;\n                    let scrubBarValue = (currentTime/duration) * 100;\n                    scrubBarRef.current.value = scrubBarValue;\n                }\n            }\n            audioElement.addEventListener(\"timeupdate\", updateScrubBar);\n            audioElement.src = (fileInputRef.current && fileInputRef.current.files[0])? URL.createObjectURL(fileInputRef.current.files[0]): process.env.PUBLIC_URL + '/music/song.mp3';\n            audioElement.addEventListener(\"loadeddata\", () => {\n                updateVolume();\n                setLoaded(true);\n            });\n            audioElement.addEventListener(\"ended\", () => {\n                setPlay(false);\n            });\n            setAudioCtx(new (window.AudioContext || window.webkitAudioContext)());\n        }\n    }, [audioElement]);\n\n    // Initialize audio context and elements when the file input changes\n    function loadAudio() {\n        if (fileInputRef.current && fileInputRef.current.files[0]) {\n            let filePath = fileInputRef.current.files[0].name;\n            var allowedExtensions = /(\\.mp3|\\.wav|\\.mp4)$/i;\n            if (!allowedExtensions.exec(filePath)) {\n                alert('Invalid file type for audio visualizer. Try again with an MP3, MP4, or WAV file.');\n                return;\n            }\n        }\n        if (audioElement) {\n            audioElement.pause();\n            audioElement.currentTime = 0;\n        }\n        setAnalyser(null);\n        setSource(null);\n        setAudioCtx(null);\n        if (audioElement != null) {\n            audioElement.src = \"!\";\n            audioElement.remove();\n        }\n        setAudioElement(new Audio());\n    }\n\n    function updateVolume() {\n        if(audioElement && volumeBarRef.current) {\n            let volumeBarValue = volumeBarRef.current.value;\n            audioElement.volume = volumeBarValue / 100;\n        }\n    }\n\n    function updatePlayback() {\n        if(audioElement && scrubBarRef.current) {\n            let scrubBarValue = scrubBarRef.current.value;\n            let currentTime = (scrubBarValue / 100) * audioElement.duration;\n            audioElement.currentTime = currentTime;\n        } else {\n            loadAudio();\n        }\n    }\n\n    function togglePlay(given) {\n        if (audioElement && audioCtx) {\n            audioCtx.resume();\n            if ((given === true) || audioElement.paused) {\n                audioElement.play();\n                setPlay(true);\n            } else {\n                audioElement.pause();\n                setPlay(false);\n            }\n        } else {\n            loadAudio();\n        }\n    }\n\n    return (\n        <VisibilitySensor onChange={setIsVisible}>\n            <div style={props.style} className='canvas-area no-select' ref={canvasAreaRef}>\n                <br />\n                <br />\n                <div className=\"main-header-container\">\n                    <h2 className={\"main-header\"} style={play?{opacity: 0, transition: \"2s opacity\"}:{opacity: 0.8, transition: \"3s opacity\"}}>David Mash</h2>\n                </div>\n                <div className=\"control-panel\" onClick={togglePlay}>\n                    {play?\n                    <img alt={\"\"} src={process.env.PUBLIC_URL + '/images/pause-button.png'} className={\"pause-button\"} />\n                    :\n                    <img alt={\"\"} src={process.env.PUBLIC_URL + '/images/play-button.png'} className={\"play-button\"} />\n                    }\n                </div>\n                <br />\n                <canvas ref={filterCanvasRef} id=\"frequency\" onClick={togglePlay}/>\n                <canvas ref={backgroundRef} id=\"background\" />\n                <img\n                    alt={\"\"}\n                    src={process.env.PUBLIC_URL + '/images/main_images/' + props.imageNumber + '.jpeg'}\n                    style={{objectFit: \"cover\", minHeight: \"100%\", height: \"100%\", minWidth: \"100%\", width: \"auto\", position: \"absolute\", zIndex: \"-3\", top: \"0px\", left: \"0px\"}}\n                />\n                <div\n                    className='bottom-controls-1'\n                    onMouseOver={() => {if (!mouseOverBottom1) setMouseOverBottom1(true);}}\n                    onMouseLeave={() => {if (mouseOverBottom1) setMouseOverBottom1(false);}}\n                    style={mouseOverBottom1?{opacity: 0.8, transition: \"opacity 300ms\"}:play?{opacity: 0, transition: \"opacity 300ms\"}:{opacity: 0.6, transition: \"opacity 300ms\"}}\n                >\n                    <input\n                        className={\"file-input song-upload-button\"}\n                        type=\"file\"\n                        ref={fileInputRef}\n                        onChange={loadAudio}\n                    />\n                </div>\n                <div\n                    className='bottom-controls-2'\n                    onMouseOver={() => {if (!mouseOverBottom2) setMouseOverBottom2(true);}}\n                    onMouseLeave={() => {if (mouseOverBottom2) setMouseOverBottom2(false);}}\n                    style={mouseOverBottom2?{opacity: 0.8, transition: \"opacity 300ms\"}:play?{opacity: 0, transition: \"opacity 300ms\"}:{opacity: 0.6, transition: \"opacity 300ms\"}}\n                >\n                    <img className=\"slider-icon-left\" src={process.env.PUBLIC_URL + '/images/volume-down.png'} alt=\"\"></img>\n                    <input\n                        ref={volumeBarRef}\n                        className=\"volume-bar\"\n                        type=\"range\"\n                        min=\"0\"\n                        max=\"100\"\n                        id=\"volume-control\"\n                        defaultValue={100}\n                        onInput={() => {updateVolume();}}\n                    />\n                    <img className=\"slider-icon-right\" src={process.env.PUBLIC_URL + '/images/volume-up.png'} alt=\"\"></img>\n                </div>\n                {loaded?\n                <div\n                    className='bottom-controls-3'\n                    onMouseOver={() => {if (!mouseOverBottom3) setMouseOverBottom3(true);}}\n                    onMouseLeave={() => {if (mouseOverBottom3) setMouseOverBottom3(false);}}\n                    style={mouseOverBottom3?{opacity: 0.8, transition: \"opacity 300ms\"}:play?{opacity: 0, transition: \"opacity 300ms\"}:{opacity: 0.6, transition: \"opacity 300ms\"}}\n                >\n                    <input\n                        ref={scrubBarRef}\n                        className=\"scrub-bar\"\n                        type=\"range\"\n                        min=\"0\"\n                        max=\"100\"\n                        defaultValue={0}\n                        id=\"scrub-bar\"\n                        disabled={!loaded}\n                        onInput={() => {updatePlayback();}}\n                    />\n                </div>\n                :\n                <></>\n                }\n            </div>\n        </VisibilitySensor>\n    );\n}\n\nexport default AudioVisualizer;\n","import React, { Component } from \"react\";\nimport AudioVisualizer from \"./AudioVisualizer\";\n\nclass Header extends Component {\n  constructor() {\n    super();\n    this.state = {\n      imageNumber: Math.floor(Math.random() * 2)\n    };\n  }\n\n  render() {\n    if (!this.props.data) return null;\n\n    //const name = this.props.data.name;\n    //const description = this.props.data.description;\n\n    return (\n      <header id=\"home\">\n        <div className=\"main-visual-container\">\n          <AudioVisualizer style={{width: \"100%\", position: \"absolute\", zIndex: \"0\", top: \"0px\", left: \"0px\"}} imageNumber={this.state.imageNumber} />\n        </div>\n\n        <nav id=\"nav-wrap\">\n          {/*\n          <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">\n            Show navigation\n          </a>\n          <a className=\"mobile-btn\" href=\"#home\" title=\"Hide navigation\">\n            Hide navigation\n          </a>\n          */}\n\n          <ul id=\"nav\" className=\"nav\">\n            <li className=\"current\">\n              <a className=\"smoothscroll\" href=\"#home\">\n                Home\n              </a>\n            </li>\n\n            <li>\n              <a className=\"smoothscroll\" href=\"#about\">\n                About\n              </a>\n            </li>\n\n            <li>\n              <a className=\"smoothscroll\" href=\"#resume\">\n                Resume\n              </a>\n            </li>\n\n            <li>\n              <a className=\"smoothscroll\" href=\"#portfolio\">\n                Works\n              </a>\n            </li>\n\n            <li>\n              <a className=\"smoothscroll\" href=\"#contact\">\n                Contact\n              </a>\n            </li>\n          </ul>\n        </nav>\n\n        <p className=\"scrolldown\">\n          <a className=\"smoothscroll\" href=\"#about\">\n            <i className=\"icon-down-circle\"></i>\n          </a>\n        </p>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { useState, useRef } from 'react';\nimport { Transition } from 'react-transition-group';\nimport * as Waypoint from 'react-waypoint';\n\nconst FadeIn = ({ children, ...props }) => {\n    const [isVisible, setIsVisible] = useState(false);\n    const nodeRef = useRef(null);\n\n    const duration = 500;\n    \n    const defaultStyle = {\n      transition: `opacity ${duration}ms ease-in-out`,\n        opacity: 0\n    }\n\n    const transitionStyles = {\n      entering: { opacity: 1 },\n      entered:  { opacity: 1 },\n      exiting:  { opacity: 0 },\n      exited:  { opacity: 0 },\n    };\n\n    return (\n        <Waypoint.Waypoint onEnter={() => setIsVisible(true)}>\n            <div>\n                <Transition\n                    nodeRef={nodeRef}\n                    in={isVisible}\n                    timeout={duration}\n                    classNames=\"fade\"\n                    {...props}\n                >\n                    {state => (\n                        <div ref={nodeRef} style={{\n                            ...defaultStyle,\n                            ...transitionStyles[state]}}>\n                            {children}\n                        </div>\n                    )}\n                </Transition>\n            </div>\n        </Waypoint.Waypoint>\n    );\n};\n\nexport default FadeIn;","import React, { Component } from \"react\";\nimport FadeIn from \"./FadeIn\";\n\nclass Footer extends Component {\n  render() {\n    if (!this.props.data) return null;\n\n    const networks = this.props.data.social.map(function (network) {\n      return (\n        <li key={network.name}>\n          <a href={network.url} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className={network.className}></i>\n          </a>\n        </li>\n      );\n    });\n\n    return (\n      <footer>\n        <div className=\"row\">\n          <FadeIn bottom>\n            <div className=\"twelve columns\">\n              <ul className=\"social-links\">{networks}</ul>\n              <ul className=\"copyright\">\n                <li>David Mash - 2023</li>\n              </ul>\n            </div>\n          </FadeIn>\n\n          <div id=\"go-top\">\n            <a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\">\n              <i className=\"icon-up-open\"></i>\n            </a>\n          </div>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport FadeIn from \"./FadeIn\";\n\nclass About extends Component {\n  render() {\n    if (!this.props.data) return null;\n\n    const name = this.props.data.name;\n    const profilepic = \"images/\" + this.props.data.image;\n    const bio = this.props.data.bio;\n    const linkedin = this.props.data.linkedin;\n    const email = this.props.data.email;\n    const resumeDownload = this.props.data.resumedownload;\n\n    return (\n      <section id=\"about\">\n        <FadeIn>\n          <div className=\"row\">\n            <div className=\"three columns\">\n              <img\n                className=\"profile-pic\"\n                src={profilepic}\n                alt=\"David Mash\"\n              />\n            </div>\n            <div className=\"nine columns main-col\">\n              <h2>About Me</h2>\n\n              <p>{bio}</p>\n              <div className=\"row\">\n                <div className=\"columns contact-details\">\n                  <h2>Contact Details</h2>\n                  <p className=\"address\">\n                    <span>{name}</span>\n                    <br />\n                    <span>{email}</span>\n                    <br />\n                    <a href={linkedin} target=\"_blank\" rel=\"noopener noreferrer\">🔗 LinkedIn</a>\n                  </p>\n                </div>\n                <div className=\"columns download\">\n                  <p>\n                    <a href={resumeDownload} className=\"button\">\n                      <i className=\"fa fa-download\"></i>Download Resume\n                    </a>\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </FadeIn>\n      </section>\n    );\n  }\n}\n\nexport default About;\n","import React, { useState, useRef } from 'react';\nimport { Transition } from 'react-transition-group';\nimport * as Waypoint from 'react-waypoint';\n\nconst SlideIn = ({ children, direction = 'left', ...props }) => {\n    const [isVisible, setIsVisible] = useState(false);\n    const nodeRef = useRef(null);\n\n    const duration = 500;\n    \n    const defaultStyle = {\n      transition: `opacity ${duration}ms ease-in-out`,\n        opacity: 0\n    }\n\n    const transitionStyles = {\n        entering:\n            {\n                opacity: 1,\n                position: \"relative\",\n                left: 0,\n                transition: \"left 1000ms\"\n            },\n        entered:\n            {\n                opacity: 1,\n                position: \"relative\",\n                left: 0,\n                transition: \"left 1000ms\"\n            },\n        exiting:\n            {\n                opacity: 0,\n                position: \"absolute\",\n                left: \"-100%\"\n            },\n        exited:\n            {\n                opacity: 0,\n                position: \"absolute\",\n                left: \"-100%\"\n            },\n    };\n\n    return (\n        <Waypoint.Waypoint onEnter={() => setIsVisible(true)}>\n            <div>\n                <Transition\n                    nodeRef={nodeRef}\n                    in={isVisible}\n                    timeout={duration}\n                    classNames={`slide-${direction}`}\n                    {...props}\n                >\n                    {state => (\n                        <div ref={nodeRef} style={{\n                            ...defaultStyle,\n                            ...transitionStyles[state]}}>\n                            {children}\n                        </div>\n                    )}\n                </Transition>\n            </div>\n        </Waypoint.Waypoint>\n    );\n};\n\nexport default SlideIn;","import React, { Component } from \"react\";\nimport SlideIn from \"./SlideIn\";\n\nclass Resume extends Component {\n  getRandomColor() {\n    let letters = \"0123456789ABCDEF\";\n    let color = \"#\";\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n\n  render() {\n    if (!this.props.data) return null;\n\n    const skillmessage = this.props.data.skillmessage;\n    const education = this.props.data.education.map(function (education) {\n      return (\n        <div key={education.school}>\n          <h3>{education.school}</h3>\n          <p className=\"info\">\n            {education.degree} <span>&bull;</span>\n            <em className=\"date\">{education.graduated}</em>\n          </p>\n          <p>{education.description}</p>\n        </div>\n      );\n    });\n\n    const work = this.props.data.work.map(function (work) {\n      return (\n        <div key={work.company}>\n          <h3>{work.company}</h3>\n          <p className=\"info\">\n            {work.title}\n            <span>&bull;</span> <em className=\"date\">{work.years}</em>\n          </p>\n          <p>{work.description}</p>\n        </div>\n      );\n    });\n\n    const skills = this.props.data.skills.map((skills) => {\n      const backgroundColor = this.getRandomColor();\n      const className = \"bar-expand \" + skills.name.toLowerCase();\n      const width = skills.level;\n\n      return (\n        <li key={skills.name}>\n          <span style={{ width, backgroundColor }} className={className}></span>\n          <em>{skills.name}</em>\n        </li>\n      );\n    });\n\n    return (\n      <section id=\"resume\">\n        <SlideIn>\n          <div className=\"row education\">\n            <div className=\"three columns header-col\">\n              <h1>\n                <span>Education</span>\n              </h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              <div className=\"row item\">\n                <div className=\"twelve columns\">{education}</div>\n              </div>\n            </div>\n          </div>\n        </SlideIn>\n\n        <SlideIn>\n          <div className=\"row work\">\n            <div className=\"three columns header-col\">\n              <h1>\n                <span>Work</span>\n              </h1>\n            </div>\n\n            <div className=\"nine columns main-col\">{work}</div>\n          </div>\n        </SlideIn>\n\n        <SlideIn>\n          <div className=\"row skill\">\n            <div className=\"three columns header-col\">\n              <h1>\n                <span>Skills</span>\n              </h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              <p>{skillmessage}</p>\n\n              <div className=\"bars\">\n                <ul className=\"skills\">{skills}</ul>\n              </div>\n            </div>\n          </div>\n        </SlideIn>\n      </section>\n    );\n  }\n}\n\nexport default Resume;\n","import React, { Component } from \"react\";\nimport FadeIn from \"./FadeIn\";\nimport SlideIn from \"./SlideIn\";\n\nclass Contact extends Component {\n  render() {\n    if (!this.props.data) return null;\n\n    const message = this.props.data.contactmessage;\n\n    return (\n      <section id=\"contact\">\n        <FadeIn>\n          <div className=\"row section-head\">\n            <div className=\"two columns header-col\">\n              <h1>\n                <span>Get In Touch.</span>\n              </h1>\n            </div>\n\n            <div className=\"ten columns\">\n              <p className=\"lead\">{message}</p>\n            </div>\n          </div>\n        </FadeIn>\n\n        <div className=\"row\">\n          <SlideIn>\n            <div className=\"twelve columns\">\n              <form id=\"contactForm\" name=\"contactForm\">\n                <fieldset>\n                  {/*\n                  <div>\n                    <label htmlFor=\"contactName\">\n                      Name <span className=\"required\">*</span>\n                    </label>\n                    <input\n                      type=\"text\"\n                      defaultValue=\"\"\n                      size=\"35\"\n                      id=\"contactName\"\n                      name=\"contactName\"\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                  <div>\n                    <label htmlFor=\"contactEmail\">\n                      Email <span className=\"required\">*</span>\n                    </label>\n                    <input\n                      type=\"text\"\n                      defaultValue=\"\"\n                      size=\"35\"\n                      id=\"contactEmail\"\n                      name=\"contactEmail\"\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                  */}\n                  <div>\n                    <label htmlFor=\"contactSubject\">Subject</label>\n                    <input\n                      type=\"text\"\n                      defaultValue=\"\"\n                      size=\"35\"\n                      id=\"contactSubject\"\n                      name=\"contactSubject\"\n                      onChange={this.handleChange}\n                    />\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"contactMessage\">\n                      Message <span className=\"required\">*</span>\n                    </label>\n                    <textarea\n                      cols=\"50\"\n                      rows=\"15\"\n                      id=\"contactMessage\"\n                      name=\"contactMessage\"\n                    ></textarea>\n                  </div>\n\n                  <div>\n                    <button className=\"submit\">Submit</button>\n                    <span id=\"image-loader\">\n                      <img alt=\"\" src=\"images/loader.gif\" />\n                    </span>\n                  </div>\n                </fieldset>\n              </form>\n\n              <div id=\"message-warning\"> An error has occurred. Consider emailing davidmash134@gmail.com from your regular email service.</div>\n              <div id=\"message-success\">\n                <i className=\"fa fa-check\"></i>Your message was sent, thank you!\n                <br />\n              </div>\n            </div>\n          </SlideIn>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport FadeIn from \"./FadeIn\";\n\nlet id = 0;\nclass Portfolio extends Component {\n  render() {\n    if (!this.props.data) return null;\n\n    const projects = this.props.data.projects.map(function (project) {\n      let projectImage = \"images/portfolio/\" + project.image;\n\n      return (\n        <button key={id++} className=\"columns portfolio-item\">\n          <div className=\"item-wrap\">\n            <a href={project.link} target=\"_blank\" rel=\"noopener noreferrer\">\n              <img className={\"project-link-image\"} alt={project.title} src={projectImage} />\n              <h5 style={{ textAlign: \"center\" }}>{project.title}</h5>\n              <div style={{ textAlign: \"center\" }}>{project.description}</div>\n            </a>\n          </div>\n        </button>\n      );\n    });\n\n    return (\n      <section id=\"portfolio\">\n        <FadeIn>\n          <div className=\"row\">\n            <div className=\"twelve columns collapsed\">\n              <h1>Here are some things that I have worked on.</h1>\n\n              <div\n                id=\"portfolio-wrapper\"\n                className=\"bgrid-quarters s-bgrid-thirds cf\"\n              >\n                {projects}\n              </div>\n            </div>\n          </div>\n        </FadeIn>\n      </section>\n    );\n  }\n}\n\nexport default Portfolio;\n","import React, { Component } from \"react\";\n//import ReactGA from \"react-ga\";\nimport $ from \"jquery\";\nimport \"./App.css\";\nimport Header from \"./Components/Header\";\nimport Footer from \"./Components/Footer\";\nimport About from \"./Components/About\";\nimport Resume from \"./Components/Resume\";\nimport Contact from \"./Components/Contact\";\nimport Portfolio from \"./Components/Portfolio\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      resumeData: {}\n    };\n\n    //ReactGA.initialize(\"UA-110570651-1\");\n    //ReactGA.pageview(window.location.pathname);\n  }\n\n  getResumeData() {\n    $.ajax({\n      url: \"./resumeData.json\",\n      dataType: \"json\",\n      cache: false,\n      success: function(data) {\n        this.setState({ resumeData: data });\n      }.bind(this),\n      error: function(xhr, status, err) {\n        console.log(err);\n        alert(err);\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.getResumeData();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header data={this.state.resumeData.main} />\n        <About data={this.state.resumeData.main} />\n        <Resume data={this.state.resumeData.resume} />\n        <Portfolio data={this.state.resumeData.portfolio} />\n        <Contact data={this.state.resumeData.main} />\n        <Footer data={this.state.resumeData.main} />\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}