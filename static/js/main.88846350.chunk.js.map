{"version":3,"sources":["Components/AudioVisualizer.js","Components/Header.js","Components/FadeIn.js","Components/Footer.js","Components/About.js","Components/SlideIn.js","Components/Resume.js","Components/Contact.js","Components/Portfolio.js","Components/FollowCursor.js","App.js","reportWebVitals.js","index.js"],"names":["AudioVisualizer","props","useState","audioElement","setAudioElement","analyser","setAnalyser","audioCtx","setAudioCtx","source","setSource","loaded","setLoaded","canvasAreaRef","useRef","fileInputRef","frequencyRef","backgroundRef","scrubBarRef","play","setPlay","mouseOverBottom1","setMouseOverBottom1","mouseOverBottom2","setMouseOverBottom2","setIsVisible","loadAudio","current","files","filePath","name","exec","alert","pause","currentTime","src","remove","Audio","togglePlay","given","resume","paused","useEffect","getAverageAmplitude","data","startIndex","endIndex","Math","trunc","min","length","sum","i","getPeakAmplitude","peak","max","drawVisualizationBar","index","barWidth","x","verticalCenter","dataArray","ultimatePeak","adjustedData","pow","barHeight","offsetX","random","offsetY","offsetWidth","frequencyCtx","fillRect","getLowFrequencyColor","lowFrequencySum","lowFrequencyMax","lowFrequencyAverage","lowFreqShiftingColorNumber","map","getHighFrequencyColor","highFrequencySum","highFrequencyMax","highFrequencyAverage","highFreqShiftingColorNumber","value","start1","stop1","start2","stop2","connect","destination","bufferLength","frequencyBinCount","Uint8Array","willReadFrequently","getContext","smudgeCtx","hiddenCanvas","document","createElement","hiddenCtx","style","width","height","offsetHeight","addEventListener","imageData","rotationAngle","rotateSmudge","splitSmudge","growSmudge","smudgeVelocity","smudgeGrowVelocity","drawVisualization","charAt","getByteFrequencyData","clearRect","canvas","avgAmplitude","highFreqAvgAmplitude","highFreqPeakAmplitude","midFreqAvgAmplitude","lowFreqAvgAmplitude","lowFreqPeakAmplitude","gradient","createLinearGradient","highFrequencyColor","addColorStop","fillStyle","zeroAdjust","x2","globalAlpha","abs","requestAnimationFrame","save","translate","rotate","PI","drawImage","restore","getImageData","putImageData","widthOffset","heightOffset","createAnalyser","createMediaElementSource","scrubBarValue","duration","URL","createObjectURL","window","AudioContext","webkitAudioContext","onChange","className","ref","opacity","transition","onClick","alt","id","imageNumber","objectFit","minHeight","minWidth","position","zIndex","top","left","onMouseOver","onMouseLeave","type","defaultValue","disabled","updatePlayback","Header","state","floor","this","href","Component","FadeIn","children","isVisible","nodeRef","defaultStyle","transitionStyles","entering","entered","exiting","exited","onEnter","Transition","in","timeout","classNames","Footer","networks","social","network","url","target","rel","bottom","title","About","profilepic","image","bio","linkedin","email","resumeDownload","resumedownload","SlideIn","direction","Resume","color","skillmessage","education","school","degree","graduated","description","work","company","years","skills","backgroundColor","getRandomColor","toLowerCase","level","Contact","message","contactmessage","htmlFor","size","handleChange","cols","rows","Portfolio","projects","project","projectImage","link","textAlign","CanvasMouseEffect","canvasRef","ctx","circles","y","r","rDirection","g","gDirection","b","bDirection","handleMouseMove","event","distY","clientX","distX","clientY","distance","sqrt","push","animate","innerWidth","innerHeight","circle","splice","beginPath","arc","fill","removeEventListener","App","resumeData","$","ajax","dataType","cache","success","setState","bind","error","xhr","status","err","console","log","getResumeData","FollowCursor","main","portfolio","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.88846350.chunk.js","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport VisibilitySensor from 'react-visibility-sensor';\n\nfunction AudioVisualizer(props) {\n    const [audioElement, setAudioElement] = useState(null);\n    const [analyser, setAnalyser] = useState(null);\n    const [audioCtx, setAudioCtx] = useState(null);\n    const [source, setSource] = useState(null);\n    const [loaded, setLoaded] = useState(false);\n    const canvasAreaRef = useRef(null);\n    const fileInputRef = useRef(null);\n    const frequencyRef = useRef(null);\n    const backgroundRef = useRef(null);\n    const scrubBarRef = useRef(null);\n    const [play, setPlay] = useState(false);\n    const [mouseOverBottom1, setMouseOverBottom1] = useState(false);\n    const [mouseOverBottom2, setMouseOverBottom2] = useState(false);\n    const [isVisible, setIsVisible] = useState(true);\n\n    useEffect(() => {\n        if (analyser && source && audioCtx) {\n            source.connect(analyser);\n            analyser.connect(audioCtx.destination);\n            togglePlay(true);\n\n            const bufferLength = analyser.frequencyBinCount;\n            let dataArray = new Uint8Array(bufferLength);\n\n            frequencyRef.current.willReadFrequently = true;\n            backgroundRef.current.willReadFrequently = true;\n            const frequencyCtx = frequencyRef.current.getContext(\"2d\");\n            const smudgeCtx = backgroundRef.current.getContext(\"2d\");\n            const hiddenCanvas = document.createElement(\"CANVAS\")\n            const hiddenCtx =  hiddenCanvas.getContext(\"2d\");\n            backgroundRef.current.style.width ='100%';\n            backgroundRef.current.style.height='100%';\n            frequencyRef.current.style.width ='100%';\n            frequencyRef.current.style.height='100%';\n            backgroundRef.current.width  = canvasAreaRef.current.offsetWidth;\n            backgroundRef.current.height = canvasAreaRef.current.offsetHeight;\n            frequencyRef.current.width  = canvasAreaRef.current.offsetWidth;\n            frequencyRef.current.height = canvasAreaRef.current.offsetHeight;\n            hiddenCanvas.width = backgroundRef.current.width;\n            hiddenCanvas.height = backgroundRef.current.height;\n            canvasAreaRef.current.addEventListener(\"resize\", () => {\n                backgroundRef.current.width  = canvasAreaRef.current.offsetWidth;\n                backgroundRef.current.height = canvasAreaRef.current.offsetHeight;\n                frequencyRef.current.width  = canvasAreaRef.current.offsetWidth;\n                frequencyRef.current.height = canvasAreaRef.current.offsetHeight;\n                hiddenCanvas.width = backgroundRef.current.width;\n                hiddenCanvas.height = backgroundRef.current.height;\n            });\n\n            let ultimatePeak = 1;\n            let rotationAngle = 0;\n            let rotateSmudge = false;\n            let splitSmudge = true;\n            let growSmudge = false;\n            let smudgeVelocity = 0;\n            let smudgeGrowVelocity = 0;\n            var imageData;\n\n            // Draw the frequency spectrum visualization\n            function drawVisualization() {\n                if (audioElement.src.charAt(audioElement.src.length - 1) === \"!\") return;\n                analyser.getByteFrequencyData(dataArray);\n                \n                // draw current frame to main canvas\n                frequencyCtx.clearRect(0, 0, frequencyCtx.canvas.width, frequencyCtx.canvas.height);\n        \n                let avgAmplitude = 0;\n                let highFreqAvgAmplitude = 0;\n                let highFreqPeakAmplitude = 0;\n                let midFreqAvgAmplitude = 0;\n                let lowFreqAvgAmplitude = 0;\n                let lowFreqPeakAmplitude = 0;\n                if (dataArray && dataArray.length > 0) {\n                    let gradient = frequencyCtx.createLinearGradient(0, 0, frequencyCtx.canvas.width, 0);\n                    let highFrequencyColor = getHighFrequencyColor(dataArray);\n                    gradient.addColorStop(0, highFrequencyColor);\n                    gradient.addColorStop(0.5, getLowFrequencyColor(dataArray));\n                    gradient.addColorStop(1, highFrequencyColor);\n                    frequencyCtx.fillStyle = gradient;\n                    let verticalCenter = frequencyCtx.canvas.height / 2;\n                    let zeroAdjust = 0;\n                    for (let i = dataArray.length - 1; i >= 0; i--) {\n                        if (dataArray[i] - 20 > 0) break;\n                        zeroAdjust++;\n                    }\n                    let barWidth = ((frequencyCtx.canvas.width / dataArray.length)) / 2;\n                    let x = 0;\n                    let x2 = frequencyCtx.canvas.width;\n                    for (let i = 0; i < dataArray.length - zeroAdjust; i++) {\n                        drawVisualizationBar(i, barWidth, x, verticalCenter);\n                        drawVisualizationBar(i, barWidth, x2, verticalCenter);\n                        x += (frequencyCtx.canvas.width / (dataArray.length - zeroAdjust)) / 2;\n                        x2 -= (frequencyCtx.canvas.width / (dataArray.length - zeroAdjust)) / 2;\n                    }\n                    avgAmplitude = getAverageAmplitude(dataArray, 0, dataArray.length);\n                    highFreqAvgAmplitude = getAverageAmplitude(dataArray, 12 * dataArray.length / 16, dataArray.length);\n                    highFreqPeakAmplitude = getPeakAmplitude(dataArray, 12 * dataArray.length / 16, dataArray.length);\n                    midFreqAvgAmplitude = getAverageAmplitude(dataArray, dataArray.length / 16, 3 * dataArray.length / 16);\n                    lowFreqAvgAmplitude = getAverageAmplitude(dataArray, 0, dataArray.length / 16);\n                    lowFreqPeakAmplitude = getPeakAmplitude(dataArray, 0, dataArray.length / 16);\n                    frequencyCtx.globalAlpha = (Math.abs(0.2 - (avgAmplitude / 200)) + 0.1) / 2;\n\n                    requestAnimationFrame(drawVisualization);\n                }\n\n                //smudge effect\n                rotateSmudge = (rotateSmudge && !(lowFreqPeakAmplitude > ultimatePeak * 1.01) && midFreqAvgAmplitude + highFreqAvgAmplitude > avgAmplitude * 2)\n                                || midFreqAvgAmplitude + highFreqAvgAmplitude > avgAmplitude * 3.2;\n                splitSmudge = !growSmudge || ((splitSmudge && !(lowFreqPeakAmplitude < ultimatePeak * 0.8) && midFreqAvgAmplitude + highFreqAvgAmplitude < avgAmplitude * 3)\n                                || midFreqAvgAmplitude + highFreqAvgAmplitude < avgAmplitude * 2);\n                growSmudge = ((growSmudge) && highFreqPeakAmplitude + midFreqAvgAmplitude > highFreqAvgAmplitude + lowFreqAvgAmplitude / 2)\n                                || (highFreqPeakAmplitude * 2 + midFreqAvgAmplitude > highFreqAvgAmplitude + lowFreqAvgAmplitude)\n                                || (rotateSmudge && highFreqPeakAmplitude * 2 + midFreqAvgAmplitude > highFreqAvgAmplitude / 2 + lowFreqAvgAmplitude);\n                if (rotateSmudge) {\n                    rotationAngle = (rotationAngle + 1) % 360;\n                    smudgeVelocity = (lowFreqAvgAmplitude) / 5 * (midFreqAvgAmplitude < highFreqAvgAmplitude * 5)? -1: 1;\n                    // Save the current canvas state\n                    smudgeCtx.save();\n                    // Rotate the canvas\n                    smudgeCtx.translate(smudgeCtx.canvas.width / 2, smudgeCtx.canvas.height / 2);\n                    smudgeCtx.rotate(Math.PI / 180 * rotationAngle * smudgeVelocity);\n                    smudgeCtx.translate(-smudgeCtx.canvas.width / 2, -smudgeCtx.canvas.height / 2);\n                    // Draw the smudged image on the canvas\n                    smudgeCtx.globalAlpha = Math.abs(0.04 - (avgAmplitude / 4000));\n                    smudgeCtx.drawImage(smudgeCtx.canvas, 0, 0);\n                    // Restore the saved state\n                    smudgeCtx.restore();\n                } else if (splitSmudge) {\n                    rotationAngle = 0;\n                    smudgeCtx.globalAlpha = 0.5 - (avgAmplitude / 100);\n                    imageData = smudgeCtx.getImageData(0, 0, smudgeCtx.canvas.width, smudgeCtx.canvas.height);\n                    smudgeCtx.clearRect(0, 0, smudgeCtx.canvas.width, smudgeCtx.canvas.height);\n                    smudgeVelocity = (avgAmplitude < 10)? avgAmplitude * 2: (((smudgeVelocity < 0 && lowFreqPeakAmplitude >= ultimatePeak) || (lowFreqPeakAmplitude >= ultimatePeak && lowFreqAvgAmplitude * 0.5 > midFreqAvgAmplitude + highFreqAvgAmplitude))? -1: 1) * avgAmplitude / 4;\n                    smudgeCtx.putImageData(imageData, 0, -smudgeVelocity, 0, 0, smudgeCtx.canvas.width, smudgeCtx.canvas.height / 2);\n                    smudgeCtx.putImageData(imageData, 0, smudgeVelocity, 0, smudgeCtx.canvas.height / 2, smudgeCtx.canvas.width, smudgeCtx.canvas.height / 2);\n                }\n                if (growSmudge) {\n                    smudgeCtx.globalAlpha = 1;\n                    smudgeGrowVelocity = (((!rotateSmudge && smudgeGrowVelocity < 0 && lowFreqPeakAmplitude > midFreqAvgAmplitude + highFreqPeakAmplitude) || lowFreqPeakAmplitude > (midFreqAvgAmplitude + highFreqAvgAmplitude) * 2.8)? -1: 1) * (highFreqPeakAmplitude - highFreqAvgAmplitude * (rotateSmudge? 16: 4)) / (avgAmplitude * 20);\n                    let widthOffset = (smudgeCtx.canvas.width * smudgeGrowVelocity);\n                    let heightOffset = (smudgeCtx.canvas.height * smudgeGrowVelocity);\n                    imageData = smudgeCtx.getImageData(0, 0, smudgeCtx.canvas.width, smudgeCtx.canvas.height);\n                    hiddenCtx.clearRect(0, 0, smudgeCtx.canvas.width, smudgeCtx.canvas.height);\n                    hiddenCtx.drawImage(smudgeCtx.canvas, 0, 0);\n                    hiddenCtx.globalAlpha = rotateSmudge? 1: Math.max((highFreqPeakAmplitude + midFreqAvgAmplitude) * 1.5 / (highFreqAvgAmplitude + lowFreqAvgAmplitude), 0.9);\n                    smudgeCtx.clearRect(0, 0, smudgeCtx.canvas.width, smudgeCtx.canvas.height);\n                    smudgeCtx.drawImage(hiddenCtx.canvas, 0 - widthOffset / 2, 0 - heightOffset / 2, smudgeCtx.canvas.width + widthOffset, smudgeCtx.canvas.height + heightOffset);\n                } else {\n                    smudgeGrowVelocity = 0;\n                }\n                smudgeCtx.globalAlpha = 0.6;\n                smudgeCtx.drawImage(frequencyCtx.canvas, 0, 0);   \n            }\n        \n            function getAverageAmplitude(data, startIndex, endIndex) {\n                startIndex = Math.trunc(startIndex);\n                endIndex = Math.min(Math.trunc(endIndex), data.length);\n                let sum = 0;\n                for (let i = startIndex; i < endIndex; i++) {\n                    sum += data[i];\n                }\n                return sum / (endIndex - startIndex - 1);\n            }\n        \n            function getPeakAmplitude(data, startIndex, endIndex) {\n                startIndex = Math.trunc(startIndex);\n                endIndex = Math.min(Math.trunc(endIndex), data.length);\n                let peak = 0;\n                for (let i = startIndex; i < endIndex; i++) {\n                    peak = Math.max(peak, data[i]);\n                }\n                return peak;\n            }\n        \n            function drawVisualizationBar(index, barWidth, x, verticalCenter) {\n                if (dataArray[index] > ultimatePeak) {\n                    ultimatePeak = dataArray[index];\n                }\n                //take the square of the data like this will amplify peaks\n                const adjustedData = 8 * dataArray[index] * Math.pow(dataArray[index] / ultimatePeak, 1.5 * (1 - (index / dataArray.length))) * ((index + (dataArray.length / 2)) / dataArray.length);\n                let barHeight = adjustedData;\n                let offsetX = (Math.random() - 0.5) * adjustedData / 32;\n                let offsetY = (Math.random() - 0.5) * adjustedData / 32;\n                let offsetWidth = (Math.random() - 0.5) * adjustedData / 32;\n                frequencyCtx.fillRect(x + offsetX, verticalCenter - (barHeight / 4) + offsetY, barWidth + offsetWidth, barHeight / 2);\n            }\n        \n            let lowFreqShiftingColorNumber = 0;\n            function getLowFrequencyColor(dataArray) {\n                let lowFrequencySum = 0;\n                let lowFrequencyMax = 0;\n                for (let i = 0; i < dataArray.length / 2; i++) {\n                    lowFrequencySum += dataArray[i];\n                    if (dataArray[i] > lowFrequencyMax) {\n                        lowFrequencyMax = dataArray[i];\n                    }\n                }\n                let lowFrequencyAverage = lowFrequencySum / (dataArray.length / 2);\n                if (lowFrequencyMax > lowFrequencyAverage * 10 || lowFrequencyAverage > ultimatePeak / 2) {\n                    lowFreqShiftingColorNumber = (lowFreqShiftingColorNumber + (lowFrequencyMax / (lowFrequencyAverage * 20)) + (lowFrequencyAverage / ultimatePeak)) % 255;\n                }\n                return `hsl(${map(lowFrequencyAverage, lowFreqShiftingColorNumber, 255, lowFreqShiftingColorNumber / 4, 360)}, 100%, 50%,` + (lowFrequencySum / (lowFrequencyMax + 0.1)) + `)`;\n            }\n        \n            let highFreqShiftingColorNumber = 0;\n            function getHighFrequencyColor(dataArray) {\n                let highFrequencySum = 0;\n                let highFrequencyMax = 0;\n                for (let i = dataArray.length / 2; i < dataArray.length; i++) {\n                    highFrequencySum += dataArray[i];\n                    if (dataArray[i] > highFrequencyMax) {\n                        highFrequencyMax = dataArray[i];\n                    }\n                }\n                let highFrequencyAverage = highFrequencySum / (dataArray.length/ 2);\n                if (highFrequencyMax > highFrequencyAverage * 200 || highFrequencyAverage > ultimatePeak / 2) {\n                    highFreqShiftingColorNumber = (highFreqShiftingColorNumber + (highFrequencyMax / (highFrequencyAverage * 200)) + (highFrequencyAverage / ultimatePeak)) % 255;\n                }\n                return `hsl(${map(highFrequencyAverage, highFreqShiftingColorNumber, 255, highFrequencyAverage / 4, 360)}, 100%, 50%,` + (highFrequencySum / (highFrequencyMax + 0.1)) + `)`;\n            }\n        \n            function map(value, start1, stop1, start2, stop2) {\n                return start2 + (stop2 - start2) * ((value - start1) / (stop1 - start1));\n            }\n\n            drawVisualization();\n        }\n    }, [analyser, source, audioCtx]);\n\n    useEffect(() => {\n        if (audioCtx && audioElement) {\n            setAnalyser(audioCtx.createAnalyser());\n            setSource(audioCtx.createMediaElementSource(audioElement));\n        }\n    }, [audioCtx, audioElement]);\n\n    useEffect(() => {\n        if (audioElement) {\n            function updateScrubBar() {\n                if(audioElement && scrubBarRef.current) {\n                    let currentTime = audioElement.currentTime;\n                    let duration = audioElement.duration;\n                    let scrubBarValue = (currentTime/duration) * 100;\n                    scrubBarRef.current.value = scrubBarValue;\n                }\n            }\n            audioElement.addEventListener(\"timeupdate\", updateScrubBar);\n            audioElement.src = (fileInputRef.current && fileInputRef.current.files[0])? URL.createObjectURL(fileInputRef.current.files[0]): process.env.PUBLIC_URL + '/music/song.mp3';\n            audioElement.addEventListener(\"loadeddata\", () => {\n                setLoaded(true);\n            });\n            audioElement.addEventListener(\"ended\", () => {\n                setPlay(false);\n            });\n            setAudioCtx(new (window.AudioContext || window.webkitAudioContext)());\n        }\n    }, [audioElement]);\n\n    // Initialize audio context and elements when the file input changes\n    function loadAudio() {\n        if (fileInputRef.current && fileInputRef.current.files[0]) {\n            let filePath = fileInputRef.current.files[0].name;\n            var allowedExtensions = /(\\.mp3|\\.wav|\\.mp4)$/i;\n            if (!allowedExtensions.exec(filePath)) {\n                alert('Invalid file type for audio visualizer. Try again with an MP3, MP4, or WAV file.');\n                return;\n            }\n        }\n        if (audioElement) {\n            audioElement.pause();\n            audioElement.currentTime = 0;\n        }\n        setAnalyser(null);\n        setSource(null);\n        setAudioCtx(null);\n        if (audioElement != null) {\n            audioElement.src = \"!\";\n            audioElement.remove();\n        }\n        setAudioElement(new Audio());\n    }\n\n    function updatePlayback() {\n        if(audioElement && scrubBarRef.current) {\n            let scrubBarValue = scrubBarRef.current.value;\n            let currentTime = (scrubBarValue / 100) * audioElement.duration;\n            audioElement.currentTime = currentTime;\n        }\n    }\n\n    function togglePlay(given) {\n        if (audioElement && audioCtx) {\n            audioCtx.resume();\n            if ((given === true) || audioElement.paused) {\n                audioElement.play();\n                setPlay(true);\n            } else {\n                audioElement.pause();\n                setPlay(false);\n            }\n        } else {\n            loadAudio();\n        }\n    }\n\n    return (\n        <VisibilitySensor onChange={setIsVisible}>\n            <div style={props.style} className='canvas-area no-select' ref={canvasAreaRef}>\n                <br />\n                <br />\n                <div className=\"main-header-container\">\n                    <h2 className={\"main-header\"} style={play?{opacity: 0, transition: \"2s opacity\"}:{opacity: 0.8, transition: \"3s opacity\"}}>David Mash</h2>\n                </div>\n                <div className=\"control-panel\" onClick={togglePlay}>\n                    {play?\n                    <img alt={\"\"} src={process.env.PUBLIC_URL + '/images/pause-button.png'} className={\"pause-button\"} />\n                    :\n                    <img alt={\"\"} src={process.env.PUBLIC_URL + '/images/play-button.png'} className={\"play-button\"} />\n                    }\n                </div>\n                <br />\n                <canvas ref={frequencyRef} id=\"frequency\" onClick={togglePlay}/>\n                <canvas ref={backgroundRef} id=\"background\" />\n                <img\n                    alt={\"\"}\n                    src={process.env.PUBLIC_URL + '/images/main_images/' + props.imageNumber + '.jpeg'}\n                    style={{objectFit: \"cover\", minHeight: \"100%\", height: \"100%\", minWidth: \"100%\", width: \"auto\", position: \"absolute\", zIndex: \"-3\", top: \"0px\", left: \"0px\"}}\n                />\n                <div\n                    className='bottom-controls-1'\n                    onMouseOver={() => {if (!mouseOverBottom1) setMouseOverBottom1(true);}}\n                    onMouseLeave={() => {if (mouseOverBottom1) setMouseOverBottom1(false);}}\n                    style={mouseOverBottom1?{opacity: 0.7, transition: \"opacity 300ms\"}:play?{opacity: 0, transition: \"opacity 300ms\"}:{opacity: 0.4, transition: \"opacity 300ms\"}}\n                >\n                    <input\n                        className={\"file-input\"}\n                        type=\"file\"\n                        ref={fileInputRef}\n                        onChange={loadAudio}\n                    />\n                </div>\n                <div\n                    className='bottom-controls-2'\n                    onMouseOver={() => {if (!mouseOverBottom2) setMouseOverBottom2(true);}}\n                    onMouseLeave={() => {if (mouseOverBottom2) setMouseOverBottom2(false);}}\n                    style={mouseOverBottom2?{opacity: 0.7, transition: \"opacity 300ms\"}:play?{opacity: 0, transition: \"opacity 300ms\"}:{opacity: 0.4, transition: \"opacity 300ms\"}}\n                >\n                    <input\n                        ref={scrubBarRef}\n                        className=\"scrub-bar\"\n                        type=\"range\"\n                        min=\"0\"\n                        max=\"100\"\n                        defaultValue={0}\n                        id=\"scrub-bar\"\n                        disabled={!loaded}\n                        onChange={() => {updatePlayback();}}\n                    />\n                </div>\n            </div>\n        </VisibilitySensor>\n    );\n}\n\nexport default AudioVisualizer;\n","import React, { Component } from \"react\";\nimport AudioVisualizer from \"./AudioVisualizer\";\n\nclass Header extends Component {\n  constructor() {\n    super();\n    this.state = {\n      imageNumber: Math.floor(Math.random() * 2)\n    };\n  }\n\n  render() {\n    if (!this.props.data) return null;\n\n    //const name = this.props.data.name;\n    //const description = this.props.data.description;\n\n    return (\n      <header id=\"home\">\n        <div className=\"main-visual-container\">\n          <AudioVisualizer style={{width: \"100%\", position: \"absolute\", zIndex: \"0\", top: \"0px\", left: \"0px\"}} imageNumber={this.state.imageNumber} />\n        </div>\n\n        <nav id=\"nav-wrap\">\n          {/*\n          <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">\n            Show navigation\n          </a>\n          <a className=\"mobile-btn\" href=\"#home\" title=\"Hide navigation\">\n            Hide navigation\n          </a>\n          */}\n\n          <ul id=\"nav\" className=\"nav\">\n            <li className=\"current\">\n              <a className=\"smoothscroll\" href=\"#home\">\n                Home\n              </a>\n            </li>\n\n            <li>\n              <a className=\"smoothscroll\" href=\"#about\">\n                About\n              </a>\n            </li>\n\n            <li>\n              <a className=\"smoothscroll\" href=\"#resume\">\n                Resume\n              </a>\n            </li>\n\n            <li>\n              <a className=\"smoothscroll\" href=\"#portfolio\">\n                Works\n              </a>\n            </li>\n\n            <li>\n              <a className=\"smoothscroll\" href=\"#contact\">\n                Contact\n              </a>\n            </li>\n          </ul>\n        </nav>\n\n        <p className=\"scrolldown\">\n          <a className=\"smoothscroll\" href=\"#about\">\n            <i className=\"icon-down-circle\"></i>\n          </a>\n        </p>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { useState, useRef } from 'react';\nimport { Transition } from 'react-transition-group';\nimport * as Waypoint from 'react-waypoint';\n\nconst FadeIn = ({ children, ...props }) => {\n    const [isVisible, setIsVisible] = useState(false);\n    const nodeRef = useRef(null);\n\n    const duration = 500;\n    \n    const defaultStyle = {\n      transition: `opacity ${duration}ms ease-in-out`,\n        opacity: 0\n    }\n\n    const transitionStyles = {\n      entering: { opacity: 1 },\n      entered:  { opacity: 1 },\n      exiting:  { opacity: 0 },\n      exited:  { opacity: 0 },\n    };\n\n    return (\n        <Waypoint.Waypoint onEnter={() => setIsVisible(true)}>\n            <div>\n                <Transition\n                    nodeRef={nodeRef}\n                    in={isVisible}\n                    timeout={duration}\n                    classNames=\"fade\"\n                    {...props}\n                >\n                    {state => (\n                        <div ref={nodeRef} style={{\n                            ...defaultStyle,\n                            ...transitionStyles[state]}}>\n                            {children}\n                        </div>\n                    )}\n                </Transition>\n            </div>\n        </Waypoint.Waypoint>\n    );\n};\n\nexport default FadeIn;","import React, { Component } from \"react\";\nimport FadeIn from \"./FadeIn\";\n\nclass Footer extends Component {\n  render() {\n    if (!this.props.data) return null;\n\n    const networks = this.props.data.social.map(function (network) {\n      return (\n        <li key={network.name}>\n          <a href={network.url} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className={network.className}></i>\n          </a>\n        </li>\n      );\n    });\n\n    return (\n      <footer>\n        <div className=\"row\">\n          <FadeIn bottom>\n            <div className=\"twelve columns\">\n              <ul className=\"social-links\">{networks}</ul>\n              <ul className=\"copyright\">\n                <li>David Mash - 2023</li>\n              </ul>\n            </div>\n          </FadeIn>\n\n          <div id=\"go-top\">\n            <a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\">\n              <i className=\"icon-up-open\"></i>\n            </a>\n          </div>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport FadeIn from \"./FadeIn\";\n\nclass About extends Component {\n  render() {\n    if (!this.props.data) return null;\n\n    const name = this.props.data.name;\n    const profilepic = \"images/\" + this.props.data.image;\n    const bio = this.props.data.bio;\n    const linkedin = this.props.data.linkedin;\n    const email = this.props.data.email;\n    const resumeDownload = this.props.data.resumedownload;\n\n    return (\n      <section id=\"about\">\n        <FadeIn>\n          <div className=\"row\">\n            <div className=\"three columns\">\n              <img\n                className=\"profile-pic\"\n                src={profilepic}\n                alt=\"David Mash\"\n              />\n            </div>\n            <div className=\"nine columns main-col\">\n              <h2>About Me</h2>\n\n              <p>{bio}</p>\n              <div className=\"row\">\n                <div className=\"columns contact-details\">\n                  <h2>Contact Details</h2>\n                  <p className=\"address\">\n                    <span>{name}</span>\n                    <br />\n                    <span>{email}</span>\n                    <br />\n                    <a href={linkedin} target=\"_blank\" rel=\"noopener noreferrer\">🔗 LinkedIn</a>\n                  </p>\n                </div>\n                <div className=\"columns download\">\n                  <p>\n                    <a href={resumeDownload} className=\"button\">\n                      <i className=\"fa fa-download\"></i>Download Resume\n                    </a>\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </FadeIn>\n      </section>\n    );\n  }\n}\n\nexport default About;\n","import React, { useState, useRef } from 'react';\nimport { Transition } from 'react-transition-group';\nimport * as Waypoint from 'react-waypoint';\n\nconst SlideIn = ({ children, direction = 'left', ...props }) => {\n    const [isVisible, setIsVisible] = useState(false);\n    const nodeRef = useRef(null);\n\n    const duration = 500;\n    \n    const defaultStyle = {\n      transition: `opacity ${duration}ms ease-in-out`,\n        opacity: 0\n    }\n\n    const transitionStyles = {\n        entering:\n            {\n                opacity: 1,\n                position: \"relative\",\n                left: 0,\n                transition: \"left 1000ms\"\n            },\n        entered:\n            {\n                opacity: 1,\n                position: \"relative\",\n                left: 0,\n                transition: \"left 1000ms\"\n            },\n        exiting:\n            {\n                opacity: 0,\n                position: \"absolute\",\n                left: \"-100%\"\n            },\n        exited:\n            {\n                opacity: 0,\n                position: \"absolute\",\n                left: \"-100%\"\n            },\n    };\n\n    return (\n        <Waypoint.Waypoint onEnter={() => setIsVisible(true)}>\n            <div>\n                <Transition\n                    nodeRef={nodeRef}\n                    in={isVisible}\n                    timeout={duration}\n                    classNames={`slide-${direction}`}\n                    {...props}\n                >\n                    {state => (\n                        <div ref={nodeRef} style={{\n                            ...defaultStyle,\n                            ...transitionStyles[state]}}>\n                            {children}\n                        </div>\n                    )}\n                </Transition>\n            </div>\n        </Waypoint.Waypoint>\n    );\n};\n\nexport default SlideIn;","import React, { Component } from \"react\";\nimport SlideIn from \"./SlideIn\";\n\nclass Resume extends Component {\n  getRandomColor() {\n    let letters = \"0123456789ABCDEF\";\n    let color = \"#\";\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n\n  render() {\n    if (!this.props.data) return null;\n\n    const skillmessage = this.props.data.skillmessage;\n    const education = this.props.data.education.map(function (education) {\n      return (\n        <div key={education.school}>\n          <h3>{education.school}</h3>\n          <p className=\"info\">\n            {education.degree} <span>&bull;</span>\n            <em className=\"date\">{education.graduated}</em>\n          </p>\n          <p>{education.description}</p>\n        </div>\n      );\n    });\n\n    const work = this.props.data.work.map(function (work) {\n      return (\n        <div key={work.company}>\n          <h3>{work.company}</h3>\n          <p className=\"info\">\n            {work.title}\n            <span>&bull;</span> <em className=\"date\">{work.years}</em>\n          </p>\n          <p>{work.description}</p>\n        </div>\n      );\n    });\n\n    const skills = this.props.data.skills.map((skills) => {\n      const backgroundColor = this.getRandomColor();\n      const className = \"bar-expand \" + skills.name.toLowerCase();\n      const width = skills.level;\n\n      return (\n        <li key={skills.name}>\n          <span style={{ width, backgroundColor }} className={className}></span>\n          <em>{skills.name}</em>\n        </li>\n      );\n    });\n\n    return (\n      <section id=\"resume\">\n        <SlideIn>\n          <div className=\"row education\">\n            <div className=\"three columns header-col\">\n              <h1>\n                <span>Education</span>\n              </h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              <div className=\"row item\">\n                <div className=\"twelve columns\">{education}</div>\n              </div>\n            </div>\n          </div>\n        </SlideIn>\n\n        <SlideIn>\n          <div className=\"row work\">\n            <div className=\"three columns header-col\">\n              <h1>\n                <span>Work</span>\n              </h1>\n            </div>\n\n            <div className=\"nine columns main-col\">{work}</div>\n          </div>\n        </SlideIn>\n\n        <SlideIn>\n          <div className=\"row skill\">\n            <div className=\"three columns header-col\">\n              <h1>\n                <span>Skills</span>\n              </h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              <p>{skillmessage}</p>\n\n              <div className=\"bars\">\n                <ul className=\"skills\">{skills}</ul>\n              </div>\n            </div>\n          </div>\n        </SlideIn>\n      </section>\n    );\n  }\n}\n\nexport default Resume;\n","import React, { Component } from \"react\";\nimport FadeIn from \"./FadeIn\";\nimport SlideIn from \"./SlideIn\";\n\nclass Contact extends Component {\n  render() {\n    if (!this.props.data) return null;\n\n    const message = this.props.data.contactmessage;\n\n    return (\n      <section id=\"contact\">\n        <FadeIn>\n          <div className=\"row section-head\">\n            <div className=\"two columns header-col\">\n              <h1>\n                <span>Get In Touch.</span>\n              </h1>\n            </div>\n\n            <div className=\"ten columns\">\n              <p className=\"lead\">{message}</p>\n            </div>\n          </div>\n        </FadeIn>\n\n        <div className=\"row\">\n          <SlideIn>\n            <div className=\"twelve columns\">\n              <form id=\"contactForm\" name=\"contactForm\">\n                <fieldset>\n                  {/*\n                  <div>\n                    <label htmlFor=\"contactName\">\n                      Name <span className=\"required\">*</span>\n                    </label>\n                    <input\n                      type=\"text\"\n                      defaultValue=\"\"\n                      size=\"35\"\n                      id=\"contactName\"\n                      name=\"contactName\"\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                  <div>\n                    <label htmlFor=\"contactEmail\">\n                      Email <span className=\"required\">*</span>\n                    </label>\n                    <input\n                      type=\"text\"\n                      defaultValue=\"\"\n                      size=\"35\"\n                      id=\"contactEmail\"\n                      name=\"contactEmail\"\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                  */}\n                  <div>\n                    <label htmlFor=\"contactSubject\">Subject</label>\n                    <input\n                      type=\"text\"\n                      defaultValue=\"\"\n                      size=\"35\"\n                      id=\"contactSubject\"\n                      name=\"contactSubject\"\n                      onChange={this.handleChange}\n                    />\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"contactMessage\">\n                      Message <span className=\"required\">*</span>\n                    </label>\n                    <textarea\n                      cols=\"50\"\n                      rows=\"15\"\n                      id=\"contactMessage\"\n                      name=\"contactMessage\"\n                    ></textarea>\n                  </div>\n\n                  <div>\n                    <button className=\"submit\">Submit</button>\n                    <span id=\"image-loader\">\n                      <img alt=\"\" src=\"images/loader.gif\" />\n                    </span>\n                  </div>\n                </fieldset>\n              </form>\n\n              <div id=\"message-warning\"> An error has occurred. Consider emailing davidmash134@gmail.com from your regular email service.</div>\n              <div id=\"message-success\">\n                <i className=\"fa fa-check\"></i>Your message was sent, thank you!\n                <br />\n              </div>\n            </div>\n          </SlideIn>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport FadeIn from \"./FadeIn\";\n\nlet id = 0;\nclass Portfolio extends Component {\n  render() {\n    if (!this.props.data) return null;\n\n    const projects = this.props.data.projects.map(function (project) {\n      let projectImage = \"images/portfolio/\" + project.image;\n\n      return (\n        <button key={id++} className=\"columns portfolio-item\">\n          <div className=\"item-wrap\">\n            <a href={project.link} target=\"_blank\" rel=\"noopener noreferrer\">\n              <img className={\"project-link-image\"} alt={project.title} src={projectImage} />\n              <h5 style={{ textAlign: \"center\" }}>{project.title}</h5>\n              <div style={{ textAlign: \"center\" }}>{project.description}</div>\n            </a>\n          </div>\n        </button>\n      );\n    });\n\n    return (\n      <section id=\"portfolio\">\n        <FadeIn>\n          <div className=\"row\">\n            <div className=\"twelve columns collapsed\">\n              <h1>Here are some things that I have worked on.</h1>\n\n              <div\n                id=\"portfolio-wrapper\"\n                className=\"bgrid-quarters s-bgrid-thirds cf\"\n              >\n                {projects}\n              </div>\n            </div>\n          </div>\n        </FadeIn>\n      </section>\n    );\n  }\n}\n\nexport default Portfolio;\n","import React, { useRef, useEffect } from 'react';\n\nconst CanvasMouseEffect = () => {\n    const canvasRef = useRef(null);\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        const startOpacity = 0.3;\n        const startSize = 10;\n        const circles = [];\n        let x = 0;\n        let y = 0;\n        let r = 0;\n        let rDirection = false;\n        let g = 0;\n        let gDirection = false;\n        let b = 255;\n        let bDirection = false;\n\n        // handle mouse movement\n        const handleMouseMove = (event) => {\n            const distY = Math.abs(x - event.clientX);\n            const distX = Math.abs(y - event.clientY);    \n            x = event.clientX;\n            y = event.clientY;\n            const distance = Math.sqrt(distX * distX + distY * distY);\n            rDirection = rDirection? r <= 255: r <= 0;\n            r = r + (rDirection? 1: -1) * distance / 20;\n            gDirection = gDirection? g <= 255: g <= 0;\n            g = g + (rDirection? 2: -2) * distance / 20;\n            bDirection = bDirection? b <= 255: b <= 0;\n            b = b + (bDirection? 3: -3) * distance / 20;\n            circles.push({ x: x, y: y, opacity: startOpacity * Math.min(distance / 20.0, 1), size: startSize * Math.min(distance / 20.0, 1), r: r, g: g, b: b});\n        }\n\n        window.addEventListener('mousemove', handleMouseMove);\n\n        // animate the effect\n        const animate = () => {\n            // clear canvas\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n            // set canvas dimensions to window dimensions\n            canvas.width = window.innerWidth;\n            canvas.height = window.innerHeight;\n\n            // draw circles\n            for (let i = 0; i < circles.length; i++) {\n                const circle = circles[i];\n                if (circle.opacity <= 0) {\n                    circles.splice(i--, 1);\n                } else {\n                    ctx.beginPath();\n                    ctx.arc(circle.x, circle.y, circle.size, 0, 2 * Math.PI);\n                    ctx.fillStyle = `rgba(${circle.r}, ${circle.b}, ${circle.g}, ${circle.opacity})`;\n                    ctx.fill();\n                    circle.opacity -= (0.0010 * (circles.length + 1) / 2);\n                    circle.size += ((circles.length + 1) / 10);\n                }\n            }\n\n            // repeat animation\n            requestAnimationFrame(animate);\n        }\n\n        animate();\n\n        return () => {\n            window.removeEventListener('mousemove', handleMouseMove);\n        }\n    }, []);\n\n    return (\n        <canvas className={\"follow-cursor-canvas\"} ref={canvasRef} width={window.innerWidth} height={window.innerHeight} />\n    );\n};\n\nexport default CanvasMouseEffect;","import React, { Component } from \"react\";\n//import ReactGA from \"react-ga\";\nimport $ from \"jquery\";\nimport \"./App.css\";\nimport Header from \"./Components/Header\";\nimport Footer from \"./Components/Footer\";\nimport About from \"./Components/About\";\nimport Resume from \"./Components/Resume\";\nimport Contact from \"./Components/Contact\";\nimport Portfolio from \"./Components/Portfolio\";\nimport FollowCursor from \"./Components/FollowCursor\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      resumeData: {}\n    };\n\n    //ReactGA.initialize(\"UA-110570651-1\");\n    //ReactGA.pageview(window.location.pathname);\n  }\n\n  getResumeData() {\n    $.ajax({\n      url: \"./resumeData.json\",\n      dataType: \"json\",\n      cache: false,\n      success: function(data) {\n        this.setState({ resumeData: data });\n      }.bind(this),\n      error: function(xhr, status, err) {\n        console.log(err);\n        alert(err);\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.getResumeData();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <FollowCursor/>\n        <Header data={this.state.resumeData.main} />\n        <About data={this.state.resumeData.main} />\n        <Resume data={this.state.resumeData.resume} />\n        <Portfolio data={this.state.resumeData.portfolio} />\n        <Contact data={this.state.resumeData.main} />\n        <Footer data={this.state.resumeData.main} />\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}